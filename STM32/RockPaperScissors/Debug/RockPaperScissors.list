
RockPaperScissors.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .AI_RAM       000000ec  20000000  20000000  00030000  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  1 .AI_RAM2      00000000  10000000  10000000  000300ec  2**0
                  CONTENTS
  2 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .text         00007208  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       00001ccc  080073a0  080073a0  000173a0  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  0800906c  0800906c  000300ec  2**0
                  CONTENTS
  6 .ARM          00000000  0800906c  0800906c  000300ec  2**0
                  CONTENTS
  7 .preinit_array 00000000  0800906c  0800906c  000300ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000004  0800906c  0800906c  0001906c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000004  08009070  08009070  00019070  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000720  200000ec  08009074  000200ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          0000030c  2000080c  08009794  0002080c  2**2
                  ALLOC
 12 ._user_heap_stack 00001000  20000b18  08009794  00020b18  2**0
                  ALLOC
 13 .ARM.attributes 00000030  00000000  00000000  000300ec  2**0
                  CONTENTS, READONLY
 14 .comment      00000108  00000000  00000000  0003011c  2**0
                  CONTENTS, READONLY
 15 .debug_info   00014af5  00000000  00000000  00030224  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_abbrev 000034c4  00000000  00000000  00044d19  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_loclists 0000522b  00000000  00000000  000481dd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_aranges 00000a48  00000000  00000000  0004d408  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_rnglists 00000874  00000000  00000000  0004de50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_macro  00029572  00000000  00000000  0004e6c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line   0001243b  00000000  00000000  00077c36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_str    000f7dbd  00000000  00000000  0008a071  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_frame  00002ab0  00000000  00000000  00181e30  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_line_str 00000072  00000000  00000000  001848e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_ranges 00000020  00000000  00000000  00184952  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_loc    000000fa  00000000  00000000  00184972  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	2000080c 	.word	0x2000080c
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08007380 	.word	0x08007380

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	20000810 	.word	0x20000810
 80001cc:	08007380 	.word	0x08007380

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2f>:
 8000ba8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bac:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bb0:	bf24      	itt	cs
 8000bb2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bb6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bba:	d90d      	bls.n	8000bd8 <__aeabi_d2f+0x30>
 8000bbc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bc0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bc4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bc8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bcc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bd0:	bf08      	it	eq
 8000bd2:	f020 0001 	biceq.w	r0, r0, #1
 8000bd6:	4770      	bx	lr
 8000bd8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bdc:	d121      	bne.n	8000c22 <__aeabi_d2f+0x7a>
 8000bde:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000be2:	bfbc      	itt	lt
 8000be4:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000be8:	4770      	bxlt	lr
 8000bea:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000bee:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bf2:	f1c2 0218 	rsb	r2, r2, #24
 8000bf6:	f1c2 0c20 	rsb	ip, r2, #32
 8000bfa:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bfe:	fa20 f002 	lsr.w	r0, r0, r2
 8000c02:	bf18      	it	ne
 8000c04:	f040 0001 	orrne.w	r0, r0, #1
 8000c08:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c0c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c10:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c14:	ea40 000c 	orr.w	r0, r0, ip
 8000c18:	fa23 f302 	lsr.w	r3, r3, r2
 8000c1c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c20:	e7cc      	b.n	8000bbc <__aeabi_d2f+0x14>
 8000c22:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c26:	d107      	bne.n	8000c38 <__aeabi_d2f+0x90>
 8000c28:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c2c:	bf1e      	ittt	ne
 8000c2e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c32:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c36:	4770      	bxne	lr
 8000c38:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c3c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c40:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c44:	4770      	bx	lr
 8000c46:	bf00      	nop

08000c48 <rps_init>:
  for (int i = 0; i < len; i++) {
    normalized_data[i] = (in_data[i] - mean) / std;
  }
}

void rps_init(void) {
 8000c48:	b538      	push	{r3, r4, r5, lr}

  printf("--- AI ROCK PAPER SCISSORS ---\r\n");
 8000c4a:	4813      	ldr	r0, [pc, #76]	; (8000c98 <rps_init+0x50>)
  nn_name = ai_mnetwork_find(NULL, 0);
 8000c4c:	4d13      	ldr	r5, [pc, #76]	; (8000c9c <rps_init+0x54>)
  printf("[NETWORK FIND] NN_NAME: %s\n", nn_name);

  ai_error ai_err = ai_mnetwork_create(nn_name, &handle, NULL);
 8000c4e:	4c14      	ldr	r4, [pc, #80]	; (8000ca0 <rps_init+0x58>)
  printf("--- AI ROCK PAPER SCISSORS ---\r\n");
 8000c50:	f004 fb80 	bl	8005354 <puts>
  nn_name = ai_mnetwork_find(NULL, 0);
 8000c54:	2100      	movs	r1, #0
 8000c56:	4608      	mov	r0, r1
 8000c58:	f001 f900 	bl	8001e5c <ai_mnetwork_find>
 8000c5c:	4601      	mov	r1, r0
 8000c5e:	6028      	str	r0, [r5, #0]
  printf("[NETWORK FIND] NN_NAME: %s\n", nn_name);
 8000c60:	4810      	ldr	r0, [pc, #64]	; (8000ca4 <rps_init+0x5c>)
 8000c62:	f004 fb11 	bl	8005288 <iprintf>
  ai_error ai_err = ai_mnetwork_create(nn_name, &handle, NULL);
 8000c66:	4621      	mov	r1, r4
 8000c68:	6828      	ldr	r0, [r5, #0]
 8000c6a:	2200      	movs	r2, #0
 8000c6c:	f001 f904 	bl	8001e78 <ai_mnetwork_create>
  printf("[NETWORK CREATION] err.type: 0x%02X, err.code: 0x%02X\n",
 8000c70:	0a02      	lsrs	r2, r0, #8
 8000c72:	b2c1      	uxtb	r1, r0
 8000c74:	480c      	ldr	r0, [pc, #48]	; (8000ca8 <rps_init+0x60>)
 8000c76:	f004 fb07 	bl	8005288 <iprintf>
      ai_err.type, ai_err.code);

  bool success = ai_mnetwork_init(handle);
 8000c7a:	6820      	ldr	r0, [r4, #0]
 8000c7c:	f001 f926 	bl	8001ecc <ai_mnetwork_init>
 8000c80:	4601      	mov	r1, r0
  printf("[NETWORK INITIALIZATION] %d\n", success);  // 0: Failure, 1; Success
 8000c82:	480a      	ldr	r0, [pc, #40]	; (8000cac <rps_init+0x64>)
 8000c84:	f004 fb00 	bl	8005288 <iprintf>

  dct2_2d_init_f32(&S, WIDTH, HEIGHT);
 8000c88:	2208      	movs	r2, #8
}
 8000c8a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  dct2_2d_init_f32(&S, WIDTH, HEIGHT);
 8000c8e:	4808      	ldr	r0, [pc, #32]	; (8000cb0 <rps_init+0x68>)
 8000c90:	4611      	mov	r1, r2
 8000c92:	f000 b8bf 	b.w	8000e14 <dct2_2d_init_f32>
 8000c96:	bf00      	nop
 8000c98:	080073c0 	.word	0x080073c0
 8000c9c:	20000850 	.word	0x20000850
 8000ca0:	2000084c 	.word	0x2000084c
 8000ca4:	080073e0 	.word	0x080073e0
 8000ca8:	080073fc 	.word	0x080073fc
 8000cac:	08007433 	.word	0x08007433
 8000cb0:	20000828 	.word	0x20000828
 8000cb4:	00000000 	.word	0x00000000

08000cb8 <dct2_init_f32>:
 * @brief  Initialization function for the DCT2.
 * @param[in]     *S         points to an instance of floating-point DCT2 structure.
 * @param[in]     width      length of the DCT2.
 * @return        none.
 */
void dct2_init_f32(dct2_instance_f32 *S, uint16_t width) {
 8000cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000cbc:	ed2d 8b04 	vpush	{d8-d9}
 8000cc0:	460d      	mov	r5, r1
 8000cc2:	b083      	sub	sp, #12
 8000cc4:	4604      	mov	r4, r0
  float32_t *pDataW = NULL;
  float32_t *pDataW_I = NULL;
  float32_t *pDataX = NULL;
  S->width = width;

  arm_mat_init_f32(&(S->Y), width, 1, NULL);
 8000cc6:	2300      	movs	r3, #0
  S->width = width;
 8000cc8:	f820 1b04 	strh.w	r1, [r0], #4
  arm_mat_init_f32(&(S->Y), width, 1, NULL);
 8000ccc:	2201      	movs	r2, #1

  pDataW = (float32_t *) (calloc(width * width, sizeof(float32_t)));
 8000cce:	fb05 f605 	mul.w	r6, r5, r5
  arm_mat_init_f32(&(S->Y), width, 1, NULL);
 8000cd2:	f001 fa17 	bl	8002104 <arm_mat_init_f32>
  pDataW = (float32_t *) (calloc(width * width, sizeof(float32_t)));
 8000cd6:	2104      	movs	r1, #4
 8000cd8:	4630      	mov	r0, r6
 8000cda:	f003 fced 	bl	80046b8 <calloc>
  arm_mat_init_f32(&(S->W), width, width, pDataW);
 8000cde:	462a      	mov	r2, r5
  pDataW = (float32_t *) (calloc(width * width, sizeof(float32_t)));
 8000ce0:	4603      	mov	r3, r0
  arm_mat_init_f32(&(S->W), width, width, pDataW);
 8000ce2:	4629      	mov	r1, r5
 8000ce4:	f104 000c 	add.w	r0, r4, #12
 8000ce8:	f001 fa0c 	bl	8002104 <arm_mat_init_f32>

  pDataW_I = (float32_t *) (calloc(width * width, sizeof(float32_t)));
 8000cec:	2104      	movs	r1, #4
 8000cee:	4630      	mov	r0, r6
 8000cf0:	f003 fce2 	bl	80046b8 <calloc>
  arm_mat_init_f32(&(S->W_I), width, width, pDataW_I);
 8000cf4:	462a      	mov	r2, r5
  pDataW_I = (float32_t *) (calloc(width * width, sizeof(float32_t)));
 8000cf6:	4603      	mov	r3, r0
  arm_mat_init_f32(&(S->W_I), width, width, pDataW_I);
 8000cf8:	4629      	mov	r1, r5
 8000cfa:	f104 0014 	add.w	r0, r4, #20
 8000cfe:	f001 fa01 	bl	8002104 <arm_mat_init_f32>

  pDataX = (float32_t *) (calloc(width, sizeof(float32_t)));
 8000d02:	2104      	movs	r1, #4
 8000d04:	4628      	mov	r0, r5
 8000d06:	f003 fcd7 	bl	80046b8 <calloc>
  arm_mat_init_f32(&(S->X), width, 1, pDataX);
 8000d0a:	4629      	mov	r1, r5
  pDataX = (float32_t *) (calloc(width, sizeof(float32_t)));
 8000d0c:	4603      	mov	r3, r0
  arm_mat_init_f32(&(S->X), width, 1, pDataX);
 8000d0e:	2201      	movs	r2, #1
 8000d10:	f104 001c 	add.w	r0, r4, #28
 8000d14:	f001 f9f6 	bl	8002104 <arm_mat_init_f32>

  for (int k = 0; k < S->width; k++) {
 8000d18:	2500      	movs	r5, #0
 8000d1a:	8823      	ldrh	r3, [r4, #0]
 8000d1c:	42ab      	cmp	r3, r5
 8000d1e:	dd6a      	ble.n	8000df6 <dct2_init_f32+0x13e>
 8000d20:	006b      	lsls	r3, r5, #1
 8000d22:	462f      	mov	r7, r5
 8000d24:	9301      	str	r3, [sp, #4]
    for (int n = 0; n < S->width; n++) {
 8000d26:	2600      	movs	r6, #0
 8000d28:	e023      	b.n	8000d72 <dct2_init_f32+0xba>
      S->W.pData[k * S->width + n] = arm_cos_f32(
 8000d2a:	6923      	ldr	r3, [r4, #16]
 8000d2c:	fb05 620a 	mla	r2, r5, sl, r6
          (k * (2 * n + 1) * M_PI) / (2 * S->width));
 8000d30:	4638      	mov	r0, r7
      S->W.pData[k * S->width + n] = arm_cos_f32(
 8000d32:	eb03 0b82 	add.w	fp, r3, r2, lsl #2
          (k * (2 * n + 1) * M_PI) / (2 * S->width));
 8000d36:	f7ff fbf5 	bl	8000524 <__aeabi_i2d>
 8000d3a:	a334      	add	r3, pc, #208	; (adr r3, 8000e0c <dct2_init_f32+0x154>)
 8000d3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000d40:	f7ff fc5a 	bl	80005f8 <__aeabi_dmul>
 8000d44:	4680      	mov	r8, r0
 8000d46:	ea4f 004a 	mov.w	r0, sl, lsl #1
 8000d4a:	4689      	mov	r9, r1
 8000d4c:	f7ff fbea 	bl	8000524 <__aeabi_i2d>
 8000d50:	460b      	mov	r3, r1
 8000d52:	4602      	mov	r2, r0
 8000d54:	4649      	mov	r1, r9
 8000d56:	4640      	mov	r0, r8
 8000d58:	f7ff fd78 	bl	800084c <__aeabi_ddiv>
      S->W.pData[k * S->width + n] = arm_cos_f32(
 8000d5c:	f7ff ff24 	bl	8000ba8 <__aeabi_d2f>
 8000d60:	ee00 0a10 	vmov	s0, r0
 8000d64:	f001 f9d2 	bl	800210c <arm_cos_f32>
 8000d68:	9b01      	ldr	r3, [sp, #4]
 8000d6a:	ed8b 0a00 	vstr	s0, [fp]
    for (int n = 0; n < S->width; n++) {
 8000d6e:	3601      	adds	r6, #1
 8000d70:	441f      	add	r7, r3
 8000d72:	f8b4 a000 	ldrh.w	sl, [r4]
 8000d76:	45b2      	cmp	sl, r6
 8000d78:	dcd7      	bgt.n	8000d2a <dct2_init_f32+0x72>
  for (int k = 0; k < S->width; k++) {
 8000d7a:	3501      	adds	r5, #1
 8000d7c:	e7cd      	b.n	8000d1a <dct2_init_f32+0x62>
  return (k == 0) ? 1.0 / sqrt(2.0) : 1.0;
 8000d7e:	2d00      	cmp	r5, #0
  }

  for (int n = 0; n < S->width; n++) {
    for (int k = 0; k < S->width; k++) {
      S->W_I.pData[n * S->width + k] = c_k(k)
          * arm_cos_f32((k * (2 * n + 1) * M_PI) / (2 * S->width));
 8000d80:	4638      	mov	r0, r7
  return (k == 0) ? 1.0 / sqrt(2.0) : 1.0;
 8000d82:	bf14      	ite	ne
 8000d84:	eeb0 9a48 	vmovne.f32	s18, s16
 8000d88:	eeb0 9a68 	vmoveq.f32	s18, s17
          * arm_cos_f32((k * (2 * n + 1) * M_PI) / (2 * S->width));
 8000d8c:	f7ff fbca 	bl	8000524 <__aeabi_i2d>
 8000d90:	a31e      	add	r3, pc, #120	; (adr r3, 8000e0c <dct2_init_f32+0x154>)
 8000d92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000d96:	f7ff fc2f 	bl	80005f8 <__aeabi_dmul>
 8000d9a:	4680      	mov	r8, r0
 8000d9c:	ea4f 004a 	mov.w	r0, sl, lsl #1
 8000da0:	4689      	mov	r9, r1
 8000da2:	f7ff fbbf 	bl	8000524 <__aeabi_i2d>
 8000da6:	4602      	mov	r2, r0
 8000da8:	460b      	mov	r3, r1
 8000daa:	4640      	mov	r0, r8
 8000dac:	4649      	mov	r1, r9
 8000dae:	f7ff fd4d 	bl	800084c <__aeabi_ddiv>
 8000db2:	f7ff fef9 	bl	8000ba8 <__aeabi_d2f>
 8000db6:	ee00 0a10 	vmov	s0, r0
 8000dba:	f001 f9a7 	bl	800210c <arm_cos_f32>
      S->W_I.pData[n * S->width + k] = c_k(k)
 8000dbe:	8822      	ldrh	r2, [r4, #0]
 8000dc0:	69a3      	ldr	r3, [r4, #24]
 8000dc2:	fb06 5202 	mla	r2, r6, r2, r5
          * arm_cos_f32((k * (2 * n + 1) * M_PI) / (2 * S->width));
 8000dc6:	ee20 0a09 	vmul.f32	s0, s0, s18
      S->W_I.pData[n * S->width + k] = c_k(k)
 8000dca:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8000dce:	ed83 0a00 	vstr	s0, [r3]
    for (int k = 0; k < S->width; k++) {
 8000dd2:	3501      	adds	r5, #1
 8000dd4:	445f      	add	r7, fp
 8000dd6:	f8b4 a000 	ldrh.w	sl, [r4]
 8000dda:	45aa      	cmp	sl, r5
 8000ddc:	dccf      	bgt.n	8000d7e <dct2_init_f32+0xc6>
  for (int n = 0; n < S->width; n++) {
 8000dde:	3601      	adds	r6, #1
 8000de0:	8823      	ldrh	r3, [r4, #0]
 8000de2:	42b3      	cmp	r3, r6
 8000de4:	dd0b      	ble.n	8000dfe <dct2_init_f32+0x146>
 8000de6:	0073      	lsls	r3, r6, #1
 8000de8:	2700      	movs	r7, #0
 8000dea:	f103 0b01 	add.w	fp, r3, #1
    for (int k = 0; k < S->width; k++) {
 8000dee:	463d      	mov	r5, r7
  return (k == 0) ? 1.0 / sqrt(2.0) : 1.0;
 8000df0:	eeb7 8a00 	vmov.f32	s16, #112	; 0x3f800000  1.0
 8000df4:	e7ef      	b.n	8000dd6 <dct2_init_f32+0x11e>
 8000df6:	eddf 8a04 	vldr	s17, [pc, #16]	; 8000e08 <dct2_init_f32+0x150>
  for (int n = 0; n < S->width; n++) {
 8000dfa:	2600      	movs	r6, #0
 8000dfc:	e7f0      	b.n	8000de0 <dct2_init_f32+0x128>
    }
  }

}
 8000dfe:	b003      	add	sp, #12
 8000e00:	ecbd 8b04 	vpop	{d8-d9}
 8000e04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e08:	3f3504f3 	.word	0x3f3504f3
 8000e0c:	54442d18 	.word	0x54442d18
 8000e10:	400921fb 	.word	0x400921fb

08000e14 <dct2_2d_init_f32>:
 * @param[in]     *S         points to an instance of floating-point DCT2 structure.
 * @param[in]     height     DCT2 2D width.
 * @param[in]     width      DCT2 2D height.
 * @return        none.
 */
void dct2_2d_init_f32(dct2_instance_f32 *S, uint16_t height, uint16_t width) {
 8000e14:	b538      	push	{r3, r4, r5, lr}
 8000e16:	4604      	mov	r4, r0
 8000e18:	460d      	mov	r5, r1
  dct2_init_f32(S, width);
 8000e1a:	4611      	mov	r1, r2
 8000e1c:	f7ff ff4c 	bl	8000cb8 <dct2_init_f32>
  S->height = height;
 8000e20:	8065      	strh	r5, [r4, #2]
}
 8000e22:	bd38      	pop	{r3, r4, r5, pc}

08000e24 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000e24:	b500      	push	{lr}
 8000e26:	b097      	sub	sp, #92	; 0x5c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000e28:	2244      	movs	r2, #68	; 0x44
 8000e2a:	2100      	movs	r1, #0
 8000e2c:	a805      	add	r0, sp, #20
 8000e2e:	f004 fb71 	bl	8005514 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000e32:	2214      	movs	r2, #20
 8000e34:	2100      	movs	r1, #0
 8000e36:	4668      	mov	r0, sp
 8000e38:	f004 fb6c 	bl	8005514 <memset>

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8000e3c:	f44f 7000 	mov.w	r0, #512	; 0x200
 8000e40:	f000 fb42 	bl	80014c8 <HAL_PWREx_ControlVoltageScaling>
 8000e44:	b108      	cbz	r0, 8000e4a <SystemClock_Config+0x26>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000e46:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000e48:	e7fe      	b.n	8000e48 <SystemClock_Config+0x24>
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000e4a:	2210      	movs	r2, #16
 8000e4c:	f44f 7180 	mov.w	r1, #256	; 0x100
  RCC_OscInitStruct.PLL.PLLN = 10;
 8000e50:	2001      	movs	r0, #1
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8000e52:	e9cd 1208 	strd	r1, r2, [sp, #32]
  RCC_OscInitStruct.PLL.PLLN = 10;
 8000e56:	220a      	movs	r2, #10
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000e58:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLN = 10;
 8000e5a:	e9cd 0211 	strd	r0, r2, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 8000e5e:	2207      	movs	r2, #7
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000e60:	a805      	add	r0, sp, #20
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8000e62:	e9cd 330f 	strd	r3, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 8000e66:	e9cd 2313 	strd	r2, r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8000e6a:	9305      	str	r3, [sp, #20]
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8000e6c:	9315      	str	r3, [sp, #84]	; 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000e6e:	f000 fbf1 	bl	8001654 <HAL_RCC_OscConfig>
 8000e72:	b108      	cbz	r0, 8000e78 <SystemClock_Config+0x54>
 8000e74:	b672      	cpsid	i
  while (1)
 8000e76:	e7fe      	b.n	8000e76 <SystemClock_Config+0x52>
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8000e78:	e9cd 0002 	strd	r0, r0, [sp, #8]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000e7c:	220f      	movs	r2, #15
 8000e7e:	2303      	movs	r3, #3
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000e80:	9004      	str	r0, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000e82:	2104      	movs	r1, #4
 8000e84:	4668      	mov	r0, sp
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000e86:	e9cd 2300 	strd	r2, r3, [sp]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 8000e8a:	f000 fe63 	bl	8001b54 <HAL_RCC_ClockConfig>
 8000e8e:	b108      	cbz	r0, 8000e94 <SystemClock_Config+0x70>
 8000e90:	b672      	cpsid	i
  while (1)
 8000e92:	e7fe      	b.n	8000e92 <SystemClock_Config+0x6e>
}
 8000e94:	b017      	add	sp, #92	; 0x5c
 8000e96:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08000e9c <main>:
{
 8000e9c:	b500      	push	{lr}
 8000e9e:	b08b      	sub	sp, #44	; 0x2c
  HAL_Init();
 8000ea0:	f000 f948 	bl	8001134 <HAL_Init>
  SystemClock_Config();
 8000ea4:	f7ff ffbe 	bl	8000e24 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000ea8:	2214      	movs	r2, #20
 8000eaa:	2100      	movs	r1, #0
 8000eac:	eb0d 0002 	add.w	r0, sp, r2
 8000eb0:	f004 fb30 	bl	8005514 <memset>
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000eb4:	4b28      	ldr	r3, [pc, #160]	; (8000f58 <main+0xbc>)
 8000eb6:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8000eb8:	f042 0204 	orr.w	r2, r2, #4
 8000ebc:	64da      	str	r2, [r3, #76]	; 0x4c
 8000ebe:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8000ec0:	f002 0204 	and.w	r2, r2, #4
 8000ec4:	9201      	str	r2, [sp, #4]
 8000ec6:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000ec8:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8000eca:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8000ece:	64da      	str	r2, [r3, #76]	; 0x4c
 8000ed0:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8000ed2:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8000ed6:	9202      	str	r2, [sp, #8]
 8000ed8:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000eda:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8000edc:	f042 0201 	orr.w	r2, r2, #1
 8000ee0:	64da      	str	r2, [r3, #76]	; 0x4c
 8000ee2:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8000ee4:	f002 0201 	and.w	r2, r2, #1
 8000ee8:	9203      	str	r2, [sp, #12]
 8000eea:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000eec:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8000eee:	f042 0202 	orr.w	r2, r2, #2
 8000ef2:	64da      	str	r2, [r3, #76]	; 0x4c
 8000ef4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000ef6:	f003 0302 	and.w	r3, r3, #2
 8000efa:	9304      	str	r3, [sp, #16]
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8000efc:	2200      	movs	r2, #0
 8000efe:	2120      	movs	r1, #32
 8000f00:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f04:	2400      	movs	r4, #0
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000f06:	9b04      	ldr	r3, [sp, #16]
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8000f08:	f000 fad0 	bl	80014ac <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000f0c:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000f10:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000f14:	4811      	ldr	r0, [pc, #68]	; (8000f5c <main+0xc0>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f16:	9407      	str	r4, [sp, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000f18:	a905      	add	r1, sp, #20
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000f1a:	e9cd 2305 	strd	r2, r3, [sp, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000f1e:	2501      	movs	r5, #1
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8000f20:	f000 f9e6 	bl	80012f0 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000f24:	2320      	movs	r3, #32
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8000f26:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8000f2a:	a905      	add	r1, sp, #20
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000f2c:	e9cd 3505 	strd	r3, r5, [sp, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000f30:	e9cd 4407 	strd	r4, r4, [sp, #28]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8000f34:	f000 f9dc 	bl	80012f0 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8000f38:	4809      	ldr	r0, [pc, #36]	; (8000f60 <main+0xc4>)
 8000f3a:	4b0a      	ldr	r3, [pc, #40]	; (8000f64 <main+0xc8>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 8000f3c:	8084      	strh	r4, [r0, #4]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 8000f3e:	e9c0 4405 	strd	r4, r4, [r0, #20]
  hcrc.Instance = CRC;
 8000f42:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 8000f44:	6205      	str	r5, [r0, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8000f46:	f000 f975 	bl	8001234 <HAL_CRC_Init>
 8000f4a:	b108      	cbz	r0, 8000f50 <main+0xb4>
 8000f4c:	b672      	cpsid	i
  while (1)
 8000f4e:	e7fe      	b.n	8000f4e <main+0xb2>
  rps_init();
 8000f50:	f7ff fe7a 	bl	8000c48 <rps_init>
  while (1)
 8000f54:	e7fe      	b.n	8000f54 <main+0xb8>
 8000f56:	bf00      	nop
 8000f58:	40021000 	.word	0x40021000
 8000f5c:	48000800 	.word	0x48000800
 8000f60:	20000854 	.word	0x20000854
 8000f64:	40023000 	.word	0x40023000

08000f68 <_write>:
int _write(int file, char *ptr, int len) {
 8000f68:	b510      	push	{r4, lr}
  HAL_UART_Transmit(&huart2, (uint8_t *) ptr, (uint16_t) len, 0xFFFFFFFF);
 8000f6a:	f04f 33ff 	mov.w	r3, #4294967295
int _write(int file, char *ptr, int len) {
 8000f6e:	4614      	mov	r4, r2
  HAL_UART_Transmit(&huart2, (uint8_t *) ptr, (uint16_t) len, 0xFFFFFFFF);
 8000f70:	4802      	ldr	r0, [pc, #8]	; (8000f7c <_write+0x14>)
 8000f72:	b292      	uxth	r2, r2
 8000f74:	f000 fef6 	bl	8001d64 <HAL_UART_Transmit>
}
 8000f78:	4620      	mov	r0, r4
 8000f7a:	bd10      	pop	{r4, pc}
 8000f7c:	20000878 	.word	0x20000878

08000f80 <HAL_MspInit>:
{
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000f80:	4b0a      	ldr	r3, [pc, #40]	; (8000fac <HAL_MspInit+0x2c>)
 8000f82:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8000f84:	f042 0201 	orr.w	r2, r2, #1
 8000f88:	661a      	str	r2, [r3, #96]	; 0x60
 8000f8a:	6e1a      	ldr	r2, [r3, #96]	; 0x60
{
 8000f8c:	b082      	sub	sp, #8
  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000f8e:	f002 0201 	and.w	r2, r2, #1
 8000f92:	9200      	str	r2, [sp, #0]
 8000f94:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000f96:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8000f98:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000f9c:	659a      	str	r2, [r3, #88]	; 0x58
 8000f9e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8000fa0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000fa4:	9301      	str	r3, [sp, #4]
 8000fa6:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000fa8:	b002      	add	sp, #8
 8000faa:	4770      	bx	lr
 8000fac:	40021000 	.word	0x40021000

08000fb0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8000fb0:	6802      	ldr	r2, [r0, #0]
 8000fb2:	4b08      	ldr	r3, [pc, #32]	; (8000fd4 <HAL_CRC_MspInit+0x24>)
 8000fb4:	429a      	cmp	r2, r3
{
 8000fb6:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8000fb8:	d10a      	bne.n	8000fd0 <HAL_CRC_MspInit+0x20>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8000fba:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
 8000fbe:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8000fc0:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000fc4:	649a      	str	r2, [r3, #72]	; 0x48
 8000fc6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8000fc8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8000fcc:	9301      	str	r3, [sp, #4]
 8000fce:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8000fd0:	b002      	add	sp, #8
 8000fd2:	4770      	bx	lr
 8000fd4:	40023000 	.word	0x40023000

08000fd8 <NMI_Handler>:
{
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000fd8:	e7fe      	b.n	8000fd8 <NMI_Handler>

08000fda <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000fda:	e7fe      	b.n	8000fda <HardFault_Handler>

08000fdc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000fdc:	e7fe      	b.n	8000fdc <MemManage_Handler>

08000fde <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000fde:	e7fe      	b.n	8000fde <BusFault_Handler>

08000fe0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000fe0:	e7fe      	b.n	8000fe0 <UsageFault_Handler>

08000fe2 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000fe2:	4770      	bx	lr

08000fe4 <DebugMon_Handler>:
 8000fe4:	4770      	bx	lr

08000fe6 <PendSV_Handler>:
 8000fe6:	4770      	bx	lr

08000fe8 <SysTick_Handler>:
void SysTick_Handler(void)
{
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000fe8:	f000 b8ba 	b.w	8001160 <HAL_IncTick>

08000fec <_getpid>:
}

int _getpid(void)
{
  return 1;
}
 8000fec:	2001      	movs	r0, #1
 8000fee:	4770      	bx	lr

08000ff0 <_kill>:

int _kill(int pid, int sig)
{
 8000ff0:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8000ff2:	f004 fb03 	bl	80055fc <__errno>
 8000ff6:	2316      	movs	r3, #22
 8000ff8:	6003      	str	r3, [r0, #0]
  return -1;
}
 8000ffa:	f04f 30ff 	mov.w	r0, #4294967295
 8000ffe:	bd08      	pop	{r3, pc}

08001000 <_exit>:

void _exit (int status)
{
 8001000:	b508      	push	{r3, lr}
  errno = EINVAL;
 8001002:	f004 fafb 	bl	80055fc <__errno>
 8001006:	2316      	movs	r3, #22
 8001008:	6003      	str	r3, [r0, #0]
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
 800100a:	e7fe      	b.n	800100a <_exit+0xa>

0800100c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800100c:	b570      	push	{r4, r5, r6, lr}
 800100e:	460d      	mov	r5, r1
 8001010:	4614      	mov	r4, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001012:	460e      	mov	r6, r1
 8001014:	1b73      	subs	r3, r6, r5
 8001016:	429c      	cmp	r4, r3
 8001018:	dc01      	bgt.n	800101e <_read+0x12>
  {
    *ptr++ = __io_getchar();
  }

  return len;
}
 800101a:	4620      	mov	r0, r4
 800101c:	bd70      	pop	{r4, r5, r6, pc}
    *ptr++ = __io_getchar();
 800101e:	f3af 8000 	nop.w
 8001022:	f806 0b01 	strb.w	r0, [r6], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001026:	e7f5      	b.n	8001014 <_read+0x8>

08001028 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8001028:	f04f 30ff 	mov.w	r0, #4294967295
 800102c:	4770      	bx	lr

0800102e <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 800102e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001032:	604b      	str	r3, [r1, #4]
  return 0;
}
 8001034:	2000      	movs	r0, #0
 8001036:	4770      	bx	lr

08001038 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8001038:	2001      	movs	r0, #1
 800103a:	4770      	bx	lr

0800103c <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 800103c:	2000      	movs	r0, #0
 800103e:	4770      	bx	lr

08001040 <_sbrk>:
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001040:	4a0b      	ldr	r2, [pc, #44]	; (8001070 <_sbrk+0x30>)
 8001042:	6811      	ldr	r1, [r2, #0]
{
 8001044:	b510      	push	{r4, lr}
 8001046:	4603      	mov	r3, r0
  if (NULL == __sbrk_heap_end)
 8001048:	b909      	cbnz	r1, 800104e <_sbrk+0xe>
  {
    __sbrk_heap_end = &_end;
 800104a:	490a      	ldr	r1, [pc, #40]	; (8001074 <_sbrk+0x34>)
 800104c:	6011      	str	r1, [r2, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800104e:	6810      	ldr	r0, [r2, #0]
 8001050:	4909      	ldr	r1, [pc, #36]	; (8001078 <_sbrk+0x38>)
 8001052:	4c0a      	ldr	r4, [pc, #40]	; (800107c <_sbrk+0x3c>)
 8001054:	4403      	add	r3, r0
 8001056:	1b09      	subs	r1, r1, r4
 8001058:	428b      	cmp	r3, r1
 800105a:	d906      	bls.n	800106a <_sbrk+0x2a>
  {
    errno = ENOMEM;
 800105c:	f004 face 	bl	80055fc <__errno>
 8001060:	230c      	movs	r3, #12
 8001062:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 8001064:	f04f 30ff 	mov.w	r0, #4294967295

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;

  return (void *)prev_heap_end;
}
 8001068:	bd10      	pop	{r4, pc}
  __sbrk_heap_end += incr;
 800106a:	6013      	str	r3, [r2, #0]
  return (void *)prev_heap_end;
 800106c:	e7fc      	b.n	8001068 <_sbrk+0x28>
 800106e:	bf00      	nop
 8001070:	200008fc 	.word	0x200008fc
 8001074:	20000b18 	.word	0x20000b18
 8001078:	20018000 	.word	0x20018000
 800107c:	00000800 	.word	0x00000800

08001080 <SystemInit>:
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 8001080:	4a03      	ldr	r2, [pc, #12]	; (8001090 <SystemInit+0x10>)
 8001082:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001086:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800108a:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
#endif
}
 800108e:	4770      	bx	lr
 8001090:	e000ed00 	.word	0xe000ed00

08001094 <Reset_Handler>:

    .section	.text.Reset_Handler
	.weak	Reset_Handler
	.type	Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack    /* Set stack pointer */
 8001094:	f8df d034 	ldr.w	sp, [pc, #52]	; 80010cc <LoopForever+0x2>

/* Call the clock system initialization function.*/
    bl  SystemInit
 8001098:	f7ff fff2 	bl	8001080 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800109c:	480c      	ldr	r0, [pc, #48]	; (80010d0 <LoopForever+0x6>)
  ldr r1, =_edata
 800109e:	490d      	ldr	r1, [pc, #52]	; (80010d4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80010a0:	4a0d      	ldr	r2, [pc, #52]	; (80010d8 <LoopForever+0xe>)
  movs r3, #0
 80010a2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80010a4:	e002      	b.n	80010ac <LoopCopyDataInit>

080010a6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80010a6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80010a8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80010aa:	3304      	adds	r3, #4

080010ac <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80010ac:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80010ae:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80010b0:	d3f9      	bcc.n	80010a6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80010b2:	4a0a      	ldr	r2, [pc, #40]	; (80010dc <LoopForever+0x12>)
  ldr r4, =_ebss
 80010b4:	4c0a      	ldr	r4, [pc, #40]	; (80010e0 <LoopForever+0x16>)
  movs r3, #0
 80010b6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80010b8:	e001      	b.n	80010be <LoopFillZerobss>

080010ba <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80010ba:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80010bc:	3204      	adds	r2, #4

080010be <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80010be:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80010c0:	d3fb      	bcc.n	80010ba <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80010c2:	f004 faa1 	bl	8005608 <__libc_init_array>
/* Call the application's entry point.*/
	bl	main
 80010c6:	f7ff fee9 	bl	8000e9c <main>

080010ca <LoopForever>:

LoopForever:
    b LoopForever
 80010ca:	e7fe      	b.n	80010ca <LoopForever>
  ldr   sp, =_estack    /* Set stack pointer */
 80010cc:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80010d0:	200000ec 	.word	0x200000ec
  ldr r1, =_edata
 80010d4:	2000080c 	.word	0x2000080c
  ldr r2, =_sidata
 80010d8:	08009074 	.word	0x08009074
  ldr r2, =_sbss
 80010dc:	2000080c 	.word	0x2000080c
  ldr r4, =_ebss
 80010e0:	20000b18 	.word	0x20000b18

080010e4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section	.text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
	b	Infinite_Loop
 80010e4:	e7fe      	b.n	80010e4 <ADC1_2_IRQHandler>
	...

080010e8 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority  Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80010e8:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef  status = HAL_OK;

  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that doesn't take the value zero)*/
  if ((uint32_t)uwTickFreq != 0U)
 80010ea:	4b0f      	ldr	r3, [pc, #60]	; (8001128 <HAL_InitTick+0x40>)
 80010ec:	781a      	ldrb	r2, [r3, #0]
{
 80010ee:	4605      	mov	r5, r0
  if ((uint32_t)uwTickFreq != 0U)
 80010f0:	b90a      	cbnz	r2, 80010f6 <HAL_InitTick+0xe>
      status = HAL_ERROR;
    }
  }
  else
  {
    status = HAL_ERROR;
 80010f2:	2001      	movs	r0, #1
  }

  /* Return function status */
  return status;
}
 80010f4:	bd38      	pop	{r3, r4, r5, pc}
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / (uint32_t)uwTickFreq)) == 0U)
 80010f6:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80010fa:	fbb3 f3f2 	udiv	r3, r3, r2
 80010fe:	4a0b      	ldr	r2, [pc, #44]	; (800112c <HAL_InitTick+0x44>)
 8001100:	6810      	ldr	r0, [r2, #0]
 8001102:	fbb0 f0f3 	udiv	r0, r0, r3
 8001106:	f000 f881 	bl	800120c <HAL_SYSTICK_Config>
 800110a:	4604      	mov	r4, r0
 800110c:	2800      	cmp	r0, #0
 800110e:	d1f0      	bne.n	80010f2 <HAL_InitTick+0xa>
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001110:	2d0f      	cmp	r5, #15
 8001112:	d8ee      	bhi.n	80010f2 <HAL_InitTick+0xa>
        HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001114:	4602      	mov	r2, r0
 8001116:	4629      	mov	r1, r5
 8001118:	f04f 30ff 	mov.w	r0, #4294967295
 800111c:	f000 f844 	bl	80011a8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8001120:	4b03      	ldr	r3, [pc, #12]	; (8001130 <HAL_InitTick+0x48>)
 8001122:	4620      	mov	r0, r4
 8001124:	601d      	str	r5, [r3, #0]
  return status;
 8001126:	e7e5      	b.n	80010f4 <HAL_InitTick+0xc>
 8001128:	200000f0 	.word	0x200000f0
 800112c:	200000ec 	.word	0x200000ec
 8001130:	200000f4 	.word	0x200000f4

08001134 <HAL_Init>:
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001134:	4a09      	ldr	r2, [pc, #36]	; (800115c <HAL_Init+0x28>)
 8001136:	6813      	ldr	r3, [r2, #0]
 8001138:	f443 7380 	orr.w	r3, r3, #256	; 0x100
{
 800113c:	b510      	push	{r4, lr}
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800113e:	2003      	movs	r0, #3
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001140:	6013      	str	r3, [r2, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001142:	f000 f81f 	bl	8001184 <HAL_NVIC_SetPriorityGrouping>
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8001146:	2000      	movs	r0, #0
 8001148:	f7ff ffce 	bl	80010e8 <HAL_InitTick>
 800114c:	4604      	mov	r4, r0
 800114e:	b918      	cbnz	r0, 8001158 <HAL_Init+0x24>
    HAL_MspInit();
 8001150:	f7ff ff16 	bl	8000f80 <HAL_MspInit>
}
 8001154:	4620      	mov	r0, r4
 8001156:	bd10      	pop	{r4, pc}
    status = HAL_ERROR;
 8001158:	2401      	movs	r4, #1
 800115a:	e7fb      	b.n	8001154 <HAL_Init+0x20>
 800115c:	40022000 	.word	0x40022000

08001160 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
 8001160:	4a03      	ldr	r2, [pc, #12]	; (8001170 <HAL_IncTick+0x10>)
 8001162:	4b04      	ldr	r3, [pc, #16]	; (8001174 <HAL_IncTick+0x14>)
 8001164:	6811      	ldr	r1, [r2, #0]
 8001166:	781b      	ldrb	r3, [r3, #0]
 8001168:	440b      	add	r3, r1
 800116a:	6013      	str	r3, [r2, #0]
}
 800116c:	4770      	bx	lr
 800116e:	bf00      	nop
 8001170:	20000900 	.word	0x20000900
 8001174:	200000f0 	.word	0x200000f0

08001178 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8001178:	4b01      	ldr	r3, [pc, #4]	; (8001180 <HAL_GetTick+0x8>)
 800117a:	6818      	ldr	r0, [r3, #0]
}
 800117c:	4770      	bx	lr
 800117e:	bf00      	nop
 8001180:	20000900 	.word	0x20000900

08001184 <HAL_NVIC_SetPriorityGrouping>:
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8001184:	4907      	ldr	r1, [pc, #28]	; (80011a4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8001186:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001188:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800118c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800118e:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8001190:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8001194:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8001196:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001198:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 800119c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80011a0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80011a2:	4770      	bx	lr
 80011a4:	e000ed00 	.word	0xe000ed00

080011a8 <HAL_NVIC_SetPriority>:
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80011a8:	4b16      	ldr	r3, [pc, #88]	; (8001204 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80011aa:	b530      	push	{r4, r5, lr}
 80011ac:	68dc      	ldr	r4, [r3, #12]
 80011ae:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80011b2:	f1c4 0307 	rsb	r3, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80011b6:	1d25      	adds	r5, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80011b8:	2b04      	cmp	r3, #4
 80011ba:	bf28      	it	cs
 80011bc:	2304      	movcs	r3, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80011be:	2d06      	cmp	r5, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011c0:	f04f 35ff 	mov.w	r5, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80011c4:	bf8c      	ite	hi
 80011c6:	3c03      	subhi	r4, #3
 80011c8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011ca:	fa05 f303 	lsl.w	r3, r5, r3
 80011ce:	ea21 0303 	bic.w	r3, r1, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80011d2:	40a5      	lsls	r5, r4
 80011d4:	ea22 0205 	bic.w	r2, r2, r5
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011d8:	40a3      	lsls	r3, r4
  if ((int32_t)(IRQn) >= 0)
 80011da:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011dc:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011e0:	bfac      	ite	ge
 80011e2:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011e6:	4a08      	ldrlt	r2, [pc, #32]	; (8001208 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011e8:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011ec:	bfb8      	it	lt
 80011ee:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011f2:	b2db      	uxtb	r3, r3
 80011f4:	bfaa      	itet	ge
 80011f6:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011fa:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80011fc:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8001200:	bd30      	pop	{r4, r5, pc}
 8001202:	bf00      	nop
 8001204:	e000ed00 	.word	0xe000ed00
 8001208:	e000ed14 	.word	0xe000ed14

0800120c <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800120c:	3801      	subs	r0, #1
 800120e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8001212:	d20b      	bcs.n	800122c <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8001214:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001218:	4a05      	ldr	r2, [pc, #20]	; (8001230 <HAL_SYSTICK_Config+0x24>)
  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800121a:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800121c:	21f0      	movs	r1, #240	; 0xf0
 800121e:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001222:	2000      	movs	r0, #0
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001224:	2207      	movs	r2, #7
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001226:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001228:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800122a:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 800122c:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 800122e:	4770      	bx	lr
 8001230:	e000ed00 	.word	0xe000ed00

08001234 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8001234:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8001236:	4604      	mov	r4, r0
 8001238:	b908      	cbnz	r0, 800123e <HAL_CRC_Init+0xa>
  {
    return HAL_ERROR;
 800123a:	2001      	movs	r0, #1
  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
}
 800123c:	bd10      	pop	{r4, pc}
  if (hcrc->State == HAL_CRC_STATE_RESET)
 800123e:	7f43      	ldrb	r3, [r0, #29]
 8001240:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8001244:	b913      	cbnz	r3, 800124c <HAL_CRC_Init+0x18>
    hcrc->Lock = HAL_UNLOCKED;
 8001246:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
 8001248:	f7ff feb2 	bl	8000fb0 <HAL_CRC_MspInit>
  hcrc->State = HAL_CRC_STATE_BUSY;
 800124c:	2302      	movs	r3, #2
 800124e:	7763      	strb	r3, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 8001250:	7923      	ldrb	r3, [r4, #4]
 8001252:	b9e3      	cbnz	r3, 800128e <HAL_CRC_Init+0x5a>
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8001254:	6823      	ldr	r3, [r4, #0]
 8001256:	4a13      	ldr	r2, [pc, #76]	; (80012a4 <HAL_CRC_Init+0x70>)
 8001258:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 800125a:	689a      	ldr	r2, [r3, #8]
 800125c:	f022 0218 	bic.w	r2, r2, #24
 8001260:	609a      	str	r2, [r3, #8]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8001262:	7962      	ldrb	r2, [r4, #5]
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8001264:	6823      	ldr	r3, [r4, #0]
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 8001266:	b9d2      	cbnz	r2, 800129e <HAL_CRC_Init+0x6a>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8001268:	f04f 32ff 	mov.w	r2, #4294967295
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 800126c:	611a      	str	r2, [r3, #16]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 800126e:	689a      	ldr	r2, [r3, #8]
 8001270:	6961      	ldr	r1, [r4, #20]
 8001272:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8001276:	430a      	orrs	r2, r1
 8001278:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 800127a:	689a      	ldr	r2, [r3, #8]
 800127c:	69a1      	ldr	r1, [r4, #24]
 800127e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8001282:	430a      	orrs	r2, r1
 8001284:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
 8001286:	2301      	movs	r3, #1
 8001288:	7763      	strb	r3, [r4, #29]
  return HAL_OK;
 800128a:	2000      	movs	r0, #0
 800128c:	e7d6      	b.n	800123c <HAL_CRC_Init+0x8>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 800128e:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8001292:	4620      	mov	r0, r4
 8001294:	f000 f808 	bl	80012a8 <HAL_CRCEx_Polynomial_Set>
 8001298:	2800      	cmp	r0, #0
 800129a:	d0e2      	beq.n	8001262 <HAL_CRC_Init+0x2e>
 800129c:	e7cd      	b.n	800123a <HAL_CRC_Init+0x6>
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 800129e:	6922      	ldr	r2, [r4, #16]
 80012a0:	e7e4      	b.n	800126c <HAL_CRC_Init+0x38>
 80012a2:	bf00      	nop
 80012a4:	04c11db7 	.word	0x04c11db7

080012a8 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 80012a8:	b510      	push	{r4, lr}
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 80012aa:	231f      	movs	r3, #31
   * definition. HAL_ERROR is reported if Pol degree is
   * larger than that indicated by PolyLength.
   * Look for MSB position: msb will contain the degree of
   *  the second to the largest polynomial member. E.g., for
   *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
  while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 80012ac:	3b01      	subs	r3, #1
 80012ae:	d31c      	bcc.n	80012ea <HAL_CRCEx_Polynomial_Set+0x42>
 80012b0:	fa21 f403 	lsr.w	r4, r1, r3
 80012b4:	07e4      	lsls	r4, r4, #31
 80012b6:	d5f9      	bpl.n	80012ac <HAL_CRCEx_Polynomial_Set+0x4>
  {
  }

  switch (PolyLength)
 80012b8:	2a10      	cmp	r2, #16
 80012ba:	d012      	beq.n	80012e2 <HAL_CRCEx_Polynomial_Set+0x3a>
 80012bc:	d804      	bhi.n	80012c8 <HAL_CRCEx_Polynomial_Set+0x20>
 80012be:	b13a      	cbz	r2, 80012d0 <HAL_CRCEx_Polynomial_Set+0x28>
 80012c0:	2a08      	cmp	r2, #8
 80012c2:	d010      	beq.n	80012e6 <HAL_CRCEx_Polynomial_Set+0x3e>
      }
      break;
    case CRC_POLYLENGTH_8B:
      if (msb >= HAL_CRC_LENGTH_8B)
      {
        status =   HAL_ERROR;
 80012c4:	2001      	movs	r0, #1

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
 80012c6:	e00b      	b.n	80012e0 <HAL_CRCEx_Polynomial_Set+0x38>
  switch (PolyLength)
 80012c8:	2a18      	cmp	r2, #24
 80012ca:	d1fb      	bne.n	80012c4 <HAL_CRCEx_Polynomial_Set+0x1c>
      if (msb >= HAL_CRC_LENGTH_7B)
 80012cc:	2b06      	cmp	r3, #6
      if (msb >= HAL_CRC_LENGTH_16B)
 80012ce:	d8f9      	bhi.n	80012c4 <HAL_CRCEx_Polynomial_Set+0x1c>
    WRITE_REG(hcrc->Instance->POL, Pol);
 80012d0:	6800      	ldr	r0, [r0, #0]
 80012d2:	6141      	str	r1, [r0, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 80012d4:	6883      	ldr	r3, [r0, #8]
 80012d6:	f023 0318 	bic.w	r3, r3, #24
 80012da:	4313      	orrs	r3, r2
 80012dc:	6083      	str	r3, [r0, #8]
 80012de:	2000      	movs	r0, #0
}
 80012e0:	bd10      	pop	{r4, pc}
      if (msb >= HAL_CRC_LENGTH_8B)
 80012e2:	2b07      	cmp	r3, #7
 80012e4:	e7f3      	b.n	80012ce <HAL_CRCEx_Polynomial_Set+0x26>
      if (msb >= HAL_CRC_LENGTH_16B)
 80012e6:	2b0f      	cmp	r3, #15
 80012e8:	e7f1      	b.n	80012ce <HAL_CRCEx_Polynomial_Set+0x26>
  switch (PolyLength)
 80012ea:	2a00      	cmp	r2, #0
 80012ec:	d1ea      	bne.n	80012c4 <HAL_CRCEx_Polynomial_Set+0x1c>
 80012ee:	e7ef      	b.n	80012d0 <HAL_CRCEx_Polynomial_Set+0x28>

080012f0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80012f0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80012f4:	f8df 91b0 	ldr.w	r9, [pc, #432]	; 80014a8 <HAL_GPIO_Init+0x1b8>
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
        SYSCFG->EXTICR[position >> 2u] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 80012f8:	4c69      	ldr	r4, [pc, #420]	; (80014a0 <HAL_GPIO_Init+0x1b0>)
  uint32_t position = 0x00u;
 80012fa:	2300      	movs	r3, #0
  while (((GPIO_Init->Pin) >> position) != 0x00u)
 80012fc:	680a      	ldr	r2, [r1, #0]
 80012fe:	fa32 f503 	lsrs.w	r5, r2, r3
 8001302:	d102      	bne.n	800130a <HAL_GPIO_Init+0x1a>
      }
    }

    position++;
  }
}
 8001304:	b003      	add	sp, #12
 8001306:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    iocurrent = (GPIO_Init->Pin) & (1uL << position);
 800130a:	f04f 0e01 	mov.w	lr, #1
 800130e:	fa0e fe03 	lsl.w	lr, lr, r3
    if (iocurrent != 0x00u)
 8001312:	ea1e 0202 	ands.w	r2, lr, r2
 8001316:	f000 8090 	beq.w	800143a <HAL_GPIO_Init+0x14a>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 800131a:	684d      	ldr	r5, [r1, #4]
 800131c:	f005 0603 	and.w	r6, r5, #3
 8001320:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8001324:	f04f 0c03 	mov.w	ip, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8001328:	1e77      	subs	r7, r6, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 800132a:	fa0c fc08 	lsl.w	ip, ip, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 800132e:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 8001330:	ea6f 0c0c 	mvn.w	ip, ip
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8001334:	f200 8083 	bhi.w	800143e <HAL_GPIO_Init+0x14e>
        temp = GPIOx->OSPEEDR;
 8001338:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2u));
 800133a:	ea07 0a0c 	and.w	sl, r7, ip
        temp |= (GPIO_Init->Speed << (position * 2u));
 800133e:	68cf      	ldr	r7, [r1, #12]
 8001340:	fa07 f708 	lsl.w	r7, r7, r8
 8001344:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8001348:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 800134a:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 800134c:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8001350:	f3c5 1700 	ubfx	r7, r5, #4, #1
 8001354:	409f      	lsls	r7, r3
 8001356:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 800135a:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 800135c:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 800135e:	ea07 0e0c 	and.w	lr, r7, ip
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001362:	688f      	ldr	r7, [r1, #8]
 8001364:	fa07 f708 	lsl.w	r7, r7, r8
 8001368:	ea47 070e 	orr.w	r7, r7, lr
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800136c:	2e02      	cmp	r6, #2
        GPIOx->PUPDR = temp;
 800136e:	60c7      	str	r7, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001370:	d071      	beq.n	8001456 <HAL_GPIO_Init+0x166>
      temp = GPIOx->MODER;
 8001372:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 8001374:	fa06 f608 	lsl.w	r6, r6, r8
      temp &= ~(GPIO_MODER_MODE0 << (position * 2u));
 8001378:	ea07 070c 	and.w	r7, r7, ip
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2u));
 800137c:	433e      	orrs	r6, r7
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 800137e:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8001382:	6006      	str	r6, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00u)
 8001384:	d059      	beq.n	800143a <HAL_GPIO_Init+0x14a>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001386:	f8d9 6060 	ldr.w	r6, [r9, #96]	; 0x60
 800138a:	f046 0601 	orr.w	r6, r6, #1
 800138e:	f8c9 6060 	str.w	r6, [r9, #96]	; 0x60
 8001392:	f8d9 6060 	ldr.w	r6, [r9, #96]	; 0x60
 8001396:	f023 0703 	bic.w	r7, r3, #3
 800139a:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800139e:	f006 0601 	and.w	r6, r6, #1
 80013a2:	f507 3780 	add.w	r7, r7, #65536	; 0x10000
 80013a6:	9601      	str	r6, [sp, #4]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80013a8:	f003 0e03 	and.w	lr, r3, #3
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80013ac:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2u];
 80013ae:	68be      	ldr	r6, [r7, #8]
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80013b0:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 80013b4:	f04f 0c0f 	mov.w	ip, #15
 80013b8:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80013bc:	f1b0 4f90 	cmp.w	r0, #1207959552	; 0x48000000
        temp &= ~(0x0FuL << (4u * (position & 0x03u)));
 80013c0:	ea26 0c0c 	bic.w	ip, r6, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 80013c4:	d05f      	beq.n	8001486 <HAL_GPIO_Init+0x196>
 80013c6:	4e37      	ldr	r6, [pc, #220]	; (80014a4 <HAL_GPIO_Init+0x1b4>)
 80013c8:	42b0      	cmp	r0, r6
 80013ca:	d05e      	beq.n	800148a <HAL_GPIO_Init+0x19a>
 80013cc:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80013d0:	42b0      	cmp	r0, r6
 80013d2:	d05c      	beq.n	800148e <HAL_GPIO_Init+0x19e>
 80013d4:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80013d8:	42b0      	cmp	r0, r6
 80013da:	d05a      	beq.n	8001492 <HAL_GPIO_Init+0x1a2>
 80013dc:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80013e0:	42b0      	cmp	r0, r6
 80013e2:	d058      	beq.n	8001496 <HAL_GPIO_Init+0x1a6>
 80013e4:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80013e8:	42b0      	cmp	r0, r6
 80013ea:	d056      	beq.n	800149a <HAL_GPIO_Init+0x1aa>
 80013ec:	f506 6680 	add.w	r6, r6, #1024	; 0x400
 80013f0:	42b0      	cmp	r0, r6
 80013f2:	bf0c      	ite	eq
 80013f4:	2606      	moveq	r6, #6
 80013f6:	2607      	movne	r6, #7
 80013f8:	fa06 f60e 	lsl.w	r6, r6, lr
 80013fc:	ea46 060c 	orr.w	r6, r6, ip
        SYSCFG->EXTICR[position >> 2u] = temp;
 8001400:	60be      	str	r6, [r7, #8]
        temp = EXTI->RTSR1;
 8001402:	68a6      	ldr	r6, [r4, #8]
        temp &= ~(iocurrent);
 8001404:	43d7      	mvns	r7, r2
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00u)
 8001406:	f415 1f80 	tst.w	r5, #1048576	; 0x100000
        temp &= ~(iocurrent);
 800140a:	bf0c      	ite	eq
 800140c:	403e      	andeq	r6, r7
          temp |= iocurrent;
 800140e:	4316      	orrne	r6, r2
        EXTI->RTSR1 = temp;
 8001410:	60a6      	str	r6, [r4, #8]
        temp = EXTI->FTSR1;
 8001412:	68e6      	ldr	r6, [r4, #12]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00u)
 8001414:	f415 1f00 	tst.w	r5, #2097152	; 0x200000
        temp &= ~(iocurrent);
 8001418:	bf0c      	ite	eq
 800141a:	403e      	andeq	r6, r7
          temp |= iocurrent;
 800141c:	4316      	orrne	r6, r2
        EXTI->FTSR1 = temp;
 800141e:	60e6      	str	r6, [r4, #12]
        temp = EXTI->EMR1;
 8001420:	6866      	ldr	r6, [r4, #4]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00u)
 8001422:	f415 3f00 	tst.w	r5, #131072	; 0x20000
        temp &= ~(iocurrent);
 8001426:	bf0c      	ite	eq
 8001428:	403e      	andeq	r6, r7
          temp |= iocurrent;
 800142a:	4316      	orrne	r6, r2
        EXTI->EMR1 = temp;
 800142c:	6066      	str	r6, [r4, #4]
        temp = EXTI->IMR1;
 800142e:	6826      	ldr	r6, [r4, #0]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00u)
 8001430:	03ed      	lsls	r5, r5, #15
        temp &= ~(iocurrent);
 8001432:	bf54      	ite	pl
 8001434:	403e      	andpl	r6, r7
          temp |= iocurrent;
 8001436:	4316      	orrmi	r6, r2
        EXTI->IMR1 = temp;
 8001438:	6026      	str	r6, [r4, #0]
    position++;
 800143a:	3301      	adds	r3, #1
 800143c:	e75e      	b.n	80012fc <HAL_GPIO_Init+0xc>
      if((GPIO_Init->Mode & GPIO_MODE_ANALOG) == GPIO_MODE_ANALOG)
 800143e:	2e03      	cmp	r6, #3
 8001440:	d18c      	bne.n	800135c <HAL_GPIO_Init+0x6c>
        temp = GPIOx->ASCR;
 8001442:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
        temp &= ~(GPIO_ASCR_ASC0 << position) ;
 8001444:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= (((GPIO_Init->Mode & GPIO_MODE_ANALOG_ADC_CONTROL) >> 3) << position);
 8001448:	f3c5 07c0 	ubfx	r7, r5, #3, #1
 800144c:	409f      	lsls	r7, r3
 800144e:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->ASCR = temp;
 8001452:	62c7      	str	r7, [r0, #44]	; 0x2c
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001454:	e78d      	b.n	8001372 <HAL_GPIO_Init+0x82>
        temp = GPIOx->AFR[position >> 3u];
 8001456:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 800145a:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 800145e:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3u];
 8001462:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFu << ((position & 0x07u) * 4u));
 8001466:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 800146a:	f04f 0e0f 	mov.w	lr, #15
 800146e:	fa0e fe0b 	lsl.w	lr, lr, fp
 8001472:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07u) * 4u));
 8001476:	690f      	ldr	r7, [r1, #16]
 8001478:	fa07 f70b 	lsl.w	r7, r7, fp
 800147c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3u] = temp;
 8001480:	f8ca 7020 	str.w	r7, [sl, #32]
 8001484:	e775      	b.n	8001372 <HAL_GPIO_Init+0x82>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4u * (position & 0x03u)));
 8001486:	2600      	movs	r6, #0
 8001488:	e7b6      	b.n	80013f8 <HAL_GPIO_Init+0x108>
 800148a:	2601      	movs	r6, #1
 800148c:	e7b4      	b.n	80013f8 <HAL_GPIO_Init+0x108>
 800148e:	2602      	movs	r6, #2
 8001490:	e7b2      	b.n	80013f8 <HAL_GPIO_Init+0x108>
 8001492:	2603      	movs	r6, #3
 8001494:	e7b0      	b.n	80013f8 <HAL_GPIO_Init+0x108>
 8001496:	2604      	movs	r6, #4
 8001498:	e7ae      	b.n	80013f8 <HAL_GPIO_Init+0x108>
 800149a:	2605      	movs	r6, #5
 800149c:	e7ac      	b.n	80013f8 <HAL_GPIO_Init+0x108>
 800149e:	bf00      	nop
 80014a0:	40010400 	.word	0x40010400
 80014a4:	48000400 	.word	0x48000400
 80014a8:	40021000 	.word	0x40021000

080014ac <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80014ac:	b10a      	cbz	r2, 80014b2 <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin;
 80014ae:	6181      	str	r1, [r0, #24]
 80014b0:	4770      	bx	lr
  }
  else
  {
    GPIOx->BRR = (uint32_t)GPIO_Pin;
 80014b2:	6281      	str	r1, [r0, #40]	; 0x28
  }
}
 80014b4:	4770      	bx	lr
	...

080014b8 <HAL_PWREx_GetVoltageRange>:
    else
    {
      return PWR_REGULATOR_VOLTAGE_SCALE1_BOOST;
    }
#else
  return  (PWR->CR1 & PWR_CR1_VOS);
 80014b8:	4b02      	ldr	r3, [pc, #8]	; (80014c4 <HAL_PWREx_GetVoltageRange+0xc>)
 80014ba:	6818      	ldr	r0, [r3, #0]
#endif
}
 80014bc:	f400 60c0 	and.w	r0, r0, #1536	; 0x600
 80014c0:	4770      	bx	lr
 80014c2:	bf00      	nop
 80014c4:	40007000 	.word	0x40007000

080014c8 <HAL_PWREx_ControlVoltageScaling>:
  }

#else

  /* If Set Range 1 */
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 80014c8:	4a17      	ldr	r2, [pc, #92]	; (8001528 <HAL_PWREx_ControlVoltageScaling+0x60>)
  {
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 80014ca:	6813      	ldr	r3, [r2, #0]
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 80014cc:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 80014d0:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
  if (VoltageScaling == PWR_REGULATOR_VOLTAGE_SCALE1)
 80014d4:	d11d      	bne.n	8001512 <HAL_PWREx_ControlVoltageScaling+0x4a>
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE1)
 80014d6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80014da:	d101      	bne.n	80014e0 <HAL_PWREx_ControlVoltageScaling+0x18>
      /* No need to wait for VOSF to be cleared for this transition */
    }
  }
#endif

  return HAL_OK;
 80014dc:	2000      	movs	r0, #0
 80014de:	4770      	bx	lr
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE1);
 80014e0:	6813      	ldr	r3, [r2, #0]
 80014e2:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 80014e6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80014ea:	6013      	str	r3, [r2, #0]
      wait_loop_index = ((PWR_FLAG_SETTING_DELAY_US * SystemCoreClock) / 1000000U) + 1U;
 80014ec:	4b0f      	ldr	r3, [pc, #60]	; (800152c <HAL_PWREx_ControlVoltageScaling+0x64>)
 80014ee:	681b      	ldr	r3, [r3, #0]
 80014f0:	2132      	movs	r1, #50	; 0x32
 80014f2:	434b      	muls	r3, r1
 80014f4:	490e      	ldr	r1, [pc, #56]	; (8001530 <HAL_PWREx_ControlVoltageScaling+0x68>)
 80014f6:	fbb3 f3f1 	udiv	r3, r3, r1
 80014fa:	3301      	adds	r3, #1
      while ((HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF)) && (wait_loop_index != 0U))
 80014fc:	6951      	ldr	r1, [r2, #20]
 80014fe:	0549      	lsls	r1, r1, #21
 8001500:	d500      	bpl.n	8001504 <HAL_PWREx_ControlVoltageScaling+0x3c>
 8001502:	b923      	cbnz	r3, 800150e <HAL_PWREx_ControlVoltageScaling+0x46>
      if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_VOSF))
 8001504:	6953      	ldr	r3, [r2, #20]
 8001506:	055b      	lsls	r3, r3, #21
 8001508:	d5e8      	bpl.n	80014dc <HAL_PWREx_ControlVoltageScaling+0x14>
        return HAL_TIMEOUT;
 800150a:	2003      	movs	r0, #3
}
 800150c:	4770      	bx	lr
        wait_loop_index--;
 800150e:	3b01      	subs	r3, #1
 8001510:	e7f4      	b.n	80014fc <HAL_PWREx_ControlVoltageScaling+0x34>
    if (READ_BIT(PWR->CR1, PWR_CR1_VOS) != PWR_REGULATOR_VOLTAGE_SCALE2)
 8001512:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
      MODIFY_REG(PWR->CR1, PWR_CR1_VOS, PWR_REGULATOR_VOLTAGE_SCALE2);
 8001516:	bf1f      	itttt	ne
 8001518:	6813      	ldrne	r3, [r2, #0]
 800151a:	f423 63c0 	bicne.w	r3, r3, #1536	; 0x600
 800151e:	f443 6380 	orrne.w	r3, r3, #1024	; 0x400
 8001522:	6013      	strne	r3, [r2, #0]
 8001524:	e7da      	b.n	80014dc <HAL_PWREx_ControlVoltageScaling+0x14>
 8001526:	bf00      	nop
 8001528:	40007000 	.word	0x40007000
 800152c:	200000ec 	.word	0x200000ec
 8001530:	000f4240 	.word	0x000f4240

08001534 <RCC_SetFlashLatencyFromMSIRange>:
            voltage range.
  * @param  msirange  MSI range value from RCC_MSIRANGE_0 to RCC_MSIRANGE_11
  * @retval HAL status
  */
static HAL_StatusTypeDef RCC_SetFlashLatencyFromMSIRange(uint32_t msirange)
{
 8001534:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t vos;
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */

  if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 8001536:	4d1e      	ldr	r5, [pc, #120]	; (80015b0 <RCC_SetFlashLatencyFromMSIRange+0x7c>)
 8001538:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800153a:	00da      	lsls	r2, r3, #3
{
 800153c:	4604      	mov	r4, r0
  if(__HAL_RCC_PWR_IS_CLK_ENABLED())
 800153e:	d518      	bpl.n	8001572 <RCC_SetFlashLatencyFromMSIRange+0x3e>
  {
    vos = HAL_PWREx_GetVoltageRange();
 8001540:	f7ff ffba 	bl	80014b8 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_ENABLE();
    vos = HAL_PWREx_GetVoltageRange();
    __HAL_RCC_PWR_CLK_DISABLE();
  }

  if(vos == PWR_REGULATOR_VOLTAGE_SCALE1)
 8001544:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8001548:	d123      	bne.n	8001592 <RCC_SetFlashLatencyFromMSIRange+0x5e>
  {
    if(msirange > RCC_MSIRANGE_8)
 800154a:	2c80      	cmp	r4, #128	; 0x80
 800154c:	d929      	bls.n	80015a2 <RCC_SetFlashLatencyFromMSIRange+0x6e>
        latency = FLASH_LATENCY_2; /* 2WS */
      }
      else
      {
        /* MSI 24Mhz or 32Mhz */
        latency = FLASH_LATENCY_1; /* 1WS */
 800154e:	2ca0      	cmp	r4, #160	; 0xa0
 8001550:	bf8c      	ite	hi
 8001552:	2402      	movhi	r4, #2
 8001554:	2401      	movls	r4, #1
      /* else MSI < 8Mhz default FLASH_LATENCY_0 0WS */
    }
#endif
  }

  __HAL_FLASH_SET_LATENCY(latency);
 8001556:	4917      	ldr	r1, [pc, #92]	; (80015b4 <RCC_SetFlashLatencyFromMSIRange+0x80>)
 8001558:	680a      	ldr	r2, [r1, #0]
 800155a:	f022 0207 	bic.w	r2, r2, #7
 800155e:	4322      	orrs	r2, r4
 8001560:	600a      	str	r2, [r1, #0]

  /* Check that the new number of wait states is taken into account to access the Flash
     memory by reading the FLASH_ACR register */
  if(__HAL_FLASH_GET_LATENCY() != latency)
 8001562:	6808      	ldr	r0, [r1, #0]
 8001564:	f000 0007 	and.w	r0, r0, #7
  {
    return HAL_ERROR;
  }

  return HAL_OK;
}
 8001568:	1b00      	subs	r0, r0, r4
 800156a:	bf18      	it	ne
 800156c:	2001      	movne	r0, #1
 800156e:	b003      	add	sp, #12
 8001570:	bd30      	pop	{r4, r5, pc}
    __HAL_RCC_PWR_CLK_ENABLE();
 8001572:	6dab      	ldr	r3, [r5, #88]	; 0x58
 8001574:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001578:	65ab      	str	r3, [r5, #88]	; 0x58
 800157a:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800157c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001580:	9301      	str	r3, [sp, #4]
 8001582:	9b01      	ldr	r3, [sp, #4]
    vos = HAL_PWREx_GetVoltageRange();
 8001584:	f7ff ff98 	bl	80014b8 <HAL_PWREx_GetVoltageRange>
    __HAL_RCC_PWR_CLK_DISABLE();
 8001588:	6dab      	ldr	r3, [r5, #88]	; 0x58
 800158a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800158e:	65ab      	str	r3, [r5, #88]	; 0x58
 8001590:	e7d8      	b.n	8001544 <RCC_SetFlashLatencyFromMSIRange+0x10>
    if(msirange > RCC_MSIRANGE_8)
 8001592:	2c80      	cmp	r4, #128	; 0x80
 8001594:	d807      	bhi.n	80015a6 <RCC_SetFlashLatencyFromMSIRange+0x72>
      if(msirange == RCC_MSIRANGE_8)
 8001596:	d008      	beq.n	80015aa <RCC_SetFlashLatencyFromMSIRange+0x76>
      else if(msirange == RCC_MSIRANGE_7)
 8001598:	f1a4 0370 	sub.w	r3, r4, #112	; 0x70
 800159c:	425c      	negs	r4, r3
 800159e:	415c      	adcs	r4, r3
 80015a0:	e7d9      	b.n	8001556 <RCC_SetFlashLatencyFromMSIRange+0x22>
  uint32_t latency = FLASH_LATENCY_0;  /* default value 0WS */
 80015a2:	2400      	movs	r4, #0
 80015a4:	e7d7      	b.n	8001556 <RCC_SetFlashLatencyFromMSIRange+0x22>
      latency = FLASH_LATENCY_3; /* 3WS */
 80015a6:	2403      	movs	r4, #3
 80015a8:	e7d5      	b.n	8001556 <RCC_SetFlashLatencyFromMSIRange+0x22>
        latency = FLASH_LATENCY_2; /* 2WS */
 80015aa:	2402      	movs	r4, #2
 80015ac:	e7d3      	b.n	8001556 <RCC_SetFlashLatencyFromMSIRange+0x22>
 80015ae:	bf00      	nop
 80015b0:	40021000 	.word	0x40021000
 80015b4:	40022000 	.word	0x40022000

080015b8 <HAL_RCC_GetSysClockFreq>:
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80015b8:	4b22      	ldr	r3, [pc, #136]	; (8001644 <HAL_RCC_GetSysClockFreq+0x8c>)
 80015ba:	689a      	ldr	r2, [r3, #8]
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 80015bc:	68d9      	ldr	r1, [r3, #12]
  if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 80015be:	f012 020c 	ands.w	r2, r2, #12
 80015c2:	d005      	beq.n	80015d0 <HAL_RCC_GetSysClockFreq+0x18>
 80015c4:	2a0c      	cmp	r2, #12
 80015c6:	d115      	bne.n	80015f4 <HAL_RCC_GetSysClockFreq+0x3c>
  pll_oscsource = __HAL_RCC_GET_PLL_OSCSOURCE();
 80015c8:	f001 0103 	and.w	r1, r1, #3
     ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_oscsource == RCC_PLLSOURCE_MSI)))
 80015cc:	2901      	cmp	r1, #1
 80015ce:	d118      	bne.n	8001602 <HAL_RCC_GetSysClockFreq+0x4a>
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 80015d0:	6819      	ldr	r1, [r3, #0]
    msirange = MSIRangeTable[msirange];
 80015d2:	481d      	ldr	r0, [pc, #116]	; (8001648 <HAL_RCC_GetSysClockFreq+0x90>)
    if(READ_BIT(RCC->CR, RCC_CR_MSIRGSEL) == 0U)
 80015d4:	0709      	lsls	r1, r1, #28
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 80015d6:	bf55      	itete	pl
 80015d8:	f8d3 1094 	ldrpl.w	r1, [r3, #148]	; 0x94
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 80015dc:	6819      	ldrmi	r1, [r3, #0]
      msirange = READ_BIT(RCC->CSR, RCC_CSR_MSISRANGE) >> RCC_CSR_MSISRANGE_Pos;
 80015de:	f3c1 2103 	ubfxpl	r1, r1, #8, #4
      msirange = READ_BIT(RCC->CR, RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos;
 80015e2:	f3c1 1103 	ubfxmi	r1, r1, #4, #4
    msirange = MSIRangeTable[msirange];
 80015e6:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 80015ea:	b34a      	cbz	r2, 8001640 <HAL_RCC_GetSysClockFreq+0x88>
  if(sysclk_source == RCC_CFGR_SWS_PLL)
 80015ec:	2a0c      	cmp	r2, #12
 80015ee:	d009      	beq.n	8001604 <HAL_RCC_GetSysClockFreq+0x4c>
 80015f0:	2000      	movs	r0, #0
  return sysclockfreq;
 80015f2:	4770      	bx	lr
  else if(sysclk_source == RCC_CFGR_SWS_HSI)
 80015f4:	2a04      	cmp	r2, #4
 80015f6:	d022      	beq.n	800163e <HAL_RCC_GetSysClockFreq+0x86>
  else if(sysclk_source == RCC_CFGR_SWS_HSE)
 80015f8:	2a08      	cmp	r2, #8
 80015fa:	4814      	ldr	r0, [pc, #80]	; (800164c <HAL_RCC_GetSysClockFreq+0x94>)
 80015fc:	bf18      	it	ne
 80015fe:	2000      	movne	r0, #0
 8001600:	4770      	bx	lr
  uint32_t msirange = 0U, sysclockfreq = 0U;
 8001602:	2000      	movs	r0, #0
    pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 8001604:	68da      	ldr	r2, [r3, #12]
 8001606:	f002 0203 	and.w	r2, r2, #3
    switch (pllsource)
 800160a:	2a02      	cmp	r2, #2
 800160c:	d015      	beq.n	800163a <HAL_RCC_GetSysClockFreq+0x82>
 800160e:	490f      	ldr	r1, [pc, #60]	; (800164c <HAL_RCC_GetSysClockFreq+0x94>)
 8001610:	2a03      	cmp	r2, #3
 8001612:	bf08      	it	eq
 8001614:	4608      	moveq	r0, r1
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8001616:	68d9      	ldr	r1, [r3, #12]
    pllvco = (pllvco * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)) / pllm;
 8001618:	68da      	ldr	r2, [r3, #12]
 800161a:	f3c2 2206 	ubfx	r2, r2, #8, #7
 800161e:	4342      	muls	r2, r0
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 8001620:	68d8      	ldr	r0, [r3, #12]
 8001622:	f3c0 6041 	ubfx	r0, r0, #25, #2
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 8001626:	f3c1 1102 	ubfx	r1, r1, #4, #3
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 800162a:	3001      	adds	r0, #1
    pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 800162c:	3101      	adds	r1, #1
    pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 800162e:	0040      	lsls	r0, r0, #1
    pllvco = (pllvco * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)) / pllm;
 8001630:	fbb2 f2f1 	udiv	r2, r2, r1
    sysclockfreq = pllvco / pllr;
 8001634:	fbb2 f0f0 	udiv	r0, r2, r0
 8001638:	4770      	bx	lr
      pllvco = HSI_VALUE;
 800163a:	4805      	ldr	r0, [pc, #20]	; (8001650 <HAL_RCC_GetSysClockFreq+0x98>)
 800163c:	e7eb      	b.n	8001616 <HAL_RCC_GetSysClockFreq+0x5e>
    sysclockfreq = HSI_VALUE;
 800163e:	4804      	ldr	r0, [pc, #16]	; (8001650 <HAL_RCC_GetSysClockFreq+0x98>)
}
 8001640:	4770      	bx	lr
 8001642:	bf00      	nop
 8001644:	40021000 	.word	0x40021000
 8001648:	08007460 	.word	0x08007460
 800164c:	007a1200 	.word	0x007a1200
 8001650:	00f42400 	.word	0x00f42400

08001654 <HAL_RCC_OscConfig>:
{
 8001654:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  if(RCC_OscInitStruct == NULL)
 8001658:	4605      	mov	r5, r0
 800165a:	b918      	cbnz	r0, 8001664 <HAL_RCC_OscConfig+0x10>
    return HAL_ERROR;
 800165c:	2001      	movs	r0, #1
}
 800165e:	b003      	add	sp, #12
 8001660:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8001664:	4c92      	ldr	r4, [pc, #584]	; (80018b0 <HAL_RCC_OscConfig+0x25c>)
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8001666:	6803      	ldr	r3, [r0, #0]
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 8001668:	68a6      	ldr	r6, [r4, #8]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 800166a:	68e7      	ldr	r7, [r4, #12]
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 800166c:	06db      	lsls	r3, r3, #27
  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 800166e:	f006 060c 	and.w	r6, r6, #12
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8001672:	f007 0703 	and.w	r7, r7, #3
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8001676:	d53d      	bpl.n	80016f4 <HAL_RCC_OscConfig+0xa0>
    if((sysclk_source == RCC_CFGR_SWS_MSI) ||
 8001678:	b11e      	cbz	r6, 8001682 <HAL_RCC_OscConfig+0x2e>
 800167a:	2e0c      	cmp	r6, #12
 800167c:	d166      	bne.n	800174c <HAL_RCC_OscConfig+0xf8>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_MSI)))
 800167e:	2f01      	cmp	r7, #1
 8001680:	d164      	bne.n	800174c <HAL_RCC_OscConfig+0xf8>
      if((READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8001682:	6823      	ldr	r3, [r4, #0]
 8001684:	0798      	lsls	r0, r3, #30
 8001686:	d502      	bpl.n	800168e <HAL_RCC_OscConfig+0x3a>
 8001688:	69ab      	ldr	r3, [r5, #24]
 800168a:	2b00      	cmp	r3, #0
 800168c:	d0e6      	beq.n	800165c <HAL_RCC_OscConfig+0x8>
        if(RCC_OscInitStruct->MSIClockRange > __HAL_RCC_GET_MSI_RANGE())
 800168e:	6823      	ldr	r3, [r4, #0]
 8001690:	6a28      	ldr	r0, [r5, #32]
 8001692:	0719      	lsls	r1, r3, #28
 8001694:	bf56      	itet	pl
 8001696:	f8d4 3094 	ldrpl.w	r3, [r4, #148]	; 0x94
 800169a:	6823      	ldrmi	r3, [r4, #0]
 800169c:	091b      	lsrpl	r3, r3, #4
 800169e:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80016a2:	4298      	cmp	r0, r3
 80016a4:	d93b      	bls.n	800171e <HAL_RCC_OscConfig+0xca>
          if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 80016a6:	f7ff ff45 	bl	8001534 <RCC_SetFlashLatencyFromMSIRange>
 80016aa:	2800      	cmp	r0, #0
 80016ac:	d1d6      	bne.n	800165c <HAL_RCC_OscConfig+0x8>
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80016ae:	6823      	ldr	r3, [r4, #0]
 80016b0:	f043 0308 	orr.w	r3, r3, #8
 80016b4:	6023      	str	r3, [r4, #0]
 80016b6:	6823      	ldr	r3, [r4, #0]
 80016b8:	6a2a      	ldr	r2, [r5, #32]
 80016ba:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80016be:	4313      	orrs	r3, r2
 80016c0:	6023      	str	r3, [r4, #0]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 80016c2:	6863      	ldr	r3, [r4, #4]
 80016c4:	69ea      	ldr	r2, [r5, #28]
 80016c6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 80016ca:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80016ce:	6063      	str	r3, [r4, #4]
        SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 80016d0:	f7ff ff72 	bl	80015b8 <HAL_RCC_GetSysClockFreq>
 80016d4:	68a3      	ldr	r3, [r4, #8]
 80016d6:	4a77      	ldr	r2, [pc, #476]	; (80018b4 <HAL_RCC_OscConfig+0x260>)
 80016d8:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80016dc:	5cd3      	ldrb	r3, [r2, r3]
 80016de:	f003 031f 	and.w	r3, r3, #31
 80016e2:	40d8      	lsrs	r0, r3
 80016e4:	4b74      	ldr	r3, [pc, #464]	; (80018b8 <HAL_RCC_OscConfig+0x264>)
 80016e6:	6018      	str	r0, [r3, #0]
        status = HAL_InitTick(uwTickPrio);
 80016e8:	4b74      	ldr	r3, [pc, #464]	; (80018bc <HAL_RCC_OscConfig+0x268>)
 80016ea:	6818      	ldr	r0, [r3, #0]
 80016ec:	f7ff fcfc 	bl	80010e8 <HAL_InitTick>
        if(status != HAL_OK)
 80016f0:	2800      	cmp	r0, #0
 80016f2:	d1b4      	bne.n	800165e <HAL_RCC_OscConfig+0xa>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80016f4:	682b      	ldr	r3, [r5, #0]
 80016f6:	07d8      	lsls	r0, r3, #31
 80016f8:	d45f      	bmi.n	80017ba <HAL_RCC_OscConfig+0x166>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80016fa:	682b      	ldr	r3, [r5, #0]
 80016fc:	0799      	lsls	r1, r3, #30
 80016fe:	f100 809e 	bmi.w	800183e <HAL_RCC_OscConfig+0x1ea>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001702:	682b      	ldr	r3, [r5, #0]
 8001704:	0718      	lsls	r0, r3, #28
 8001706:	f100 80db 	bmi.w	80018c0 <HAL_RCC_OscConfig+0x26c>
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800170a:	682b      	ldr	r3, [r5, #0]
 800170c:	0759      	lsls	r1, r3, #29
 800170e:	f100 8101 	bmi.w	8001914 <HAL_RCC_OscConfig+0x2c0>
  if(RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 8001712:	6aab      	ldr	r3, [r5, #40]	; 0x28
 8001714:	2b00      	cmp	r3, #0
 8001716:	f040 816a 	bne.w	80019ee <HAL_RCC_OscConfig+0x39a>
  return HAL_OK;
 800171a:	2000      	movs	r0, #0
 800171c:	e79f      	b.n	800165e <HAL_RCC_OscConfig+0xa>
          __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 800171e:	6823      	ldr	r3, [r4, #0]
 8001720:	f043 0308 	orr.w	r3, r3, #8
 8001724:	6023      	str	r3, [r4, #0]
 8001726:	6823      	ldr	r3, [r4, #0]
 8001728:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800172c:	4303      	orrs	r3, r0
 800172e:	6023      	str	r3, [r4, #0]
          __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8001730:	6863      	ldr	r3, [r4, #4]
 8001732:	69ea      	ldr	r2, [r5, #28]
 8001734:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8001738:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800173c:	6063      	str	r3, [r4, #4]
          if(sysclk_source == RCC_CFGR_SWS_MSI)
 800173e:	2e00      	cmp	r6, #0
 8001740:	d1c6      	bne.n	80016d0 <HAL_RCC_OscConfig+0x7c>
            if(RCC_SetFlashLatencyFromMSIRange(RCC_OscInitStruct->MSIClockRange) != HAL_OK)
 8001742:	f7ff fef7 	bl	8001534 <RCC_SetFlashLatencyFromMSIRange>
 8001746:	2800      	cmp	r0, #0
 8001748:	d0c2      	beq.n	80016d0 <HAL_RCC_OscConfig+0x7c>
 800174a:	e787      	b.n	800165c <HAL_RCC_OscConfig+0x8>
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 800174c:	69ab      	ldr	r3, [r5, #24]
 800174e:	b31b      	cbz	r3, 8001798 <HAL_RCC_OscConfig+0x144>
        __HAL_RCC_MSI_ENABLE();
 8001750:	6823      	ldr	r3, [r4, #0]
 8001752:	f043 0301 	orr.w	r3, r3, #1
 8001756:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001758:	f7ff fd0e 	bl	8001178 <HAL_GetTick>
 800175c:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 800175e:	6823      	ldr	r3, [r4, #0]
 8001760:	079a      	lsls	r2, r3, #30
 8001762:	d511      	bpl.n	8001788 <HAL_RCC_OscConfig+0x134>
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8001764:	6823      	ldr	r3, [r4, #0]
 8001766:	f043 0308 	orr.w	r3, r3, #8
 800176a:	6023      	str	r3, [r4, #0]
 800176c:	6823      	ldr	r3, [r4, #0]
 800176e:	6a2a      	ldr	r2, [r5, #32]
 8001770:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001774:	4313      	orrs	r3, r2
 8001776:	6023      	str	r3, [r4, #0]
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8001778:	6863      	ldr	r3, [r4, #4]
 800177a:	69ea      	ldr	r2, [r5, #28]
 800177c:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8001780:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001784:	6063      	str	r3, [r4, #4]
 8001786:	e7b5      	b.n	80016f4 <HAL_RCC_OscConfig+0xa0>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8001788:	f7ff fcf6 	bl	8001178 <HAL_GetTick>
 800178c:	eba0 0008 	sub.w	r0, r0, r8
 8001790:	2802      	cmp	r0, #2
 8001792:	d9e4      	bls.n	800175e <HAL_RCC_OscConfig+0x10a>
            return HAL_TIMEOUT;
 8001794:	2003      	movs	r0, #3
 8001796:	e762      	b.n	800165e <HAL_RCC_OscConfig+0xa>
        __HAL_RCC_MSI_DISABLE();
 8001798:	6823      	ldr	r3, [r4, #0]
 800179a:	f023 0301 	bic.w	r3, r3, #1
 800179e:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 80017a0:	f7ff fcea 	bl	8001178 <HAL_GetTick>
 80017a4:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_MSIRDY) != 0U)
 80017a6:	6823      	ldr	r3, [r4, #0]
 80017a8:	079b      	lsls	r3, r3, #30
 80017aa:	d5a3      	bpl.n	80016f4 <HAL_RCC_OscConfig+0xa0>
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 80017ac:	f7ff fce4 	bl	8001178 <HAL_GetTick>
 80017b0:	eba0 0008 	sub.w	r0, r0, r8
 80017b4:	2802      	cmp	r0, #2
 80017b6:	d9f6      	bls.n	80017a6 <HAL_RCC_OscConfig+0x152>
 80017b8:	e7ec      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
    if((sysclk_source == RCC_CFGR_SWS_HSE) ||
 80017ba:	2e08      	cmp	r6, #8
 80017bc:	d003      	beq.n	80017c6 <HAL_RCC_OscConfig+0x172>
 80017be:	2e0c      	cmp	r6, #12
 80017c0:	d108      	bne.n	80017d4 <HAL_RCC_OscConfig+0x180>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSE)))
 80017c2:	2f03      	cmp	r7, #3
 80017c4:	d106      	bne.n	80017d4 <HAL_RCC_OscConfig+0x180>
      if((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80017c6:	6823      	ldr	r3, [r4, #0]
 80017c8:	039a      	lsls	r2, r3, #14
 80017ca:	d596      	bpl.n	80016fa <HAL_RCC_OscConfig+0xa6>
 80017cc:	686b      	ldr	r3, [r5, #4]
 80017ce:	2b00      	cmp	r3, #0
 80017d0:	d193      	bne.n	80016fa <HAL_RCC_OscConfig+0xa6>
 80017d2:	e743      	b.n	800165c <HAL_RCC_OscConfig+0x8>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80017d4:	686b      	ldr	r3, [r5, #4]
 80017d6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80017da:	d110      	bne.n	80017fe <HAL_RCC_OscConfig+0x1aa>
 80017dc:	6823      	ldr	r3, [r4, #0]
 80017de:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80017e2:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 80017e4:	f7ff fcc8 	bl	8001178 <HAL_GetTick>
 80017e8:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 80017ea:	6823      	ldr	r3, [r4, #0]
 80017ec:	039b      	lsls	r3, r3, #14
 80017ee:	d484      	bmi.n	80016fa <HAL_RCC_OscConfig+0xa6>
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 80017f0:	f7ff fcc2 	bl	8001178 <HAL_GetTick>
 80017f4:	eba0 0008 	sub.w	r0, r0, r8
 80017f8:	2864      	cmp	r0, #100	; 0x64
 80017fa:	d9f6      	bls.n	80017ea <HAL_RCC_OscConfig+0x196>
 80017fc:	e7ca      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80017fe:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001802:	d104      	bne.n	800180e <HAL_RCC_OscConfig+0x1ba>
 8001804:	6823      	ldr	r3, [r4, #0]
 8001806:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800180a:	6023      	str	r3, [r4, #0]
 800180c:	e7e6      	b.n	80017dc <HAL_RCC_OscConfig+0x188>
 800180e:	6822      	ldr	r2, [r4, #0]
 8001810:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8001814:	6022      	str	r2, [r4, #0]
 8001816:	6822      	ldr	r2, [r4, #0]
 8001818:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 800181c:	6022      	str	r2, [r4, #0]
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 800181e:	2b00      	cmp	r3, #0
 8001820:	d1e0      	bne.n	80017e4 <HAL_RCC_OscConfig+0x190>
        tickstart = HAL_GetTick();
 8001822:	f7ff fca9 	bl	8001178 <HAL_GetTick>
 8001826:	4680      	mov	r8, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 8001828:	6823      	ldr	r3, [r4, #0]
 800182a:	0398      	lsls	r0, r3, #14
 800182c:	f57f af65 	bpl.w	80016fa <HAL_RCC_OscConfig+0xa6>
          if((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001830:	f7ff fca2 	bl	8001178 <HAL_GetTick>
 8001834:	eba0 0008 	sub.w	r0, r0, r8
 8001838:	2864      	cmp	r0, #100	; 0x64
 800183a:	d9f5      	bls.n	8001828 <HAL_RCC_OscConfig+0x1d4>
 800183c:	e7aa      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
    if((sysclk_source == RCC_CFGR_SWS_HSI) ||
 800183e:	2e04      	cmp	r6, #4
 8001840:	d003      	beq.n	800184a <HAL_RCC_OscConfig+0x1f6>
 8001842:	2e0c      	cmp	r6, #12
 8001844:	d110      	bne.n	8001868 <HAL_RCC_OscConfig+0x214>
       ((sysclk_source == RCC_CFGR_SWS_PLL) && (pll_config == RCC_PLLSOURCE_HSI)))
 8001846:	2f02      	cmp	r7, #2
 8001848:	d10e      	bne.n	8001868 <HAL_RCC_OscConfig+0x214>
      if((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 800184a:	6823      	ldr	r3, [r4, #0]
 800184c:	0559      	lsls	r1, r3, #21
 800184e:	d503      	bpl.n	8001858 <HAL_RCC_OscConfig+0x204>
 8001850:	68eb      	ldr	r3, [r5, #12]
 8001852:	2b00      	cmp	r3, #0
 8001854:	f43f af02 	beq.w	800165c <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001858:	6863      	ldr	r3, [r4, #4]
 800185a:	692a      	ldr	r2, [r5, #16]
 800185c:	f023 53f8 	bic.w	r3, r3, #520093696	; 0x1f000000
 8001860:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8001864:	6063      	str	r3, [r4, #4]
 8001866:	e74c      	b.n	8001702 <HAL_RCC_OscConfig+0xae>
      if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8001868:	68eb      	ldr	r3, [r5, #12]
 800186a:	b17b      	cbz	r3, 800188c <HAL_RCC_OscConfig+0x238>
        __HAL_RCC_HSI_ENABLE();
 800186c:	6823      	ldr	r3, [r4, #0]
 800186e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001872:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001874:	f7ff fc80 	bl	8001178 <HAL_GetTick>
 8001878:	4607      	mov	r7, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 800187a:	6823      	ldr	r3, [r4, #0]
 800187c:	055a      	lsls	r2, r3, #21
 800187e:	d4eb      	bmi.n	8001858 <HAL_RCC_OscConfig+0x204>
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001880:	f7ff fc7a 	bl	8001178 <HAL_GetTick>
 8001884:	1bc0      	subs	r0, r0, r7
 8001886:	2802      	cmp	r0, #2
 8001888:	d9f7      	bls.n	800187a <HAL_RCC_OscConfig+0x226>
 800188a:	e783      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_HSI_DISABLE();
 800188c:	6823      	ldr	r3, [r4, #0]
 800188e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8001892:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001894:	f7ff fc70 	bl	8001178 <HAL_GetTick>
 8001898:	4607      	mov	r7, r0
        while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 800189a:	6823      	ldr	r3, [r4, #0]
 800189c:	055b      	lsls	r3, r3, #21
 800189e:	f57f af30 	bpl.w	8001702 <HAL_RCC_OscConfig+0xae>
          if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 80018a2:	f7ff fc69 	bl	8001178 <HAL_GetTick>
 80018a6:	1bc0      	subs	r0, r0, r7
 80018a8:	2802      	cmp	r0, #2
 80018aa:	d9f6      	bls.n	800189a <HAL_RCC_OscConfig+0x246>
 80018ac:	e772      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
 80018ae:	bf00      	nop
 80018b0:	40021000 	.word	0x40021000
 80018b4:	08007450 	.word	0x08007450
 80018b8:	200000ec 	.word	0x200000ec
 80018bc:	200000f4 	.word	0x200000f4
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 80018c0:	696b      	ldr	r3, [r5, #20]
 80018c2:	b19b      	cbz	r3, 80018ec <HAL_RCC_OscConfig+0x298>
      __HAL_RCC_LSI_ENABLE();
 80018c4:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 80018c8:	f043 0301 	orr.w	r3, r3, #1
 80018cc:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
      tickstart = HAL_GetTick();
 80018d0:	f7ff fc52 	bl	8001178 <HAL_GetTick>
 80018d4:	4607      	mov	r7, r0
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 80018d6:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 80018da:	079a      	lsls	r2, r3, #30
 80018dc:	f53f af15 	bmi.w	800170a <HAL_RCC_OscConfig+0xb6>
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80018e0:	f7ff fc4a 	bl	8001178 <HAL_GetTick>
 80018e4:	1bc0      	subs	r0, r0, r7
 80018e6:	2802      	cmp	r0, #2
 80018e8:	d9f5      	bls.n	80018d6 <HAL_RCC_OscConfig+0x282>
 80018ea:	e753      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
      __HAL_RCC_LSI_DISABLE();
 80018ec:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 80018f0:	f023 0301 	bic.w	r3, r3, #1
 80018f4:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
      tickstart = HAL_GetTick();
 80018f8:	f7ff fc3e 	bl	8001178 <HAL_GetTick>
 80018fc:	4607      	mov	r7, r0
      while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 80018fe:	f8d4 3094 	ldr.w	r3, [r4, #148]	; 0x94
 8001902:	079b      	lsls	r3, r3, #30
 8001904:	f57f af01 	bpl.w	800170a <HAL_RCC_OscConfig+0xb6>
        if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8001908:	f7ff fc36 	bl	8001178 <HAL_GetTick>
 800190c:	1bc0      	subs	r0, r0, r7
 800190e:	2802      	cmp	r0, #2
 8001910:	d9f5      	bls.n	80018fe <HAL_RCC_OscConfig+0x2aa>
 8001912:	e73f      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
    if(HAL_IS_BIT_CLR(RCC->APB1ENR1, RCC_APB1ENR1_PWREN))
 8001914:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001916:	00df      	lsls	r7, r3, #3
 8001918:	d429      	bmi.n	800196e <HAL_RCC_OscConfig+0x31a>
      __HAL_RCC_PWR_CLK_ENABLE();
 800191a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800191c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001920:	65a3      	str	r3, [r4, #88]	; 0x58
 8001922:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001924:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001928:	9301      	str	r3, [sp, #4]
 800192a:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 800192c:	f04f 0801 	mov.w	r8, #1
    if(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8001930:	4f85      	ldr	r7, [pc, #532]	; (8001b48 <HAL_RCC_OscConfig+0x4f4>)
 8001932:	683b      	ldr	r3, [r7, #0]
 8001934:	05d8      	lsls	r0, r3, #23
 8001936:	d51d      	bpl.n	8001974 <HAL_RCC_OscConfig+0x320>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001938:	68ab      	ldr	r3, [r5, #8]
 800193a:	2b01      	cmp	r3, #1
 800193c:	d12b      	bne.n	8001996 <HAL_RCC_OscConfig+0x342>
 800193e:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8001942:	f043 0301 	orr.w	r3, r3, #1
 8001946:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
      tickstart = HAL_GetTick();
 800194a:	f7ff fc15 	bl	8001178 <HAL_GetTick>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800194e:	f241 3988 	movw	r9, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8001952:	4607      	mov	r7, r0
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 8001954:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 8001958:	079a      	lsls	r2, r3, #30
 800195a:	d542      	bpl.n	80019e2 <HAL_RCC_OscConfig+0x38e>
    if(pwrclkchanged == SET)
 800195c:	f1b8 0f00 	cmp.w	r8, #0
 8001960:	f43f aed7 	beq.w	8001712 <HAL_RCC_OscConfig+0xbe>
      __HAL_RCC_PWR_CLK_DISABLE();
 8001964:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001966:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800196a:	65a3      	str	r3, [r4, #88]	; 0x58
 800196c:	e6d1      	b.n	8001712 <HAL_RCC_OscConfig+0xbe>
    FlagStatus       pwrclkchanged = RESET;
 800196e:	f04f 0800 	mov.w	r8, #0
 8001972:	e7dd      	b.n	8001930 <HAL_RCC_OscConfig+0x2dc>
      SET_BIT(PWR->CR1, PWR_CR1_DBP);
 8001974:	683b      	ldr	r3, [r7, #0]
 8001976:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800197a:	603b      	str	r3, [r7, #0]
      tickstart = HAL_GetTick();
 800197c:	f7ff fbfc 	bl	8001178 <HAL_GetTick>
 8001980:	4681      	mov	r9, r0
      while(HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 8001982:	683b      	ldr	r3, [r7, #0]
 8001984:	05d9      	lsls	r1, r3, #23
 8001986:	d4d7      	bmi.n	8001938 <HAL_RCC_OscConfig+0x2e4>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001988:	f7ff fbf6 	bl	8001178 <HAL_GetTick>
 800198c:	eba0 0009 	sub.w	r0, r0, r9
 8001990:	2802      	cmp	r0, #2
 8001992:	d9f6      	bls.n	8001982 <HAL_RCC_OscConfig+0x32e>
 8001994:	e6fe      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001996:	2b05      	cmp	r3, #5
 8001998:	d106      	bne.n	80019a8 <HAL_RCC_OscConfig+0x354>
 800199a:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 800199e:	f043 0304 	orr.w	r3, r3, #4
 80019a2:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 80019a6:	e7ca      	b.n	800193e <HAL_RCC_OscConfig+0x2ea>
 80019a8:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 80019ac:	f022 0201 	bic.w	r2, r2, #1
 80019b0:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
 80019b4:	f8d4 2090 	ldr.w	r2, [r4, #144]	; 0x90
 80019b8:	f022 0204 	bic.w	r2, r2, #4
 80019bc:	f8c4 2090 	str.w	r2, [r4, #144]	; 0x90
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 80019c0:	2b00      	cmp	r3, #0
 80019c2:	d1c2      	bne.n	800194a <HAL_RCC_OscConfig+0x2f6>
      tickstart = HAL_GetTick();
 80019c4:	f7ff fbd8 	bl	8001178 <HAL_GetTick>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80019c8:	f241 3988 	movw	r9, #5000	; 0x1388
      tickstart = HAL_GetTick();
 80019cc:	4607      	mov	r7, r0
      while(READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 80019ce:	f8d4 3090 	ldr.w	r3, [r4, #144]	; 0x90
 80019d2:	079b      	lsls	r3, r3, #30
 80019d4:	d5c2      	bpl.n	800195c <HAL_RCC_OscConfig+0x308>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80019d6:	f7ff fbcf 	bl	8001178 <HAL_GetTick>
 80019da:	1bc0      	subs	r0, r0, r7
 80019dc:	4548      	cmp	r0, r9
 80019de:	d9f6      	bls.n	80019ce <HAL_RCC_OscConfig+0x37a>
 80019e0:	e6d8      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
        if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 80019e2:	f7ff fbc9 	bl	8001178 <HAL_GetTick>
 80019e6:	1bc0      	subs	r0, r0, r7
 80019e8:	4548      	cmp	r0, r9
 80019ea:	d9b3      	bls.n	8001954 <HAL_RCC_OscConfig+0x300>
 80019ec:	e6d2      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
    if(RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 80019ee:	2b02      	cmp	r3, #2
 80019f0:	f040 808f 	bne.w	8001b12 <HAL_RCC_OscConfig+0x4be>
      pll_config = RCC->PLLCFGR;
 80019f4:	68e3      	ldr	r3, [r4, #12]
      if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 80019f6:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 80019f8:	f003 0103 	and.w	r1, r3, #3
 80019fc:	4291      	cmp	r1, r2
 80019fe:	d124      	bne.n	8001a4a <HAL_RCC_OscConfig+0x3f6>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 8001a00:	6b29      	ldr	r1, [r5, #48]	; 0x30
 8001a02:	f003 0270 	and.w	r2, r3, #112	; 0x70
 8001a06:	3901      	subs	r1, #1
      if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC)  != RCC_OscInitStruct->PLL.PLLSource) ||
 8001a08:	ebb2 1f01 	cmp.w	r2, r1, lsl #4
 8001a0c:	d11d      	bne.n	8001a4a <HAL_RCC_OscConfig+0x3f6>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8001a0e:	6b69      	ldr	r1, [r5, #52]	; 0x34
 8001a10:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLM)    != ((RCC_OscInitStruct->PLL.PLLM - 1U) << RCC_PLLCFGR_PLLM_Pos)) ||
 8001a14:	ebb2 2f01 	cmp.w	r2, r1, lsl #8
 8001a18:	d117      	bne.n	8001a4a <HAL_RCC_OscConfig+0x3f6>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_DIV7) ? 0U : 1U)) ||
 8001a1a:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8001a1c:	3a07      	subs	r2, #7
 8001a1e:	f403 3100 	and.w	r1, r3, #131072	; 0x20000
 8001a22:	bf18      	it	ne
 8001a24:	2201      	movne	r2, #1
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLN)    != (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)) ||
 8001a26:	4291      	cmp	r1, r2
 8001a28:	d10f      	bne.n	8001a4a <HAL_RCC_OscConfig+0x3f6>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 8001a2a:	6bea      	ldr	r2, [r5, #60]	; 0x3c
 8001a2c:	0852      	lsrs	r2, r2, #1
 8001a2e:	f403 01c0 	and.w	r1, r3, #6291456	; 0x600000
 8001a32:	3a01      	subs	r2, #1
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLP)    != ((RCC_OscInitStruct->PLL.PLLP == RCC_PLLP_DIV7) ? 0U : 1U)) ||
 8001a34:	ebb1 5f42 	cmp.w	r1, r2, lsl #21
 8001a38:	d107      	bne.n	8001a4a <HAL_RCC_OscConfig+0x3f6>
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLR)    != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U) << RCC_PLLCFGR_PLLR_Pos)))
 8001a3a:	6c2a      	ldr	r2, [r5, #64]	; 0x40
 8001a3c:	0852      	lsrs	r2, r2, #1
 8001a3e:	f003 63c0 	and.w	r3, r3, #100663296	; 0x6000000
 8001a42:	3a01      	subs	r2, #1
         (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ)    != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U) << RCC_PLLCFGR_PLLQ_Pos)) ||
 8001a44:	ebb3 6f42 	cmp.w	r3, r2, lsl #25
 8001a48:	d04a      	beq.n	8001ae0 <HAL_RCC_OscConfig+0x48c>
        if(sysclk_source != RCC_CFGR_SWS_PLL)
 8001a4a:	2e0c      	cmp	r6, #12
 8001a4c:	f43f ae06 	beq.w	800165c <HAL_RCC_OscConfig+0x8>
          if((READ_BIT(RCC->CR, RCC_CR_PLLSAI1ON) != 0U)
 8001a50:	6823      	ldr	r3, [r4, #0]
 8001a52:	015f      	lsls	r7, r3, #5
 8001a54:	f53f ae02 	bmi.w	800165c <HAL_RCC_OscConfig+0x8>
             || (READ_BIT(RCC->CR, RCC_CR_PLLSAI2ON) != 0U)
 8001a58:	6823      	ldr	r3, [r4, #0]
 8001a5a:	00de      	lsls	r6, r3, #3
 8001a5c:	f53f adfe 	bmi.w	800165c <HAL_RCC_OscConfig+0x8>
            __HAL_RCC_PLL_DISABLE();
 8001a60:	6823      	ldr	r3, [r4, #0]
 8001a62:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8001a66:	6023      	str	r3, [r4, #0]
            tickstart = HAL_GetTick();
 8001a68:	f7ff fb86 	bl	8001178 <HAL_GetTick>
 8001a6c:	4606      	mov	r6, r0
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8001a6e:	6823      	ldr	r3, [r4, #0]
 8001a70:	0198      	lsls	r0, r3, #6
 8001a72:	d42f      	bmi.n	8001ad4 <HAL_RCC_OscConfig+0x480>
            __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8001a74:	68e2      	ldr	r2, [r4, #12]
 8001a76:	4b35      	ldr	r3, [pc, #212]	; (8001b4c <HAL_RCC_OscConfig+0x4f8>)
 8001a78:	4013      	ands	r3, r2
 8001a7a:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 8001a7c:	4313      	orrs	r3, r2
 8001a7e:	6b6a      	ldr	r2, [r5, #52]	; 0x34
 8001a80:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8001a84:	6b2a      	ldr	r2, [r5, #48]	; 0x30
 8001a86:	3a01      	subs	r2, #1
 8001a88:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
 8001a8c:	6baa      	ldr	r2, [r5, #56]	; 0x38
 8001a8e:	0912      	lsrs	r2, r2, #4
 8001a90:	ea43 4342 	orr.w	r3, r3, r2, lsl #17
 8001a94:	6bea      	ldr	r2, [r5, #60]	; 0x3c
 8001a96:	0852      	lsrs	r2, r2, #1
 8001a98:	3a01      	subs	r2, #1
 8001a9a:	ea43 5342 	orr.w	r3, r3, r2, lsl #21
 8001a9e:	6c2a      	ldr	r2, [r5, #64]	; 0x40
 8001aa0:	0852      	lsrs	r2, r2, #1
 8001aa2:	3a01      	subs	r2, #1
 8001aa4:	ea43 6342 	orr.w	r3, r3, r2, lsl #25
 8001aa8:	60e3      	str	r3, [r4, #12]
            __HAL_RCC_PLL_ENABLE();
 8001aaa:	6823      	ldr	r3, [r4, #0]
 8001aac:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001ab0:	6023      	str	r3, [r4, #0]
            __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 8001ab2:	68e3      	ldr	r3, [r4, #12]
 8001ab4:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001ab8:	60e3      	str	r3, [r4, #12]
            tickstart = HAL_GetTick();
 8001aba:	f7ff fb5d 	bl	8001178 <HAL_GetTick>
 8001abe:	4605      	mov	r5, r0
            while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8001ac0:	6823      	ldr	r3, [r4, #0]
 8001ac2:	0199      	lsls	r1, r3, #6
 8001ac4:	f53f ae29 	bmi.w	800171a <HAL_RCC_OscConfig+0xc6>
              if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001ac8:	f7ff fb56 	bl	8001178 <HAL_GetTick>
 8001acc:	1b40      	subs	r0, r0, r5
 8001ace:	2802      	cmp	r0, #2
 8001ad0:	d9f6      	bls.n	8001ac0 <HAL_RCC_OscConfig+0x46c>
 8001ad2:	e65f      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
              if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001ad4:	f7ff fb50 	bl	8001178 <HAL_GetTick>
 8001ad8:	1b80      	subs	r0, r0, r6
 8001ada:	2802      	cmp	r0, #2
 8001adc:	d9c7      	bls.n	8001a6e <HAL_RCC_OscConfig+0x41a>
 8001ade:	e659      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
        if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8001ae0:	6823      	ldr	r3, [r4, #0]
 8001ae2:	019a      	lsls	r2, r3, #6
 8001ae4:	f53f ae19 	bmi.w	800171a <HAL_RCC_OscConfig+0xc6>
          __HAL_RCC_PLL_ENABLE();
 8001ae8:	6823      	ldr	r3, [r4, #0]
 8001aea:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001aee:	6023      	str	r3, [r4, #0]
          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 8001af0:	68e3      	ldr	r3, [r4, #12]
 8001af2:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8001af6:	60e3      	str	r3, [r4, #12]
          tickstart = HAL_GetTick();
 8001af8:	f7ff fb3e 	bl	8001178 <HAL_GetTick>
 8001afc:	4605      	mov	r5, r0
          while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8001afe:	6823      	ldr	r3, [r4, #0]
 8001b00:	019b      	lsls	r3, r3, #6
 8001b02:	f53f ae0a 	bmi.w	800171a <HAL_RCC_OscConfig+0xc6>
            if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001b06:	f7ff fb37 	bl	8001178 <HAL_GetTick>
 8001b0a:	1b40      	subs	r0, r0, r5
 8001b0c:	2802      	cmp	r0, #2
 8001b0e:	d9f6      	bls.n	8001afe <HAL_RCC_OscConfig+0x4aa>
 8001b10:	e640      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
      if(sysclk_source != RCC_CFGR_SWS_PLL)
 8001b12:	2e0c      	cmp	r6, #12
 8001b14:	f43f ada2 	beq.w	800165c <HAL_RCC_OscConfig+0x8>
        __HAL_RCC_PLL_DISABLE();
 8001b18:	6823      	ldr	r3, [r4, #0]
 8001b1a:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8001b1e:	6023      	str	r3, [r4, #0]
        tickstart = HAL_GetTick();
 8001b20:	f7ff fb2a 	bl	8001178 <HAL_GetTick>
 8001b24:	4605      	mov	r5, r0
        while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 8001b26:	6823      	ldr	r3, [r4, #0]
 8001b28:	f013 7300 	ands.w	r3, r3, #33554432	; 0x2000000
 8001b2c:	d105      	bne.n	8001b3a <HAL_RCC_OscConfig+0x4e6>
        RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_SAI3CLK);
 8001b2e:	68e1      	ldr	r1, [r4, #12]
 8001b30:	4a07      	ldr	r2, [pc, #28]	; (8001b50 <HAL_RCC_OscConfig+0x4fc>)
 8001b32:	400a      	ands	r2, r1
 8001b34:	60e2      	str	r2, [r4, #12]
  return HAL_OK;
 8001b36:	4618      	mov	r0, r3
 8001b38:	e591      	b.n	800165e <HAL_RCC_OscConfig+0xa>
          if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8001b3a:	f7ff fb1d 	bl	8001178 <HAL_GetTick>
 8001b3e:	1b40      	subs	r0, r0, r5
 8001b40:	2802      	cmp	r0, #2
 8001b42:	d9f0      	bls.n	8001b26 <HAL_RCC_OscConfig+0x4d2>
 8001b44:	e626      	b.n	8001794 <HAL_RCC_OscConfig+0x140>
 8001b46:	bf00      	nop
 8001b48:	40007000 	.word	0x40007000
 8001b4c:	f99d808c 	.word	0xf99d808c
 8001b50:	feeefffc 	.word	0xfeeefffc

08001b54 <HAL_RCC_ClockConfig>:
{
 8001b54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001b58:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8001b5a:	4604      	mov	r4, r0
 8001b5c:	b910      	cbnz	r0, 8001b64 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8001b5e:	2001      	movs	r0, #1
}
 8001b60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8001b64:	4a4b      	ldr	r2, [pc, #300]	; (8001c94 <HAL_RCC_ClockConfig+0x140>)
 8001b66:	6813      	ldr	r3, [r2, #0]
 8001b68:	f003 0307 	and.w	r3, r3, #7
 8001b6c:	428b      	cmp	r3, r1
 8001b6e:	d32c      	bcc.n	8001bca <HAL_RCC_ClockConfig+0x76>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001b70:	6821      	ldr	r1, [r4, #0]
 8001b72:	0788      	lsls	r0, r1, #30
 8001b74:	d434      	bmi.n	8001be0 <HAL_RCC_ClockConfig+0x8c>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8001b76:	07c9      	lsls	r1, r1, #31
 8001b78:	d43f      	bmi.n	8001bfa <HAL_RCC_ClockConfig+0xa6>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8001b7a:	6821      	ldr	r1, [r4, #0]
 8001b7c:	078a      	lsls	r2, r1, #30
 8001b7e:	d468      	bmi.n	8001c52 <HAL_RCC_ClockConfig+0xfe>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8001b80:	4a44      	ldr	r2, [pc, #272]	; (8001c94 <HAL_RCC_ClockConfig+0x140>)
 8001b82:	6813      	ldr	r3, [r2, #0]
 8001b84:	f003 0307 	and.w	r3, r3, #7
 8001b88:	42ab      	cmp	r3, r5
 8001b8a:	d86f      	bhi.n	8001c6c <HAL_RCC_ClockConfig+0x118>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8001b8c:	f011 0f04 	tst.w	r1, #4
 8001b90:	4d41      	ldr	r5, [pc, #260]	; (8001c98 <HAL_RCC_ClockConfig+0x144>)
 8001b92:	d177      	bne.n	8001c84 <HAL_RCC_ClockConfig+0x130>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8001b94:	070b      	lsls	r3, r1, #28
 8001b96:	d506      	bpl.n	8001ba6 <HAL_RCC_ClockConfig+0x52>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8001b98:	68ab      	ldr	r3, [r5, #8]
 8001b9a:	6922      	ldr	r2, [r4, #16]
 8001b9c:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 8001ba0:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8001ba4:	60ab      	str	r3, [r5, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 8001ba6:	f7ff fd07 	bl	80015b8 <HAL_RCC_GetSysClockFreq>
 8001baa:	68ab      	ldr	r3, [r5, #8]
 8001bac:	4a3b      	ldr	r2, [pc, #236]	; (8001c9c <HAL_RCC_ClockConfig+0x148>)
 8001bae:	f3c3 1303 	ubfx	r3, r3, #4, #4
}
 8001bb2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos] & 0x1FU);
 8001bb6:	5cd3      	ldrb	r3, [r2, r3]
 8001bb8:	f003 031f 	and.w	r3, r3, #31
 8001bbc:	40d8      	lsrs	r0, r3
 8001bbe:	4b38      	ldr	r3, [pc, #224]	; (8001ca0 <HAL_RCC_ClockConfig+0x14c>)
 8001bc0:	6018      	str	r0, [r3, #0]
  status = HAL_InitTick(uwTickPrio);
 8001bc2:	4b38      	ldr	r3, [pc, #224]	; (8001ca4 <HAL_RCC_ClockConfig+0x150>)
 8001bc4:	6818      	ldr	r0, [r3, #0]
 8001bc6:	f7ff ba8f 	b.w	80010e8 <HAL_InitTick>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001bca:	6813      	ldr	r3, [r2, #0]
 8001bcc:	f023 0307 	bic.w	r3, r3, #7
 8001bd0:	430b      	orrs	r3, r1
 8001bd2:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8001bd4:	6813      	ldr	r3, [r2, #0]
 8001bd6:	f003 0307 	and.w	r3, r3, #7
 8001bda:	428b      	cmp	r3, r1
 8001bdc:	d1bf      	bne.n	8001b5e <HAL_RCC_ClockConfig+0xa>
 8001bde:	e7c7      	b.n	8001b70 <HAL_RCC_ClockConfig+0x1c>
    if(RCC_ClkInitStruct->AHBCLKDivider > READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 8001be0:	4a2d      	ldr	r2, [pc, #180]	; (8001c98 <HAL_RCC_ClockConfig+0x144>)
 8001be2:	68a0      	ldr	r0, [r4, #8]
 8001be4:	6893      	ldr	r3, [r2, #8]
 8001be6:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001bea:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001bec:	bf81      	itttt	hi
 8001bee:	6893      	ldrhi	r3, [r2, #8]
 8001bf0:	f023 03f0 	bichi.w	r3, r3, #240	; 0xf0
 8001bf4:	4303      	orrhi	r3, r0
 8001bf6:	6093      	strhi	r3, [r2, #8]
 8001bf8:	e7bd      	b.n	8001b76 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001bfa:	6862      	ldr	r2, [r4, #4]
 8001bfc:	4e26      	ldr	r6, [pc, #152]	; (8001c98 <HAL_RCC_ClockConfig+0x144>)
 8001bfe:	2a03      	cmp	r2, #3
      if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8001c00:	6833      	ldr	r3, [r6, #0]
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8001c02:	d11a      	bne.n	8001c3a <HAL_RCC_ClockConfig+0xe6>
      if(READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 8001c04:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
        if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8001c08:	d0a9      	beq.n	8001b5e <HAL_RCC_ClockConfig+0xa>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8001c0a:	68b3      	ldr	r3, [r6, #8]
 8001c0c:	f023 0303 	bic.w	r3, r3, #3
 8001c10:	4313      	orrs	r3, r2
 8001c12:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8001c14:	f7ff fab0 	bl	8001178 <HAL_GetTick>
      if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001c18:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8001c1c:	4607      	mov	r7, r0
    while(__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001c1e:	68b3      	ldr	r3, [r6, #8]
 8001c20:	6862      	ldr	r2, [r4, #4]
 8001c22:	f003 030c 	and.w	r3, r3, #12
 8001c26:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8001c2a:	d0a6      	beq.n	8001b7a <HAL_RCC_ClockConfig+0x26>
      if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001c2c:	f7ff faa4 	bl	8001178 <HAL_GetTick>
 8001c30:	1bc0      	subs	r0, r0, r7
 8001c32:	4540      	cmp	r0, r8
 8001c34:	d9f3      	bls.n	8001c1e <HAL_RCC_ClockConfig+0xca>
        return HAL_TIMEOUT;
 8001c36:	2003      	movs	r0, #3
 8001c38:	e792      	b.n	8001b60 <HAL_RCC_ClockConfig+0xc>
      if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001c3a:	2a02      	cmp	r2, #2
 8001c3c:	d102      	bne.n	8001c44 <HAL_RCC_ClockConfig+0xf0>
        if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 8001c3e:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8001c42:	e7e1      	b.n	8001c08 <HAL_RCC_ClockConfig+0xb4>
      else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_MSI)
 8001c44:	b912      	cbnz	r2, 8001c4c <HAL_RCC_ClockConfig+0xf8>
        if(READ_BIT(RCC->CR, RCC_CR_MSIRDY) == 0U)
 8001c46:	f013 0f02 	tst.w	r3, #2
 8001c4a:	e7dd      	b.n	8001c08 <HAL_RCC_ClockConfig+0xb4>
        if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 8001c4c:	f413 6f80 	tst.w	r3, #1024	; 0x400
 8001c50:	e7da      	b.n	8001c08 <HAL_RCC_ClockConfig+0xb4>
    if(RCC_ClkInitStruct->AHBCLKDivider < READ_BIT(RCC->CFGR, RCC_CFGR_HPRE))
 8001c52:	4a11      	ldr	r2, [pc, #68]	; (8001c98 <HAL_RCC_ClockConfig+0x144>)
 8001c54:	68a0      	ldr	r0, [r4, #8]
 8001c56:	6893      	ldr	r3, [r2, #8]
 8001c58:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001c5c:	4298      	cmp	r0, r3
      MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001c5e:	bf3f      	itttt	cc
 8001c60:	6893      	ldrcc	r3, [r2, #8]
 8001c62:	f023 03f0 	biccc.w	r3, r3, #240	; 0xf0
 8001c66:	4303      	orrcc	r3, r0
 8001c68:	6093      	strcc	r3, [r2, #8]
 8001c6a:	e789      	b.n	8001b80 <HAL_RCC_ClockConfig+0x2c>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8001c6c:	6813      	ldr	r3, [r2, #0]
 8001c6e:	f023 0307 	bic.w	r3, r3, #7
 8001c72:	432b      	orrs	r3, r5
 8001c74:	6013      	str	r3, [r2, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8001c76:	6813      	ldr	r3, [r2, #0]
 8001c78:	f003 0307 	and.w	r3, r3, #7
 8001c7c:	42ab      	cmp	r3, r5
 8001c7e:	f47f af6e 	bne.w	8001b5e <HAL_RCC_ClockConfig+0xa>
 8001c82:	e783      	b.n	8001b8c <HAL_RCC_ClockConfig+0x38>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8001c84:	68ab      	ldr	r3, [r5, #8]
 8001c86:	68e2      	ldr	r2, [r4, #12]
 8001c88:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001c8c:	4313      	orrs	r3, r2
 8001c8e:	60ab      	str	r3, [r5, #8]
 8001c90:	e780      	b.n	8001b94 <HAL_RCC_ClockConfig+0x40>
 8001c92:	bf00      	nop
 8001c94:	40022000 	.word	0x40022000
 8001c98:	40021000 	.word	0x40021000
 8001c9c:	08007450 	.word	0x08007450
 8001ca0:	200000ec 	.word	0x200000ec
 8001ca4:	200000f4 	.word	0x200000f4

08001ca8 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 8001ca8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001cac:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8001cb0:	4604      	mov	r4, r0
 8001cb2:	460e      	mov	r6, r1
 8001cb4:	4615      	mov	r5, r2
 8001cb6:	461f      	mov	r7, r3
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8001cb8:	6822      	ldr	r2, [r4, #0]
 8001cba:	69d3      	ldr	r3, [r2, #28]
 8001cbc:	ea36 0303 	bics.w	r3, r6, r3
 8001cc0:	bf0c      	ite	eq
 8001cc2:	2301      	moveq	r3, #1
 8001cc4:	2300      	movne	r3, #0
 8001cc6:	42ab      	cmp	r3, r5
 8001cc8:	d001      	beq.n	8001cce <UART_WaitOnFlagUntilTimeout+0x26>
          return HAL_TIMEOUT;
        }
      }
    }
  }
  return HAL_OK;
 8001cca:	2000      	movs	r0, #0
 8001ccc:	e025      	b.n	8001d1a <UART_WaitOnFlagUntilTimeout+0x72>
    if (Timeout != HAL_MAX_DELAY)
 8001cce:	f1b8 3fff 	cmp.w	r8, #4294967295
 8001cd2:	d0f2      	beq.n	8001cba <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8001cd4:	f7ff fa50 	bl	8001178 <HAL_GetTick>
 8001cd8:	1bc0      	subs	r0, r0, r7
 8001cda:	4540      	cmp	r0, r8
 8001cdc:	6820      	ldr	r0, [r4, #0]
 8001cde:	d802      	bhi.n	8001ce6 <UART_WaitOnFlagUntilTimeout+0x3e>
 8001ce0:	f1b8 0f00 	cmp.w	r8, #0
 8001ce4:	d11b      	bne.n	8001d1e <UART_WaitOnFlagUntilTimeout+0x76>
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001ce6:	e850 3f00 	ldrex	r3, [r0]
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8001cea:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001cee:	e840 3200 	strex	r2, r3, [r0]
 8001cf2:	2a00      	cmp	r2, #0
 8001cf4:	d1f7      	bne.n	8001ce6 <UART_WaitOnFlagUntilTimeout+0x3e>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001cf6:	f100 0308 	add.w	r3, r0, #8
 8001cfa:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8001cfe:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001d02:	f100 0108 	add.w	r1, r0, #8
 8001d06:	e841 3200 	strex	r2, r3, [r1]
 8001d0a:	2a00      	cmp	r2, #0
 8001d0c:	d1f3      	bne.n	8001cf6 <UART_WaitOnFlagUntilTimeout+0x4e>
        huart->gState = HAL_UART_STATE_READY;
 8001d0e:	2320      	movs	r3, #32
 8001d10:	67a3      	str	r3, [r4, #120]	; 0x78
        huart->RxState = HAL_UART_STATE_READY;
 8001d12:	67e3      	str	r3, [r4, #124]	; 0x7c
          __HAL_UNLOCK(huart);
 8001d14:	f884 2074 	strb.w	r2, [r4, #116]	; 0x74
          return HAL_TIMEOUT;
 8001d18:	2003      	movs	r0, #3
}
 8001d1a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
 8001d1e:	6803      	ldr	r3, [r0, #0]
 8001d20:	075a      	lsls	r2, r3, #29
 8001d22:	d5c9      	bpl.n	8001cb8 <UART_WaitOnFlagUntilTimeout+0x10>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 8001d24:	69c3      	ldr	r3, [r0, #28]
 8001d26:	051b      	lsls	r3, r3, #20
 8001d28:	d5c6      	bpl.n	8001cb8 <UART_WaitOnFlagUntilTimeout+0x10>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 8001d2a:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8001d2e:	6203      	str	r3, [r0, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001d30:	e850 3f00 	ldrex	r3, [r0]
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8001d34:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001d38:	e840 3200 	strex	r2, r3, [r0]
 8001d3c:	2a00      	cmp	r2, #0
 8001d3e:	d1f7      	bne.n	8001d30 <UART_WaitOnFlagUntilTimeout+0x88>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001d40:	f100 0308 	add.w	r3, r0, #8
 8001d44:	e853 3f00 	ldrex	r3, [r3]
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8001d48:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001d4c:	f100 0108 	add.w	r1, r0, #8
 8001d50:	e841 3200 	strex	r2, r3, [r1]
 8001d54:	2a00      	cmp	r2, #0
 8001d56:	d1f3      	bne.n	8001d40 <UART_WaitOnFlagUntilTimeout+0x98>
          huart->gState = HAL_UART_STATE_READY;
 8001d58:	2320      	movs	r3, #32
 8001d5a:	67a3      	str	r3, [r4, #120]	; 0x78
          huart->RxState = HAL_UART_STATE_READY;
 8001d5c:	67e3      	str	r3, [r4, #124]	; 0x7c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
 8001d5e:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 8001d62:	e7d7      	b.n	8001d14 <UART_WaitOnFlagUntilTimeout+0x6c>

08001d64 <HAL_UART_Transmit>:
{
 8001d64:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8001d68:	4698      	mov	r8, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8001d6a:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8001d6c:	2b20      	cmp	r3, #32
{
 8001d6e:	4604      	mov	r4, r0
 8001d70:	460e      	mov	r6, r1
 8001d72:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8001d74:	d14e      	bne.n	8001e14 <HAL_UART_Transmit+0xb0>
    if ((pData == NULL) || (Size == 0U))
 8001d76:	2900      	cmp	r1, #0
 8001d78:	d04a      	beq.n	8001e10 <HAL_UART_Transmit+0xac>
 8001d7a:	2a00      	cmp	r2, #0
 8001d7c:	d048      	beq.n	8001e10 <HAL_UART_Transmit+0xac>
    __HAL_LOCK(huart);
 8001d7e:	f890 3074 	ldrb.w	r3, [r0, #116]	; 0x74
 8001d82:	2b01      	cmp	r3, #1
 8001d84:	d046      	beq.n	8001e14 <HAL_UART_Transmit+0xb0>
 8001d86:	2301      	movs	r3, #1
 8001d88:	f880 3074 	strb.w	r3, [r0, #116]	; 0x74
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001d8c:	2500      	movs	r5, #0
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8001d8e:	2321      	movs	r3, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001d90:	f8c0 5080 	str.w	r5, [r0, #128]	; 0x80
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8001d94:	6783      	str	r3, [r0, #120]	; 0x78
    tickstart = HAL_GetTick();
 8001d96:	f7ff f9ef 	bl	8001178 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8001d9a:	68a2      	ldr	r2, [r4, #8]
    huart->TxXferSize  = Size;
 8001d9c:	f8a4 7050 	strh.w	r7, [r4, #80]	; 0x50
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8001da0:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
    tickstart = HAL_GetTick();
 8001da4:	4603      	mov	r3, r0
    huart->TxXferCount = Size;
 8001da6:	f8a4 7052 	strh.w	r7, [r4, #82]	; 0x52
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8001daa:	d103      	bne.n	8001db4 <HAL_UART_Transmit+0x50>
 8001dac:	6922      	ldr	r2, [r4, #16]
 8001dae:	b90a      	cbnz	r2, 8001db4 <HAL_UART_Transmit+0x50>
 8001db0:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8001db2:	4616      	mov	r6, r2
    __HAL_UNLOCK(huart);
 8001db4:	2200      	movs	r2, #0
 8001db6:	f884 2074 	strb.w	r2, [r4, #116]	; 0x74
    while (huart->TxXferCount > 0U)
 8001dba:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8001dbe:	f8cd 8000 	str.w	r8, [sp]
    while (huart->TxXferCount > 0U)
 8001dc2:	b292      	uxth	r2, r2
 8001dc4:	b93a      	cbnz	r2, 8001dd6 <HAL_UART_Transmit+0x72>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8001dc6:	2140      	movs	r1, #64	; 0x40
 8001dc8:	4620      	mov	r0, r4
 8001dca:	f7ff ff6d 	bl	8001ca8 <UART_WaitOnFlagUntilTimeout>
 8001dce:	b950      	cbnz	r0, 8001de6 <HAL_UART_Transmit+0x82>
    huart->gState = HAL_UART_STATE_READY;
 8001dd0:	2320      	movs	r3, #32
 8001dd2:	67a3      	str	r3, [r4, #120]	; 0x78
    return HAL_OK;
 8001dd4:	e008      	b.n	8001de8 <HAL_UART_Transmit+0x84>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8001dd6:	2200      	movs	r2, #0
 8001dd8:	2180      	movs	r1, #128	; 0x80
 8001dda:	4620      	mov	r0, r4
 8001ddc:	9303      	str	r3, [sp, #12]
 8001dde:	f7ff ff63 	bl	8001ca8 <UART_WaitOnFlagUntilTimeout>
 8001de2:	9b03      	ldr	r3, [sp, #12]
 8001de4:	b118      	cbz	r0, 8001dee <HAL_UART_Transmit+0x8a>
        return HAL_TIMEOUT;
 8001de6:	2003      	movs	r0, #3
}
 8001de8:	b004      	add	sp, #16
 8001dea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8001dee:	6821      	ldr	r1, [r4, #0]
      if (pdata8bits == NULL)
 8001df0:	b95e      	cbnz	r6, 8001e0a <HAL_UART_Transmit+0xa6>
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8001df2:	f835 2b02 	ldrh.w	r2, [r5], #2
 8001df6:	f3c2 0208 	ubfx	r2, r2, #0, #9
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8001dfa:	850a      	strh	r2, [r1, #40]	; 0x28
      huart->TxXferCount--;
 8001dfc:	f8b4 2052 	ldrh.w	r2, [r4, #82]	; 0x52
 8001e00:	3a01      	subs	r2, #1
 8001e02:	b292      	uxth	r2, r2
 8001e04:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8001e08:	e7d7      	b.n	8001dba <HAL_UART_Transmit+0x56>
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8001e0a:	f816 2b01 	ldrb.w	r2, [r6], #1
 8001e0e:	e7f4      	b.n	8001dfa <HAL_UART_Transmit+0x96>
      return  HAL_ERROR;
 8001e10:	2001      	movs	r0, #1
 8001e12:	e7e9      	b.n	8001de8 <HAL_UART_Transmit+0x84>
    return HAL_BUSY;
 8001e14:	2002      	movs	r0, #2
 8001e16:	e7e7      	b.n	8001de8 <HAL_UART_Transmit+0x84>

08001e18 <ai_mnetwork_handle>:

AI_DECLARE_STATIC
struct network_instance *ai_mnetwork_handle(struct network_instance *inst)
{
    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
        if ((inst) && (&gnetworks[i] == inst))
 8001e18:	4b05      	ldr	r3, [pc, #20]	; (8001e30 <ai_mnetwork_handle+0x18>)
 8001e1a:	b120      	cbz	r0, 8001e26 <ai_mnetwork_handle+0xe>
            return inst;
        else if ((!inst) && (gnetworks[i].entry == NULL))
            return &gnetworks[i];
    }
    return NULL;
 8001e1c:	4298      	cmp	r0, r3
 8001e1e:	bf0c      	ite	eq
 8001e20:	4618      	moveq	r0, r3
 8001e22:	2000      	movne	r0, #0
 8001e24:	4770      	bx	lr
        else if ((!inst) && (gnetworks[i].entry == NULL))
 8001e26:	681a      	ldr	r2, [r3, #0]
            return inst;
 8001e28:	2a00      	cmp	r2, #0
 8001e2a:	bf08      	it	eq
 8001e2c:	4618      	moveq	r0, r3
}
 8001e2e:	4770      	bx	lr
 8001e30:	20000904 	.word	0x20000904

08001e34 <ai_mnetwork_is_valid.constprop.0>:
ai_bool ai_mnetwork_is_valid(const char* name,
 8001e34:	b510      	push	{r4, lr}
    if (name && (strlen(entry->name) == strlen(name)) &&
 8001e36:	4604      	mov	r4, r0
 8001e38:	b160      	cbz	r0, 8001e54 <ai_mnetwork_is_valid.constprop.0+0x20>
 8001e3a:	f7fe fa19 	bl	8000270 <strlen>
 8001e3e:	2807      	cmp	r0, #7
 8001e40:	4602      	mov	r2, r0
 8001e42:	d107      	bne.n	8001e54 <ai_mnetwork_is_valid.constprop.0+0x20>
            (strncmp(entry->name, name, strlen(entry->name)) == 0))
 8001e44:	4804      	ldr	r0, [pc, #16]	; (8001e58 <ai_mnetwork_is_valid.constprop.0+0x24>)
 8001e46:	4621      	mov	r1, r4
 8001e48:	f003 fb6c 	bl	8005524 <strncmp>
    if (name && (strlen(entry->name) == strlen(name)) &&
 8001e4c:	fab0 f080 	clz	r0, r0
 8001e50:	0940      	lsrs	r0, r0, #5
}
 8001e52:	bd10      	pop	{r4, pc}
    return false;
 8001e54:	2000      	movs	r0, #0
 8001e56:	e7fc      	b.n	8001e52 <ai_mnetwork_is_valid.constprop.0+0x1e>
 8001e58:	08007490 	.word	0x08007490

08001e5c <ai_mnetwork_find>:
    }
}

AI_API_ENTRY
const char* ai_mnetwork_find(const char *name, ai_int idx)
{
 8001e5c:	b510      	push	{r4, lr}
 8001e5e:	460c      	mov	r4, r1
    const ai_network_entry_t *entry;

    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
        entry = &networks[i];
        if (ai_mnetwork_is_valid(name, entry))
 8001e60:	f7ff ffe8 	bl	8001e34 <ai_mnetwork_is_valid.constprop.0>
 8001e64:	b920      	cbnz	r0, 8001e70 <ai_mnetwork_find+0x14>
        else {
            if (!idx--)
                return entry->name;
        }
    }
    return NULL;
 8001e66:	2c00      	cmp	r4, #0
 8001e68:	4802      	ldr	r0, [pc, #8]	; (8001e74 <ai_mnetwork_find+0x18>)
 8001e6a:	bf18      	it	ne
 8001e6c:	2000      	movne	r0, #0
}
 8001e6e:	bd10      	pop	{r4, pc}
            return entry->name;
 8001e70:	4800      	ldr	r0, [pc, #0]	; (8001e74 <ai_mnetwork_find+0x18>)
 8001e72:	e7fc      	b.n	8001e6e <ai_mnetwork_find+0x12>
 8001e74:	08007490 	.word	0x08007490

08001e78 <ai_mnetwork_create>:

AI_API_ENTRY
ai_error ai_mnetwork_create(const char *name, ai_handle* network,
        const ai_buffer* network_config)
{
 8001e78:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001e7a:	4606      	mov	r6, r0
    const ai_network_entry_t *entry;
    const ai_network_entry_t *found = NULL;
    ai_error err;
    struct network_instance *inst = ai_mnetwork_handle(NULL);
 8001e7c:	2000      	movs	r0, #0
{
 8001e7e:	9201      	str	r2, [sp, #4]
    struct network_instance *inst = ai_mnetwork_handle(NULL);
 8001e80:	f7ff ffca 	bl	8001e18 <ai_mnetwork_handle>
{
 8001e84:	460d      	mov	r5, r1

    if (!inst) {
 8001e86:	4604      	mov	r4, r0
 8001e88:	b1e0      	cbz	r0, 8001ec4 <ai_mnetwork_create+0x4c>
        return err;
    }

    for (int i=0; i<AI_MNETWORK_NUMBER; i++) {
        entry = &networks[i];
        if (ai_mnetwork_is_valid(name, entry)) {
 8001e8a:	4630      	mov	r0, r6
 8001e8c:	f7ff ffd2 	bl	8001e34 <ai_mnetwork_is_valid.constprop.0>
 8001e90:	9901      	ldr	r1, [sp, #4]
 8001e92:	b910      	cbnz	r0, 8001e9a <ai_mnetwork_create+0x22>
 8001e94:	2214      	movs	r2, #20
 8001e96:	2310      	movs	r3, #16
 8001e98:	e00d      	b.n	8001eb6 <ai_mnetwork_create+0x3e>
    }

    if (network_config == NULL)
        err = found->ai_create(network, found->config);
    else
        err = found->ai_create(network, network_config);
 8001e9a:	4628      	mov	r0, r5
 8001e9c:	f000 f886 	bl	8001fac <ai_network_create>
 8001ea0:	b2c2      	uxtb	r2, r0
 8001ea2:	f3c0 2317 	ubfx	r3, r0, #8, #24
    if ((err.code == AI_ERROR_CODE_NONE) && (err.type == AI_ERROR_NONE)) {
 8001ea6:	ea52 2103 	orrs.w	r1, r2, r3, lsl #8
 8001eaa:	d104      	bne.n	8001eb6 <ai_mnetwork_create+0x3e>
        inst->entry = found;
 8001eac:	4906      	ldr	r1, [pc, #24]	; (8001ec8 <ai_mnetwork_create+0x50>)
 8001eae:	6021      	str	r1, [r4, #0]
        inst->handle = *network;
 8001eb0:	6829      	ldr	r1, [r5, #0]
 8001eb2:	6061      	str	r1, [r4, #4]
        *network = (ai_handle*)inst;
 8001eb4:	602c      	str	r4, [r5, #0]
        return err;
 8001eb6:	2000      	movs	r0, #0
 8001eb8:	f362 0007 	bfi	r0, r2, #0, #8
 8001ebc:	f363 201f 	bfi	r0, r3, #8, #24
    }

    return err;
}
 8001ec0:	b002      	add	sp, #8
 8001ec2:	bd70      	pop	{r4, r5, r6, pc}
 8001ec4:	2231      	movs	r2, #49	; 0x31
 8001ec6:	e7e6      	b.n	8001e96 <ai_mnetwork_create+0x1e>
 8001ec8:	08007498 	.word	0x08007498

08001ecc <ai_mnetwork_init>:
        return err;
}

AI_API_ENTRY
ai_bool ai_mnetwork_init(ai_handle network)
{
 8001ecc:	b530      	push	{r4, r5, lr}
 8001ece:	b08f      	sub	sp, #60	; 0x3c
    struct network_instance *inn;
    ai_network_params par;

    inn =  ai_mnetwork_handle((struct network_instance *)network);
 8001ed0:	f7ff ffa2 	bl	8001e18 <ai_mnetwork_handle>
    if (inn) {
 8001ed4:	4604      	mov	r4, r0
 8001ed6:	b168      	cbz	r0, 8001ef4 <ai_mnetwork_init+0x28>
        inn->entry->ai_data_params_get(&par);
 8001ed8:	6803      	ldr	r3, [r0, #0]
 8001eda:	4668      	mov	r0, sp
 8001edc:	689b      	ldr	r3, [r3, #8]
 8001ede:	4798      	blx	r3
        for (int idx=0; idx < par.map_activations.size; idx++)
 8001ee0:	2500      	movs	r5, #0
 8001ee2:	f8bd 200e 	ldrh.w	r2, [sp, #14]
          AI_BUFFER_ARRAY_ITEM_SET_ADDRESS(&par.map_activations, idx, inn->entry->activations[idx]);
 8001ee6:	6823      	ldr	r3, [r4, #0]
        for (int idx=0; idx < par.map_activations.size; idx++)
 8001ee8:	42aa      	cmp	r2, r5
 8001eea:	dc05      	bgt.n	8001ef8 <ai_mnetwork_init+0x2c>
        return inn->entry->ai_init(inn->handle, &par);
 8001eec:	69db      	ldr	r3, [r3, #28]
 8001eee:	6860      	ldr	r0, [r4, #4]
 8001ef0:	4669      	mov	r1, sp
 8001ef2:	4798      	blx	r3
    }
    else
        return false;
}
 8001ef4:	b00f      	add	sp, #60	; 0x3c
 8001ef6:	bd30      	pop	{r4, r5, pc}
          AI_BUFFER_ARRAY_ITEM_SET_ADDRESS(&par.map_activations, idx, inn->entry->activations[idx]);
 8001ef8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8001efa:	4629      	mov	r1, r5
 8001efc:	f853 2025 	ldr.w	r2, [r3, r5, lsl #2]
 8001f00:	a803      	add	r0, sp, #12
 8001f02:	f000 f98b 	bl	800221c <ai_buffer_array_item_set_address>
        for (int idx=0; idx < par.map_activations.size; idx++)
 8001f06:	3501      	adds	r5, #1
 8001f08:	e7eb      	b.n	8001ee2 <ai_mnetwork_init+0x16>
	...

08001f0c <ai_network_get_report>:


AI_API_ENTRY
ai_bool ai_network_get_report(
  ai_handle network, ai_network_report* report)
{
 8001f0c:	b570      	push	{r4, r5, r6, lr}
 8001f0e:	b0a2      	sub	sp, #136	; 0x88
 8001f10:	4606      	mov	r6, r0
 8001f12:	460d      	mov	r5, r1
  ai_network* net_ctx = AI_NETWORK_ACQUIRE_CTX(network);
 8001f14:	f000 fb7c 	bl	8002610 <ai_platform_context_acquire>
 8001f18:	4604      	mov	r4, r0

  if (report && net_ctx)
 8001f1a:	2d00      	cmp	r5, #0
 8001f1c:	d035      	beq.n	8001f8a <ai_network_get_report+0x7e>
 8001f1e:	2800      	cmp	r0, #0
 8001f20:	d030      	beq.n	8001f84 <ai_network_get_report+0x78>
  {
    ai_network_report r = {
 8001f22:	2278      	movs	r2, #120	; 0x78
 8001f24:	2100      	movs	r1, #0
 8001f26:	a804      	add	r0, sp, #16
 8001f28:	f003 faf4 	bl	8005514 <memset>
 8001f2c:	4b18      	ldr	r3, [pc, #96]	; (8001f90 <ai_network_get_report+0x84>)
 8001f2e:	9300      	str	r3, [sp, #0]
 8001f30:	4b18      	ldr	r3, [pc, #96]	; (8001f94 <ai_network_get_report+0x88>)
 8001f32:	9301      	str	r3, [sp, #4]
 8001f34:	4b18      	ldr	r3, [pc, #96]	; (8001f98 <ai_network_get_report+0x8c>)
 8001f36:	9302      	str	r3, [sp, #8]
 8001f38:	4b18      	ldr	r3, [pc, #96]	; (8001f9c <ai_network_get_report+0x90>)
 8001f3a:	9303      	str	r3, [sp, #12]
      .model_signature   = AI_NETWORK_MODEL_SIGNATURE,
      .model_datetime    = AI_TOOLS_DATE_TIME,
      
      .compile_datetime  = AI_TOOLS_COMPILE_TIME,
      
      .runtime_revision  = ai_platform_runtime_get_revision(),
 8001f3c:	f000 fa4c 	bl	80023d8 <ai_platform_runtime_get_revision>
    ai_network_report r = {
 8001f40:	9004      	str	r0, [sp, #16]
      .runtime_version   = ai_platform_runtime_get_version(),
 8001f42:	f000 fa81 	bl	8002448 <ai_platform_runtime_get_version>
    ai_network_report r = {
 8001f46:	4b16      	ldr	r3, [pc, #88]	; (8001fa0 <ai_network_get_report+0x94>)
 8001f48:	9306      	str	r3, [sp, #24]
 8001f4a:	f44f 7384 	mov.w	r3, #264	; 0x108
 8001f4e:	f8ad 301c 	strh.w	r3, [sp, #28]
      .runtime_version   = ai_platform_runtime_get_version(),
 8001f52:	9005      	str	r0, [sp, #20]
      .tool_revision     = AI_TOOLS_REVISION_ID,
      .tool_version      = {AI_TOOLS_VERSION_MAJOR, AI_TOOLS_VERSION_MINOR,
                            AI_TOOLS_VERSION_MICRO, 0x0},
      .tool_api_version  = AI_STRUCT_INIT,

      .api_version            = ai_platform_api_get_version(),
 8001f54:	f000 fac4 	bl	80024e0 <ai_platform_api_get_version>
 8001f58:	9009      	str	r0, [sp, #36]	; 0x24
      .interface_api_version  = ai_platform_interface_api_get_version(),
 8001f5a:	f000 fb0d 	bl	8002578 <ai_platform_interface_api_get_version>
    ai_network_report r = {
 8001f5e:	f44f 6286 	mov.w	r2, #1072	; 0x430
 8001f62:	2300      	movs	r3, #0
 8001f64:	e9cd 230c 	strd	r2, r3, [sp, #48]	; 0x30
      .interface_api_version  = ai_platform_interface_api_get_version(),
 8001f68:	900a      	str	r0, [sp, #40]	; 0x28
    ai_network_report r = {
 8001f6a:	4b0e      	ldr	r3, [pc, #56]	; (8001fa4 <ai_network_get_report+0x98>)
 8001f6c:	9311      	str	r3, [sp, #68]	; 0x44
      .map_activations   = AI_STRUCT_INIT,
      .n_nodes           = 0,
      .signature         = 0x0,
    };

    if (!ai_platform_api_get_network_report(network, &r)) return false;
 8001f6e:	4669      	mov	r1, sp
 8001f70:	4630      	mov	r0, r6
 8001f72:	f000 fc01 	bl	8002778 <ai_platform_api_get_network_report>
 8001f76:	4604      	mov	r4, r0
 8001f78:	b120      	cbz	r0, 8001f84 <ai_network_get_report+0x78>

    *report = r;
 8001f7a:	2288      	movs	r2, #136	; 0x88
 8001f7c:	4669      	mov	r1, sp
 8001f7e:	4628      	mov	r0, r5
 8001f80:	f003 fb68 	bl	8005654 <memcpy>
    return true;
  }
  return false;
}
 8001f84:	4620      	mov	r0, r4
 8001f86:	b022      	add	sp, #136	; 0x88
 8001f88:	bd70      	pop	{r4, r5, r6, pc}
  return false;
 8001f8a:	462c      	mov	r4, r5
 8001f8c:	e7fa      	b.n	8001f84 <ai_network_get_report+0x78>
 8001f8e:	bf00      	nop
 8001f90:	08007490 	.word	0x08007490
 8001f94:	080074c4 	.word	0x080074c4
 8001f98:	080074e5 	.word	0x080074e5
 8001f9c:	080074fe 	.word	0x080074fe
 8001fa0:	08007432 	.word	0x08007432
 8001fa4:	a1facade 	.word	0xa1facade

08001fa8 <ai_network_get_error>:

AI_API_ENTRY
ai_error ai_network_get_error(ai_handle network)
{
  return ai_platform_network_get_error(network);
 8001fa8:	f000 bb72 	b.w	8002690 <ai_platform_network_get_error>

08001fac <ai_network_create>:
}

AI_API_ENTRY
ai_error ai_network_create(
  ai_handle* network, const ai_buffer* network_config)
{
 8001fac:	b507      	push	{r0, r1, r2, lr}
  return ai_platform_network_create(
 8001fae:	2305      	movs	r3, #5
 8001fb0:	2200      	movs	r2, #0
 8001fb2:	e9cd 3200 	strd	r3, r2, [sp]
 8001fb6:	4a03      	ldr	r2, [pc, #12]	; (8001fc4 <ai_network_create+0x18>)
 8001fb8:	2301      	movs	r3, #1
 8001fba:	f000 fe9b 	bl	8002cf4 <ai_platform_network_create>
    network, network_config, 
    &AI_NET_OBJ_INSTANCE,
    AI_TOOLS_API_VERSION_MAJOR, AI_TOOLS_API_VERSION_MINOR, AI_TOOLS_API_VERSION_MICRO);
}
 8001fbe:	b003      	add	sp, #12
 8001fc0:	f85d fb04 	ldr.w	pc, [sp], #4
 8001fc4:	20000574 	.word	0x20000574

08001fc8 <ai_network_destroy>:
}

AI_API_ENTRY
ai_handle ai_network_destroy(ai_handle network)
{
  return ai_platform_network_destroy(network);
 8001fc8:	f000 bf6a 	b.w	8002ea0 <ai_platform_network_destroy>

08001fcc <ai_network_init>:
}

AI_API_ENTRY
ai_bool ai_network_init(
  ai_handle network, const ai_network_params* params)
{
 8001fcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001fd0:	4607      	mov	r7, r0
 8001fd2:	460e      	mov	r6, r1
  ai_network* net_ctx = ai_platform_network_init(network, params);
 8001fd4:	f000 ffd0 	bl	8002f78 <ai_platform_network_init>
  if (!net_ctx) return false;
 8001fd8:	4604      	mov	r4, r0
 8001fda:	2800      	cmp	r0, #0
 8001fdc:	d050      	beq.n	8002080 <ai_network_init+0xb4>
  if (ai_platform_get_weights_map(g_network_weights_map, 1, params)) {
 8001fde:	f8df 80e0 	ldr.w	r8, [pc, #224]	; 80020c0 <ai_network_init+0xf4>
 8001fe2:	4632      	mov	r2, r6
 8001fe4:	2101      	movs	r1, #1
 8001fe6:	4640      	mov	r0, r8
 8001fe8:	f000 f92c 	bl	8002244 <ai_platform_get_weights_map>
 8001fec:	4605      	mov	r5, r0
 8001fee:	2800      	cmp	r0, #0
 8001ff0:	d048      	beq.n	8002084 <ai_network_init+0xb8>
    dense_dense_weights_array.format |= AI_FMT_FLAG_CONST;
 8001ff2:	4a2a      	ldr	r2, [pc, #168]	; (800209c <ai_network_init+0xd0>)
 8001ff4:	6813      	ldr	r3, [r2, #0]
 8001ff6:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 8001ffa:	6013      	str	r3, [r2, #0]
    dense_dense_weights_array.data = AI_PTR(g_network_weights_map[0] + 0);
 8001ffc:	f8d8 3000 	ldr.w	r3, [r8]
    dense_dense_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 0);
 8002000:	e9c2 3302 	strd	r3, r3, [r2, #8]
    dense_dense_bias_array.format |= AI_FMT_FLAG_CONST;
 8002004:	4a26      	ldr	r2, [pc, #152]	; (80020a0 <ai_network_init+0xd4>)
 8002006:	6811      	ldr	r1, [r2, #0]
 8002008:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 800200c:	6011      	str	r1, [r2, #0]
    dense_dense_bias_array.data = AI_PTR(g_network_weights_map[0] + 3456);
 800200e:	f503 6158 	add.w	r1, r3, #3456	; 0xd80
    dense_dense_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 3456);
 8002012:	e9c2 1102 	strd	r1, r1, [r2, #8]
    dense_1_dense_weights_array.format |= AI_FMT_FLAG_CONST;
 8002016:	4a23      	ldr	r2, [pc, #140]	; (80020a4 <ai_network_init+0xd8>)
 8002018:	6811      	ldr	r1, [r2, #0]
 800201a:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 800201e:	6011      	str	r1, [r2, #0]
    dense_1_dense_weights_array.data = AI_PTR(g_network_weights_map[0] + 3584);
 8002020:	f503 6160 	add.w	r1, r3, #3584	; 0xe00
    dense_1_dense_weights_array.data_start = AI_PTR(g_network_weights_map[0] + 3584);
 8002024:	e9c2 1102 	strd	r1, r1, [r2, #8]
    dense_1_dense_bias_array.format |= AI_FMT_FLAG_CONST;
 8002028:	4a1f      	ldr	r2, [pc, #124]	; (80020a8 <ai_network_init+0xdc>)
    dense_1_dense_bias_array.data = AI_PTR(g_network_weights_map[0] + 3968);
 800202a:	f503 6378 	add.w	r3, r3, #3968	; 0xf80
    dense_1_dense_bias_array.format |= AI_FMT_FLAG_CONST;
 800202e:	6811      	ldr	r1, [r2, #0]
    dense_1_dense_bias_array.data_start = AI_PTR(g_network_weights_map[0] + 3968);
 8002030:	e9c2 3302 	strd	r3, r3, [r2, #8]
    dense_1_dense_bias_array.format |= AI_FMT_FLAG_CONST;
 8002034:	f041 4180 	orr.w	r1, r1, #1073741824	; 0x40000000
 8002038:	6011      	str	r1, [r2, #0]
  if (ai_platform_get_activations_map(g_network_activations_map, 1, params)) {
 800203a:	f8df 8088 	ldr.w	r8, [pc, #136]	; 80020c4 <ai_network_init+0xf8>
 800203e:	4632      	mov	r2, r6
 8002040:	2101      	movs	r1, #1
 8002042:	4640      	mov	r0, r8
 8002044:	f000 f952 	bl	80022ec <ai_platform_get_activations_map>
 8002048:	4606      	mov	r6, r0
 800204a:	b308      	cbz	r0, 8002090 <ai_network_init+0xc4>
    input_0_output_array.data = AI_PTR(g_network_activations_map[0] + 0);
 800204c:	f8d8 3000 	ldr.w	r3, [r8]
 8002050:	4a16      	ldr	r2, [pc, #88]	; (80020ac <ai_network_init+0xe0>)
    input_0_output_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 8002052:	e9c2 3302 	strd	r3, r3, [r2, #8]
    dense_1_dense_output_array.data = AI_PTR(g_network_activations_map[0] + 0);
 8002056:	4a16      	ldr	r2, [pc, #88]	; (80020b0 <ai_network_init+0xe4>)
    dense_1_dense_output_array.data_start = AI_PTR(g_network_activations_map[0] + 0);
 8002058:	e9c2 3302 	strd	r3, r3, [r2, #8]
    dense_1_output_array.data = AI_PTR(g_network_activations_map[0] + 12);
 800205c:	4a15      	ldr	r2, [pc, #84]	; (80020b4 <ai_network_init+0xe8>)
 800205e:	f103 010c 	add.w	r1, r3, #12
    dense_1_output_array.data_start = AI_PTR(g_network_activations_map[0] + 12);
 8002062:	e9c2 1102 	strd	r1, r1, [r2, #8]
    dense_dense_output_array.data = AI_PTR(g_network_activations_map[0] + 108);
 8002066:	4a14      	ldr	r2, [pc, #80]	; (80020b8 <ai_network_init+0xec>)
 8002068:	336c      	adds	r3, #108	; 0x6c
    dense_dense_output_array.data_start = AI_PTR(g_network_activations_map[0] + 108);
 800206a:	e9c2 3302 	strd	r3, r3, [r2, #8]
    dense_output_array.data = AI_PTR(g_network_activations_map[0] + 108);
 800206e:	4a13      	ldr	r2, [pc, #76]	; (80020bc <ai_network_init+0xf0>)
    dense_output_array.data_start = AI_PTR(g_network_activations_map[0] + 108);
 8002070:	e9c2 3302 	strd	r3, r3, [r2, #8]

  ai_bool ok = true;
  ok &= network_configure_weights(net_ctx, params);
  ok &= network_configure_activations(net_ctx, params);

  ok &= ai_platform_network_post_init(network);
 8002074:	4638      	mov	r0, r7
 8002076:	f001 f86d 	bl	8003154 <ai_platform_network_post_init>
 800207a:	4030      	ands	r0, r6
 800207c:	4005      	ands	r5, r0
 800207e:	b2e8      	uxtb	r0, r5

  return ok;
}
 8002080:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_WEIGHTS);
 8002084:	2212      	movs	r2, #18
 8002086:	2130      	movs	r1, #48	; 0x30
 8002088:	4620      	mov	r0, r4
 800208a:	f000 fb6f 	bl	800276c <ai_platform_network_set_error>
  return false;
 800208e:	e7d4      	b.n	800203a <ai_network_init+0x6e>
  AI_ERROR_TRAP(net_ctx, INIT_FAILED, NETWORK_ACTIVATIONS);
 8002090:	2213      	movs	r2, #19
 8002092:	2130      	movs	r1, #48	; 0x30
 8002094:	4620      	mov	r0, r4
 8002096:	f000 fb69 	bl	800276c <ai_platform_network_set_error>
  return false;
 800209a:	e7eb      	b.n	8002074 <ai_network_init+0xa8>
 800209c:	20000518 	.word	0x20000518
 80020a0:	200004a4 	.word	0x200004a4
 80020a4:	2000042c 	.word	0x2000042c
 80020a8:	200003b8 	.word	0x200003b8
 80020ac:	200005dc 	.word	0x200005dc
 80020b0:	20000400 	.word	0x20000400
 80020b4:	20000478 	.word	0x20000478
 80020b8:	200004ec 	.word	0x200004ec
 80020bc:	20000564 	.word	0x20000564
 80020c0:	200009c8 	.word	0x200009c8
 80020c4:	200009c4 	.word	0x200009c4

080020c8 <ai_network_run>:

AI_API_ENTRY
ai_i32 ai_network_run(
  ai_handle network, const ai_buffer* input, ai_buffer* output)
{
  return ai_platform_network_process(network, input, output);
 80020c8:	f001 b8cc 	b.w	8003264 <ai_platform_network_process>

080020cc <ai_network_forward>:
}

AI_API_ENTRY
ai_i32 ai_network_forward(ai_handle network, const ai_buffer* input)
{
  return ai_platform_network_process(network, input, NULL);
 80020cc:	2200      	movs	r2, #0
 80020ce:	f001 b8c9 	b.w	8003264 <ai_platform_network_process>
	...

080020d4 <ai_network_data_params_get>:
 * @ingroup network_data
 * @return true if a valid configuration is present, false otherwise
 */
AI_API_ENTRY
ai_bool ai_network_data_params_get(ai_network_params* params)
{
 80020d4:	b530      	push	{r4, r5, lr}
  if (!params) return false;
 80020d6:	4603      	mov	r3, r0
{
 80020d8:	b085      	sub	sp, #20
  if (!params) return false;
 80020da:	b170      	cbz	r0, 80020fa <ai_network_data_params_get+0x26>
  
  const ai_buffer_array map_activations = 
 80020dc:	4c08      	ldr	r4, [pc, #32]	; (8002100 <ai_network_data_params_get+0x2c>)
 80020de:	e894 0003 	ldmia.w	r4, {r0, r1}
 80020e2:	466a      	mov	r2, sp
 80020e4:	e882 0003 	stmia.w	r2, {r0, r1}
    AI_BUFFER_ARRAY_OBJ_INIT(AI_FLAG_NONE, AI_NETWORK_DATA_ACTIVATIONS_COUNT, g_network_data_map_activations);
  
  const ai_buffer_array map_weights = 
 80020e8:	e9d4 0102 	ldrd	r0, r1, [r4, #8]
 80020ec:	ad02      	add	r5, sp, #8
 80020ee:	e885 0003 	stmia.w	r5, {r0, r1}
    AI_BUFFER_ARRAY_OBJ_INIT(AI_FLAG_NONE, AI_NETWORK_DATA_WEIGHTS_COUNT, g_network_data_map_weights);

  return ai_platform_bind_network_params(params, &map_weights, &map_activations);
 80020f2:	4629      	mov	r1, r5
 80020f4:	4618      	mov	r0, r3
 80020f6:	f000 f94d 	bl	8002394 <ai_platform_bind_network_params>
}
 80020fa:	b005      	add	sp, #20
 80020fc:	bd30      	pop	{r4, r5, pc}
 80020fe:	bf00      	nop
 8002100:	080073a0 	.word	0x080073a0

08002104 <arm_mat_init_f32>:
 8002104:	8001      	strh	r1, [r0, #0]
 8002106:	8042      	strh	r2, [r0, #2]
 8002108:	6043      	str	r3, [r0, #4]
 800210a:	4770      	bx	lr

0800210c <arm_cos_f32>:
 800210c:	eddf 7a21 	vldr	s15, [pc, #132]	; 8002194 <arm_cos_f32+0x88>
 8002110:	ee20 0a27 	vmul.f32	s0, s0, s15
 8002114:	eef5 7a00 	vmov.f32	s15, #80	; 0x3e800000  0.250
 8002118:	ee30 0a27 	vadd.f32	s0, s0, s15
 800211c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8002120:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002124:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8002128:	d504      	bpl.n	8002134 <arm_cos_f32+0x28>
 800212a:	ee17 3a90 	vmov	r3, s15
 800212e:	3b01      	subs	r3, #1
 8002130:	ee07 3a90 	vmov	s15, r3
 8002134:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002138:	ed9f 7a17 	vldr	s14, [pc, #92]	; 8002198 <arm_cos_f32+0x8c>
 800213c:	ee30 0a67 	vsub.f32	s0, s0, s15
 8002140:	ee20 0a07 	vmul.f32	s0, s0, s14
 8002144:	eefc 7ac0 	vcvt.u32.f32	s15, s0
 8002148:	ee17 3a90 	vmov	r3, s15
 800214c:	b29b      	uxth	r3, r3
 800214e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002152:	d21a      	bcs.n	800218a <arm_cos_f32+0x7e>
 8002154:	ee07 3a90 	vmov	s15, r3
 8002158:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800215c:	1c59      	adds	r1, r3, #1
 800215e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8002162:	4a0e      	ldr	r2, [pc, #56]	; (800219c <arm_cos_f32+0x90>)
 8002164:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8002168:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800216c:	eb02 0281 	add.w	r2, r2, r1, lsl #2
 8002170:	ed93 7a00 	vldr	s14, [r3]
 8002174:	edd2 6a00 	vldr	s13, [r2]
 8002178:	ee77 7ac0 	vsub.f32	s15, s15, s0
 800217c:	ee20 0a26 	vmul.f32	s0, s0, s13
 8002180:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002184:	ee37 0a80 	vadd.f32	s0, s15, s0
 8002188:	4770      	bx	lr
 800218a:	ee30 0a47 	vsub.f32	s0, s0, s14
 800218e:	2101      	movs	r1, #1
 8002190:	2300      	movs	r3, #0
 8002192:	e7e6      	b.n	8002162 <arm_cos_f32+0x56>
 8002194:	3e22f983 	.word	0x3e22f983
 8002198:	44000000 	.word	0x44000000
 800219c:	080084d0 	.word	0x080084d0

080021a0 <ai_buffer_get_size>:
 80021a0:	b378      	cbz	r0, 8002202 <ai_buffer_get_size+0x62>
 80021a2:	b410      	push	{r4}
 80021a4:	6803      	ldr	r3, [r0, #0]
 80021a6:	4a17      	ldr	r2, [pc, #92]	; (8002204 <ai_buffer_get_size+0x64>)
 80021a8:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
 80021ac:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80021b0:	4293      	cmp	r3, r2
 80021b2:	d01e      	beq.n	80021f2 <ai_buffer_get_size+0x52>
 80021b4:	6984      	ldr	r4, [r0, #24]
 80021b6:	6862      	ldr	r2, [r4, #4]
 80021b8:	7d03      	ldrb	r3, [r0, #20]
 80021ba:	6941      	ldr	r1, [r0, #20]
 80021bc:	f1a3 0301 	sub.w	r3, r3, #1
 80021c0:	fab3 f383 	clz	r3, r3
 80021c4:	095b      	lsrs	r3, r3, #5
 80021c6:	ebb3 2f11 	cmp.w	r3, r1, lsr #8
 80021ca:	f3c1 2017 	ubfx	r0, r1, #8, #24
 80021ce:	da0b      	bge.n	80021e8 <ai_buffer_get_size+0x48>
 80021d0:	2b01      	cmp	r3, #1
 80021d2:	d102      	bne.n	80021da <ai_buffer_get_size+0x3a>
 80021d4:	2802      	cmp	r0, #2
 80021d6:	d007      	beq.n	80021e8 <ai_buffer_get_size+0x48>
 80021d8:	2302      	movs	r3, #2
 80021da:	f854 1023 	ldr.w	r1, [r4, r3, lsl #2]
 80021de:	3301      	adds	r3, #1
 80021e0:	4298      	cmp	r0, r3
 80021e2:	fb01 f202 	mul.w	r2, r1, r2
 80021e6:	d1f3      	bne.n	80021d0 <ai_buffer_get_size+0x30>
 80021e8:	ea22 70e2 	bic.w	r0, r2, r2, asr #31
 80021ec:	f85d 4b04 	ldr.w	r4, [sp], #4
 80021f0:	4770      	bx	lr
 80021f2:	2900      	cmp	r1, #0
 80021f4:	d0de      	beq.n	80021b4 <ai_buffer_get_size+0x14>
 80021f6:	6984      	ldr	r4, [r0, #24]
 80021f8:	6863      	ldr	r3, [r4, #4]
 80021fa:	331f      	adds	r3, #31
 80021fc:	f023 021f 	bic.w	r2, r3, #31
 8002200:	e7da      	b.n	80021b8 <ai_buffer_get_size+0x18>
 8002202:	4770      	bx	lr
 8002204:	000400c0 	.word	0x000400c0

08002208 <ai_buffer_array_sane>:
 8002208:	b138      	cbz	r0, 800221a <ai_buffer_array_sane+0x12>
 800220a:	6843      	ldr	r3, [r0, #4]
 800220c:	b123      	cbz	r3, 8002218 <ai_buffer_array_sane+0x10>
 800220e:	8840      	ldrh	r0, [r0, #2]
 8002210:	3800      	subs	r0, #0
 8002212:	bf18      	it	ne
 8002214:	2001      	movne	r0, #1
 8002216:	4770      	bx	lr
 8002218:	4618      	mov	r0, r3
 800221a:	4770      	bx	lr

0800221c <ai_buffer_array_item_set_address>:
 800221c:	b150      	cbz	r0, 8002234 <ai_buffer_array_item_set_address+0x18>
 800221e:	6843      	ldr	r3, [r0, #4]
 8002220:	b14b      	cbz	r3, 8002236 <ai_buffer_array_item_set_address+0x1a>
 8002222:	8840      	ldrh	r0, [r0, #2]
 8002224:	b900      	cbnz	r0, 8002228 <ai_buffer_array_item_set_address+0xc>
 8002226:	4770      	bx	lr
 8002228:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
 800222c:	eb03 0181 	add.w	r1, r3, r1, lsl #2
 8002230:	2001      	movs	r0, #1
 8002232:	604a      	str	r2, [r1, #4]
 8002234:	4770      	bx	lr
 8002236:	4618      	mov	r0, r3
 8002238:	4770      	bx	lr
 800223a:	bf00      	nop

0800223c <_ai_platform_acquire_crc>:
 800223c:	2001      	movs	r0, #1
 800223e:	4770      	bx	lr

08002240 <_ai_platform_release_crc>:
 8002240:	4770      	bx	lr
 8002242:	bf00      	nop

08002244 <ai_platform_get_weights_map>:
 8002244:	2a00      	cmp	r2, #0
 8002246:	d037      	beq.n	80022b8 <ai_platform_get_weights_map+0x74>
 8002248:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800224a:	4604      	mov	r4, r0
 800224c:	b1a0      	cbz	r0, 8002278 <ai_platform_get_weights_map+0x34>
 800224e:	460f      	mov	r7, r1
 8002250:	b191      	cbz	r1, 8002278 <ai_platform_get_weights_map+0x34>
 8002252:	4b25      	ldr	r3, [pc, #148]	; (80022e8 <ai_platform_get_weights_map+0xa4>)
 8002254:	6810      	ldr	r0, [r2, #0]
 8002256:	4298      	cmp	r0, r3
 8002258:	4615      	mov	r5, r2
 800225a:	d00f      	beq.n	800227c <ai_platform_get_weights_map+0x38>
 800225c:	6855      	ldr	r5, [r2, #4]
 800225e:	b15d      	cbz	r5, 8002278 <ai_platform_get_weights_map+0x34>
 8002260:	682e      	ldr	r6, [r5, #0]
 8002262:	429e      	cmp	r6, r3
 8002264:	d02a      	beq.n	80022bc <ai_platform_get_weights_map+0x78>
 8002266:	f1a1 0001 	sub.w	r0, r1, #1
 800226a:	6025      	str	r5, [r4, #0]
 800226c:	fab0 f080 	clz	r0, r0
 8002270:	0940      	lsrs	r0, r0, #5
 8002272:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002274:	42a7      	cmp	r7, r4
 8002276:	d034      	beq.n	80022e2 <ai_platform_get_weights_map+0x9e>
 8002278:	2000      	movs	r0, #0
 800227a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800227c:	1d10      	adds	r0, r2, #4
 800227e:	f7ff ffc3 	bl	8002208 <ai_buffer_array_sane>
 8002282:	2800      	cmp	r0, #0
 8002284:	d0f8      	beq.n	8002278 <ai_platform_get_weights_map+0x34>
 8002286:	88eb      	ldrh	r3, [r5, #6]
 8002288:	429f      	cmp	r7, r3
 800228a:	d1f5      	bne.n	8002278 <ai_platform_get_weights_map+0x34>
 800228c:	f04f 0e00 	mov.w	lr, #0
 8002290:	1f23      	subs	r3, r4, #4
 8002292:	4670      	mov	r0, lr
 8002294:	68aa      	ldr	r2, [r5, #8]
 8002296:	eb02 0c0e 	add.w	ip, r2, lr
 800229a:	f10e 0e1c 	add.w	lr, lr, #28
 800229e:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80022a2:	b124      	cbz	r4, 80022ae <ai_platform_get_weights_map+0x6a>
 80022a4:	3001      	adds	r0, #1
 80022a6:	4287      	cmp	r7, r0
 80022a8:	f843 4f04 	str.w	r4, [r3, #4]!
 80022ac:	d1f2      	bne.n	8002294 <ai_platform_get_weights_map+0x50>
 80022ae:	1a38      	subs	r0, r7, r0
 80022b0:	fab0 f080 	clz	r0, r0
 80022b4:	0940      	lsrs	r0, r0, #5
 80022b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80022b8:	2000      	movs	r0, #0
 80022ba:	4770      	bx	lr
 80022bc:	1f23      	subs	r3, r4, #4
 80022be:	4628      	mov	r0, r5
 80022c0:	2400      	movs	r4, #0
 80022c2:	e000      	b.n	80022c6 <ai_platform_get_weights_map+0x82>
 80022c4:	4614      	mov	r4, r2
 80022c6:	f850 2f04 	ldr.w	r2, [r0, #4]!
 80022ca:	42b2      	cmp	r2, r6
 80022cc:	d0d2      	beq.n	8002274 <ai_platform_get_weights_map+0x30>
 80022ce:	f843 2f04 	str.w	r2, [r3, #4]!
 80022d2:	1c62      	adds	r2, r4, #1
 80022d4:	4297      	cmp	r7, r2
 80022d6:	d1f5      	bne.n	80022c4 <ai_platform_get_weights_map+0x80>
 80022d8:	3402      	adds	r4, #2
 80022da:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 80022de:	42b3      	cmp	r3, r6
 80022e0:	d1ca      	bne.n	8002278 <ai_platform_get_weights_map+0x34>
 80022e2:	2001      	movs	r0, #1
 80022e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80022e6:	bf00      	nop
 80022e8:	a1facade 	.word	0xa1facade

080022ec <ai_platform_get_activations_map>:
 80022ec:	2a00      	cmp	r2, #0
 80022ee:	d038      	beq.n	8002362 <ai_platform_get_activations_map+0x76>
 80022f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80022f2:	4604      	mov	r4, r0
 80022f4:	b1a0      	cbz	r0, 8002320 <ai_platform_get_activations_map+0x34>
 80022f6:	460f      	mov	r7, r1
 80022f8:	b191      	cbz	r1, 8002320 <ai_platform_get_activations_map+0x34>
 80022fa:	4b25      	ldr	r3, [pc, #148]	; (8002390 <ai_platform_get_activations_map+0xa4>)
 80022fc:	6810      	ldr	r0, [r2, #0]
 80022fe:	4298      	cmp	r0, r3
 8002300:	4615      	mov	r5, r2
 8002302:	d00f      	beq.n	8002324 <ai_platform_get_activations_map+0x38>
 8002304:	6a15      	ldr	r5, [r2, #32]
 8002306:	b15d      	cbz	r5, 8002320 <ai_platform_get_activations_map+0x34>
 8002308:	682e      	ldr	r6, [r5, #0]
 800230a:	429e      	cmp	r6, r3
 800230c:	d02b      	beq.n	8002366 <ai_platform_get_activations_map+0x7a>
 800230e:	f1a1 0001 	sub.w	r0, r1, #1
 8002312:	6025      	str	r5, [r4, #0]
 8002314:	fab0 f080 	clz	r0, r0
 8002318:	0940      	lsrs	r0, r0, #5
 800231a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800231c:	42a7      	cmp	r7, r4
 800231e:	d035      	beq.n	800238c <ai_platform_get_activations_map+0xa0>
 8002320:	2000      	movs	r0, #0
 8002322:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002324:	f102 000c 	add.w	r0, r2, #12
 8002328:	f7ff ff6e 	bl	8002208 <ai_buffer_array_sane>
 800232c:	2800      	cmp	r0, #0
 800232e:	d0f7      	beq.n	8002320 <ai_platform_get_activations_map+0x34>
 8002330:	89eb      	ldrh	r3, [r5, #14]
 8002332:	429f      	cmp	r7, r3
 8002334:	d1f4      	bne.n	8002320 <ai_platform_get_activations_map+0x34>
 8002336:	f04f 0e00 	mov.w	lr, #0
 800233a:	1f23      	subs	r3, r4, #4
 800233c:	4670      	mov	r0, lr
 800233e:	692a      	ldr	r2, [r5, #16]
 8002340:	eb02 0c0e 	add.w	ip, r2, lr
 8002344:	f10e 0e1c 	add.w	lr, lr, #28
 8002348:	f8dc 4004 	ldr.w	r4, [ip, #4]
 800234c:	b124      	cbz	r4, 8002358 <ai_platform_get_activations_map+0x6c>
 800234e:	3001      	adds	r0, #1
 8002350:	4287      	cmp	r7, r0
 8002352:	f843 4f04 	str.w	r4, [r3, #4]!
 8002356:	d1f2      	bne.n	800233e <ai_platform_get_activations_map+0x52>
 8002358:	1a38      	subs	r0, r7, r0
 800235a:	fab0 f080 	clz	r0, r0
 800235e:	0940      	lsrs	r0, r0, #5
 8002360:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002362:	2000      	movs	r0, #0
 8002364:	4770      	bx	lr
 8002366:	1f23      	subs	r3, r4, #4
 8002368:	4628      	mov	r0, r5
 800236a:	2400      	movs	r4, #0
 800236c:	e000      	b.n	8002370 <ai_platform_get_activations_map+0x84>
 800236e:	4614      	mov	r4, r2
 8002370:	f850 2f04 	ldr.w	r2, [r0, #4]!
 8002374:	42b2      	cmp	r2, r6
 8002376:	d0d1      	beq.n	800231c <ai_platform_get_activations_map+0x30>
 8002378:	f843 2f04 	str.w	r2, [r3, #4]!
 800237c:	1c62      	adds	r2, r4, #1
 800237e:	4297      	cmp	r7, r2
 8002380:	d1f5      	bne.n	800236e <ai_platform_get_activations_map+0x82>
 8002382:	3402      	adds	r4, #2
 8002384:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 8002388:	42b3      	cmp	r3, r6
 800238a:	d1c9      	bne.n	8002320 <ai_platform_get_activations_map+0x34>
 800238c:	2001      	movs	r0, #1
 800238e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002390:	a1facade 	.word	0xa1facade

08002394 <ai_platform_bind_network_params>:
 8002394:	b1a0      	cbz	r0, 80023c0 <ai_platform_bind_network_params+0x2c>
 8002396:	b1b1      	cbz	r1, 80023c6 <ai_platform_bind_network_params+0x32>
 8002398:	b1c2      	cbz	r2, 80023cc <ai_platform_bind_network_params+0x38>
 800239a:	b410      	push	{r4}
 800239c:	4603      	mov	r3, r0
 800239e:	4c0d      	ldr	r4, [pc, #52]	; (80023d4 <ai_platform_bind_network_params+0x40>)
 80023a0:	f843 4b04 	str.w	r4, [r3], #4
 80023a4:	f100 0c0c 	add.w	ip, r0, #12
 80023a8:	c903      	ldmia	r1, {r0, r1}
 80023aa:	e883 0003 	stmia.w	r3, {r0, r1}
 80023ae:	e892 0003 	ldmia.w	r2, {r0, r1}
 80023b2:	e88c 0003 	stmia.w	ip, {r0, r1}
 80023b6:	2301      	movs	r3, #1
 80023b8:	4618      	mov	r0, r3
 80023ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 80023be:	4770      	bx	lr
 80023c0:	4603      	mov	r3, r0
 80023c2:	4618      	mov	r0, r3
 80023c4:	4770      	bx	lr
 80023c6:	460b      	mov	r3, r1
 80023c8:	4618      	mov	r0, r3
 80023ca:	4770      	bx	lr
 80023cc:	4613      	mov	r3, r2
 80023ce:	4618      	mov	r0, r3
 80023d0:	4770      	bx	lr
 80023d2:	bf00      	nop
 80023d4:	a1facade 	.word	0xa1facade

080023d8 <ai_platform_runtime_get_revision>:
 80023d8:	b508      	push	{r3, lr}
 80023da:	f7ff ff2f 	bl	800223c <_ai_platform_acquire_crc>
 80023de:	4b14      	ldr	r3, [pc, #80]	; (8002430 <ai_platform_runtime_get_revision+0x58>)
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80023e6:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80023ea:	d010      	beq.n	800240e <ai_platform_runtime_get_revision+0x36>
 80023ec:	4a11      	ldr	r2, [pc, #68]	; (8002434 <ai_platform_runtime_get_revision+0x5c>)
 80023ee:	2301      	movs	r3, #1
 80023f0:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80023f4:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80023f8:	2b00      	cmp	r3, #0
 80023fa:	d1fb      	bne.n	80023f4 <ai_platform_runtime_get_revision+0x1c>
 80023fc:	4b0e      	ldr	r3, [pc, #56]	; (8002438 <ai_platform_runtime_get_revision+0x60>)
 80023fe:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8002402:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8002406:	4b0d      	ldr	r3, [pc, #52]	; (800243c <ai_platform_runtime_get_revision+0x64>)
 8002408:	429a      	cmp	r2, r3
 800240a:	d00c      	beq.n	8002426 <ai_platform_runtime_get_revision+0x4e>
 800240c:	e7fe      	b.n	800240c <ai_platform_runtime_get_revision+0x34>
 800240e:	4a0c      	ldr	r2, [pc, #48]	; (8002440 <ai_platform_runtime_get_revision+0x68>)
 8002410:	2301      	movs	r3, #1
 8002412:	6093      	str	r3, [r2, #8]
 8002414:	6893      	ldr	r3, [r2, #8]
 8002416:	2b00      	cmp	r3, #0
 8002418:	d1fc      	bne.n	8002414 <ai_platform_runtime_get_revision+0x3c>
 800241a:	4b07      	ldr	r3, [pc, #28]	; (8002438 <ai_platform_runtime_get_revision+0x60>)
 800241c:	6013      	str	r3, [r2, #0]
 800241e:	6812      	ldr	r2, [r2, #0]
 8002420:	4b06      	ldr	r3, [pc, #24]	; (800243c <ai_platform_runtime_get_revision+0x64>)
 8002422:	429a      	cmp	r2, r3
 8002424:	d103      	bne.n	800242e <ai_platform_runtime_get_revision+0x56>
 8002426:	f7ff ff0b 	bl	8002240 <_ai_platform_release_crc>
 800242a:	4806      	ldr	r0, [pc, #24]	; (8002444 <ai_platform_runtime_get_revision+0x6c>)
 800242c:	bd08      	pop	{r3, pc}
 800242e:	e7fe      	b.n	800242e <ai_platform_runtime_get_revision+0x56>
 8002430:	e0042000 	.word	0xe0042000
 8002434:	58024000 	.word	0x58024000
 8002438:	f407a5c2 	.word	0xf407a5c2
 800243c:	b5e8b5cd 	.word	0xb5e8b5cd
 8002440:	40023000 	.word	0x40023000
 8002444:	08008cd4 	.word	0x08008cd4

08002448 <ai_platform_runtime_get_version>:
 8002448:	b500      	push	{lr}
 800244a:	b083      	sub	sp, #12
 800244c:	f7ff fef6 	bl	800223c <_ai_platform_acquire_crc>
 8002450:	4b1d      	ldr	r3, [pc, #116]	; (80024c8 <ai_platform_runtime_get_version+0x80>)
 8002452:	681b      	ldr	r3, [r3, #0]
 8002454:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002458:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800245c:	d010      	beq.n	8002480 <ai_platform_runtime_get_version+0x38>
 800245e:	4a1b      	ldr	r2, [pc, #108]	; (80024cc <ai_platform_runtime_get_version+0x84>)
 8002460:	2301      	movs	r3, #1
 8002462:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8002466:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800246a:	2b00      	cmp	r3, #0
 800246c:	d1fb      	bne.n	8002466 <ai_platform_runtime_get_version+0x1e>
 800246e:	4b18      	ldr	r3, [pc, #96]	; (80024d0 <ai_platform_runtime_get_version+0x88>)
 8002470:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8002474:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8002478:	4b16      	ldr	r3, [pc, #88]	; (80024d4 <ai_platform_runtime_get_version+0x8c>)
 800247a:	429a      	cmp	r2, r3
 800247c:	d00c      	beq.n	8002498 <ai_platform_runtime_get_version+0x50>
 800247e:	e7fe      	b.n	800247e <ai_platform_runtime_get_version+0x36>
 8002480:	4a15      	ldr	r2, [pc, #84]	; (80024d8 <ai_platform_runtime_get_version+0x90>)
 8002482:	2301      	movs	r3, #1
 8002484:	6093      	str	r3, [r2, #8]
 8002486:	6893      	ldr	r3, [r2, #8]
 8002488:	2b00      	cmp	r3, #0
 800248a:	d1fc      	bne.n	8002486 <ai_platform_runtime_get_version+0x3e>
 800248c:	4b10      	ldr	r3, [pc, #64]	; (80024d0 <ai_platform_runtime_get_version+0x88>)
 800248e:	6013      	str	r3, [r2, #0]
 8002490:	6812      	ldr	r2, [r2, #0]
 8002492:	4b10      	ldr	r3, [pc, #64]	; (80024d4 <ai_platform_runtime_get_version+0x8c>)
 8002494:	429a      	cmp	r2, r3
 8002496:	d115      	bne.n	80024c4 <ai_platform_runtime_get_version+0x7c>
 8002498:	f7ff fed2 	bl	8002240 <_ai_platform_release_crc>
 800249c:	4b0f      	ldr	r3, [pc, #60]	; (80024dc <ai_platform_runtime_get_version+0x94>)
 800249e:	681b      	ldr	r3, [r3, #0]
 80024a0:	2000      	movs	r0, #0
 80024a2:	b2da      	uxtb	r2, r3
 80024a4:	f362 0007 	bfi	r0, r2, #0, #8
 80024a8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80024ac:	f362 200f 	bfi	r0, r2, #8, #8
 80024b0:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80024b4:	f362 4017 	bfi	r0, r2, #16, #8
 80024b8:	0e1b      	lsrs	r3, r3, #24
 80024ba:	f363 601f 	bfi	r0, r3, #24, #8
 80024be:	b003      	add	sp, #12
 80024c0:	f85d fb04 	ldr.w	pc, [sp], #4
 80024c4:	e7fe      	b.n	80024c4 <ai_platform_runtime_get_version+0x7c>
 80024c6:	bf00      	nop
 80024c8:	e0042000 	.word	0xe0042000
 80024cc:	58024000 	.word	0x58024000
 80024d0:	f407a5c2 	.word	0xf407a5c2
 80024d4:	b5e8b5cd 	.word	0xb5e8b5cd
 80024d8:	40023000 	.word	0x40023000
 80024dc:	08008cd8 	.word	0x08008cd8

080024e0 <ai_platform_api_get_version>:
 80024e0:	b500      	push	{lr}
 80024e2:	b083      	sub	sp, #12
 80024e4:	f7ff feaa 	bl	800223c <_ai_platform_acquire_crc>
 80024e8:	4b1d      	ldr	r3, [pc, #116]	; (8002560 <ai_platform_api_get_version+0x80>)
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80024f0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80024f4:	d010      	beq.n	8002518 <ai_platform_api_get_version+0x38>
 80024f6:	4a1b      	ldr	r2, [pc, #108]	; (8002564 <ai_platform_api_get_version+0x84>)
 80024f8:	2301      	movs	r3, #1
 80024fa:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80024fe:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8002502:	2b00      	cmp	r3, #0
 8002504:	d1fb      	bne.n	80024fe <ai_platform_api_get_version+0x1e>
 8002506:	4b18      	ldr	r3, [pc, #96]	; (8002568 <ai_platform_api_get_version+0x88>)
 8002508:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 800250c:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8002510:	4b16      	ldr	r3, [pc, #88]	; (800256c <ai_platform_api_get_version+0x8c>)
 8002512:	429a      	cmp	r2, r3
 8002514:	d00c      	beq.n	8002530 <ai_platform_api_get_version+0x50>
 8002516:	e7fe      	b.n	8002516 <ai_platform_api_get_version+0x36>
 8002518:	4a15      	ldr	r2, [pc, #84]	; (8002570 <ai_platform_api_get_version+0x90>)
 800251a:	2301      	movs	r3, #1
 800251c:	6093      	str	r3, [r2, #8]
 800251e:	6893      	ldr	r3, [r2, #8]
 8002520:	2b00      	cmp	r3, #0
 8002522:	d1fc      	bne.n	800251e <ai_platform_api_get_version+0x3e>
 8002524:	4b10      	ldr	r3, [pc, #64]	; (8002568 <ai_platform_api_get_version+0x88>)
 8002526:	6013      	str	r3, [r2, #0]
 8002528:	6812      	ldr	r2, [r2, #0]
 800252a:	4b10      	ldr	r3, [pc, #64]	; (800256c <ai_platform_api_get_version+0x8c>)
 800252c:	429a      	cmp	r2, r3
 800252e:	d115      	bne.n	800255c <ai_platform_api_get_version+0x7c>
 8002530:	f7ff fe86 	bl	8002240 <_ai_platform_release_crc>
 8002534:	4b0f      	ldr	r3, [pc, #60]	; (8002574 <ai_platform_api_get_version+0x94>)
 8002536:	681b      	ldr	r3, [r3, #0]
 8002538:	2000      	movs	r0, #0
 800253a:	b2da      	uxtb	r2, r3
 800253c:	f362 0007 	bfi	r0, r2, #0, #8
 8002540:	f3c3 2207 	ubfx	r2, r3, #8, #8
 8002544:	f362 200f 	bfi	r0, r2, #8, #8
 8002548:	f3c3 4207 	ubfx	r2, r3, #16, #8
 800254c:	f362 4017 	bfi	r0, r2, #16, #8
 8002550:	0e1b      	lsrs	r3, r3, #24
 8002552:	f363 601f 	bfi	r0, r3, #24, #8
 8002556:	b003      	add	sp, #12
 8002558:	f85d fb04 	ldr.w	pc, [sp], #4
 800255c:	e7fe      	b.n	800255c <ai_platform_api_get_version+0x7c>
 800255e:	bf00      	nop
 8002560:	e0042000 	.word	0xe0042000
 8002564:	58024000 	.word	0x58024000
 8002568:	f407a5c2 	.word	0xf407a5c2
 800256c:	b5e8b5cd 	.word	0xb5e8b5cd
 8002570:	40023000 	.word	0x40023000
 8002574:	08008cdc 	.word	0x08008cdc

08002578 <ai_platform_interface_api_get_version>:
 8002578:	b500      	push	{lr}
 800257a:	b083      	sub	sp, #12
 800257c:	f7ff fe5e 	bl	800223c <_ai_platform_acquire_crc>
 8002580:	4b1d      	ldr	r3, [pc, #116]	; (80025f8 <ai_platform_interface_api_get_version+0x80>)
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002588:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800258c:	d010      	beq.n	80025b0 <ai_platform_interface_api_get_version+0x38>
 800258e:	4a1b      	ldr	r2, [pc, #108]	; (80025fc <ai_platform_interface_api_get_version+0x84>)
 8002590:	2301      	movs	r3, #1
 8002592:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8002596:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800259a:	2b00      	cmp	r3, #0
 800259c:	d1fb      	bne.n	8002596 <ai_platform_interface_api_get_version+0x1e>
 800259e:	4b18      	ldr	r3, [pc, #96]	; (8002600 <ai_platform_interface_api_get_version+0x88>)
 80025a0:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80025a4:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80025a8:	4b16      	ldr	r3, [pc, #88]	; (8002604 <ai_platform_interface_api_get_version+0x8c>)
 80025aa:	429a      	cmp	r2, r3
 80025ac:	d00c      	beq.n	80025c8 <ai_platform_interface_api_get_version+0x50>
 80025ae:	e7fe      	b.n	80025ae <ai_platform_interface_api_get_version+0x36>
 80025b0:	4a15      	ldr	r2, [pc, #84]	; (8002608 <ai_platform_interface_api_get_version+0x90>)
 80025b2:	2301      	movs	r3, #1
 80025b4:	6093      	str	r3, [r2, #8]
 80025b6:	6893      	ldr	r3, [r2, #8]
 80025b8:	2b00      	cmp	r3, #0
 80025ba:	d1fc      	bne.n	80025b6 <ai_platform_interface_api_get_version+0x3e>
 80025bc:	4b10      	ldr	r3, [pc, #64]	; (8002600 <ai_platform_interface_api_get_version+0x88>)
 80025be:	6013      	str	r3, [r2, #0]
 80025c0:	6812      	ldr	r2, [r2, #0]
 80025c2:	4b10      	ldr	r3, [pc, #64]	; (8002604 <ai_platform_interface_api_get_version+0x8c>)
 80025c4:	429a      	cmp	r2, r3
 80025c6:	d115      	bne.n	80025f4 <ai_platform_interface_api_get_version+0x7c>
 80025c8:	f7ff fe3a 	bl	8002240 <_ai_platform_release_crc>
 80025cc:	4b0f      	ldr	r3, [pc, #60]	; (800260c <ai_platform_interface_api_get_version+0x94>)
 80025ce:	681b      	ldr	r3, [r3, #0]
 80025d0:	2000      	movs	r0, #0
 80025d2:	b2da      	uxtb	r2, r3
 80025d4:	f362 0007 	bfi	r0, r2, #0, #8
 80025d8:	f3c3 2207 	ubfx	r2, r3, #8, #8
 80025dc:	f362 200f 	bfi	r0, r2, #8, #8
 80025e0:	f3c3 4207 	ubfx	r2, r3, #16, #8
 80025e4:	f362 4017 	bfi	r0, r2, #16, #8
 80025e8:	0e1b      	lsrs	r3, r3, #24
 80025ea:	f363 601f 	bfi	r0, r3, #24, #8
 80025ee:	b003      	add	sp, #12
 80025f0:	f85d fb04 	ldr.w	pc, [sp], #4
 80025f4:	e7fe      	b.n	80025f4 <ai_platform_interface_api_get_version+0x7c>
 80025f6:	bf00      	nop
 80025f8:	e0042000 	.word	0xe0042000
 80025fc:	58024000 	.word	0x58024000
 8002600:	f407a5c2 	.word	0xf407a5c2
 8002604:	b5e8b5cd 	.word	0xb5e8b5cd
 8002608:	40023000 	.word	0x40023000
 800260c:	08008ce0 	.word	0x08008ce0

08002610 <ai_platform_context_acquire>:
 8002610:	b510      	push	{r4, lr}
 8002612:	4604      	mov	r4, r0
 8002614:	b120      	cbz	r0, 8002620 <ai_platform_context_acquire+0x10>
 8002616:	4b18      	ldr	r3, [pc, #96]	; (8002678 <ai_platform_context_acquire+0x68>)
 8002618:	6802      	ldr	r2, [r0, #0]
 800261a:	429a      	cmp	r2, r3
 800261c:	bf18      	it	ne
 800261e:	2400      	movne	r4, #0
 8002620:	f7ff fe0c 	bl	800223c <_ai_platform_acquire_crc>
 8002624:	4b15      	ldr	r3, [pc, #84]	; (800267c <ai_platform_context_acquire+0x6c>)
 8002626:	681b      	ldr	r3, [r3, #0]
 8002628:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800262c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002630:	d010      	beq.n	8002654 <ai_platform_context_acquire+0x44>
 8002632:	4a13      	ldr	r2, [pc, #76]	; (8002680 <ai_platform_context_acquire+0x70>)
 8002634:	2301      	movs	r3, #1
 8002636:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 800263a:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800263e:	2b00      	cmp	r3, #0
 8002640:	d1fb      	bne.n	800263a <ai_platform_context_acquire+0x2a>
 8002642:	4b10      	ldr	r3, [pc, #64]	; (8002684 <ai_platform_context_acquire+0x74>)
 8002644:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8002648:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 800264c:	4b0e      	ldr	r3, [pc, #56]	; (8002688 <ai_platform_context_acquire+0x78>)
 800264e:	429a      	cmp	r2, r3
 8002650:	d00c      	beq.n	800266c <ai_platform_context_acquire+0x5c>
 8002652:	e7fe      	b.n	8002652 <ai_platform_context_acquire+0x42>
 8002654:	4a0d      	ldr	r2, [pc, #52]	; (800268c <ai_platform_context_acquire+0x7c>)
 8002656:	2301      	movs	r3, #1
 8002658:	6093      	str	r3, [r2, #8]
 800265a:	6893      	ldr	r3, [r2, #8]
 800265c:	2b00      	cmp	r3, #0
 800265e:	d1fc      	bne.n	800265a <ai_platform_context_acquire+0x4a>
 8002660:	4b08      	ldr	r3, [pc, #32]	; (8002684 <ai_platform_context_acquire+0x74>)
 8002662:	6013      	str	r3, [r2, #0]
 8002664:	6812      	ldr	r2, [r2, #0]
 8002666:	4b08      	ldr	r3, [pc, #32]	; (8002688 <ai_platform_context_acquire+0x78>)
 8002668:	429a      	cmp	r2, r3
 800266a:	d103      	bne.n	8002674 <ai_platform_context_acquire+0x64>
 800266c:	f7ff fde8 	bl	8002240 <_ai_platform_release_crc>
 8002670:	4620      	mov	r0, r4
 8002672:	bd10      	pop	{r4, pc}
 8002674:	e7fe      	b.n	8002674 <ai_platform_context_acquire+0x64>
 8002676:	bf00      	nop
 8002678:	a1c00100 	.word	0xa1c00100
 800267c:	e0042000 	.word	0xe0042000
 8002680:	58024000 	.word	0x58024000
 8002684:	f407a5c2 	.word	0xf407a5c2
 8002688:	b5e8b5cd 	.word	0xb5e8b5cd
 800268c:	40023000 	.word	0x40023000

08002690 <ai_platform_network_get_error>:
 8002690:	b510      	push	{r4, lr}
 8002692:	b1f0      	cbz	r0, 80026d2 <ai_platform_network_get_error+0x42>
 8002694:	4b2f      	ldr	r3, [pc, #188]	; (8002754 <ai_platform_network_get_error+0xc4>)
 8002696:	6802      	ldr	r2, [r0, #0]
 8002698:	429a      	cmp	r2, r3
 800269a:	4604      	mov	r4, r0
 800269c:	d119      	bne.n	80026d2 <ai_platform_network_get_error+0x42>
 800269e:	f7ff fdcd 	bl	800223c <_ai_platform_acquire_crc>
 80026a2:	4b2d      	ldr	r3, [pc, #180]	; (8002758 <ai_platform_network_get_error+0xc8>)
 80026a4:	681b      	ldr	r3, [r3, #0]
 80026a6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80026aa:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80026ae:	d03c      	beq.n	800272a <ai_platform_network_get_error+0x9a>
 80026b0:	4a2a      	ldr	r2, [pc, #168]	; (800275c <ai_platform_network_get_error+0xcc>)
 80026b2:	2301      	movs	r3, #1
 80026b4:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80026b8:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80026bc:	2b00      	cmp	r3, #0
 80026be:	d1fb      	bne.n	80026b8 <ai_platform_network_get_error+0x28>
 80026c0:	4b27      	ldr	r3, [pc, #156]	; (8002760 <ai_platform_network_get_error+0xd0>)
 80026c2:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80026c6:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80026ca:	4b26      	ldr	r3, [pc, #152]	; (8002764 <ai_platform_network_get_error+0xd4>)
 80026cc:	429a      	cmp	r2, r3
 80026ce:	d038      	beq.n	8002742 <ai_platform_network_get_error+0xb2>
 80026d0:	e7fe      	b.n	80026d0 <ai_platform_network_get_error+0x40>
 80026d2:	f7ff fdb3 	bl	800223c <_ai_platform_acquire_crc>
 80026d6:	4b20      	ldr	r3, [pc, #128]	; (8002758 <ai_platform_network_get_error+0xc8>)
 80026d8:	681b      	ldr	r3, [r3, #0]
 80026da:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80026de:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80026e2:	d010      	beq.n	8002706 <ai_platform_network_get_error+0x76>
 80026e4:	4a1d      	ldr	r2, [pc, #116]	; (800275c <ai_platform_network_get_error+0xcc>)
 80026e6:	2301      	movs	r3, #1
 80026e8:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80026ec:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	d1fb      	bne.n	80026ec <ai_platform_network_get_error+0x5c>
 80026f4:	4b1a      	ldr	r3, [pc, #104]	; (8002760 <ai_platform_network_get_error+0xd0>)
 80026f6:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80026fa:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80026fe:	4b19      	ldr	r3, [pc, #100]	; (8002764 <ai_platform_network_get_error+0xd4>)
 8002700:	429a      	cmp	r2, r3
 8002702:	d00d      	beq.n	8002720 <ai_platform_network_get_error+0x90>
 8002704:	e7fe      	b.n	8002704 <ai_platform_network_get_error+0x74>
 8002706:	4a18      	ldr	r2, [pc, #96]	; (8002768 <ai_platform_network_get_error+0xd8>)
 8002708:	2301      	movs	r3, #1
 800270a:	6093      	str	r3, [r2, #8]
 800270c:	6893      	ldr	r3, [r2, #8]
 800270e:	2b00      	cmp	r3, #0
 8002710:	d1fc      	bne.n	800270c <ai_platform_network_get_error+0x7c>
 8002712:	4b13      	ldr	r3, [pc, #76]	; (8002760 <ai_platform_network_get_error+0xd0>)
 8002714:	6013      	str	r3, [r2, #0]
 8002716:	6812      	ldr	r2, [r2, #0]
 8002718:	4b12      	ldr	r3, [pc, #72]	; (8002764 <ai_platform_network_get_error+0xd4>)
 800271a:	429a      	cmp	r2, r3
 800271c:	d000      	beq.n	8002720 <ai_platform_network_get_error+0x90>
 800271e:	e7fe      	b.n	800271e <ai_platform_network_get_error+0x8e>
 8002720:	f7ff fd8e 	bl	8002240 <_ai_platform_release_crc>
 8002724:	f241 0010 	movw	r0, #4112	; 0x1010
 8002728:	bd10      	pop	{r4, pc}
 800272a:	4a0f      	ldr	r2, [pc, #60]	; (8002768 <ai_platform_network_get_error+0xd8>)
 800272c:	2301      	movs	r3, #1
 800272e:	6093      	str	r3, [r2, #8]
 8002730:	6893      	ldr	r3, [r2, #8]
 8002732:	2b00      	cmp	r3, #0
 8002734:	d1fc      	bne.n	8002730 <ai_platform_network_get_error+0xa0>
 8002736:	4b0a      	ldr	r3, [pc, #40]	; (8002760 <ai_platform_network_get_error+0xd0>)
 8002738:	6013      	str	r3, [r2, #0]
 800273a:	6812      	ldr	r2, [r2, #0]
 800273c:	4b09      	ldr	r3, [pc, #36]	; (8002764 <ai_platform_network_get_error+0xd4>)
 800273e:	429a      	cmp	r2, r3
 8002740:	d107      	bne.n	8002752 <ai_platform_network_get_error+0xc2>
 8002742:	f7ff fd7d 	bl	8002240 <_ai_platform_release_crc>
 8002746:	f104 0010 	add.w	r0, r4, #16
 800274a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800274e:	f001 b80f 	b.w	8003770 <core_get_error>
 8002752:	e7fe      	b.n	8002752 <ai_platform_network_get_error+0xc2>
 8002754:	a1c00100 	.word	0xa1c00100
 8002758:	e0042000 	.word	0xe0042000
 800275c:	58024000 	.word	0x58024000
 8002760:	f407a5c2 	.word	0xf407a5c2
 8002764:	b5e8b5cd 	.word	0xb5e8b5cd
 8002768:	40023000 	.word	0x40023000

0800276c <ai_platform_network_set_error>:
 800276c:	b110      	cbz	r0, 8002774 <ai_platform_network_set_error+0x8>
 800276e:	3010      	adds	r0, #16
 8002770:	f001 b804 	b.w	800377c <core_set_error>
 8002774:	4770      	bx	lr
 8002776:	bf00      	nop

08002778 <ai_platform_api_get_network_report>:
 8002778:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800277c:	b087      	sub	sp, #28
 800277e:	b1f8      	cbz	r0, 80027c0 <ai_platform_api_get_network_report+0x48>
 8002780:	4b95      	ldr	r3, [pc, #596]	; (80029d8 <ai_platform_api_get_network_report+0x260>)
 8002782:	6802      	ldr	r2, [r0, #0]
 8002784:	429a      	cmp	r2, r3
 8002786:	4607      	mov	r7, r0
 8002788:	d11a      	bne.n	80027c0 <ai_platform_api_get_network_report+0x48>
 800278a:	468b      	mov	fp, r1
 800278c:	f7ff fd56 	bl	800223c <_ai_platform_acquire_crc>
 8002790:	4b92      	ldr	r3, [pc, #584]	; (80029dc <ai_platform_api_get_network_report+0x264>)
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002798:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800279c:	d03e      	beq.n	800281c <ai_platform_api_get_network_report+0xa4>
 800279e:	4a90      	ldr	r2, [pc, #576]	; (80029e0 <ai_platform_api_get_network_report+0x268>)
 80027a0:	2301      	movs	r3, #1
 80027a2:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80027a6:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80027aa:	2b00      	cmp	r3, #0
 80027ac:	d1fb      	bne.n	80027a6 <ai_platform_api_get_network_report+0x2e>
 80027ae:	4b8d      	ldr	r3, [pc, #564]	; (80029e4 <ai_platform_api_get_network_report+0x26c>)
 80027b0:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80027b4:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80027b8:	4b8b      	ldr	r3, [pc, #556]	; (80029e8 <ai_platform_api_get_network_report+0x270>)
 80027ba:	429a      	cmp	r2, r3
 80027bc:	d03a      	beq.n	8002834 <ai_platform_api_get_network_report+0xbc>
 80027be:	e7fe      	b.n	80027be <ai_platform_api_get_network_report+0x46>
 80027c0:	f7ff fd3c 	bl	800223c <_ai_platform_acquire_crc>
 80027c4:	4b85      	ldr	r3, [pc, #532]	; (80029dc <ai_platform_api_get_network_report+0x264>)
 80027c6:	681b      	ldr	r3, [r3, #0]
 80027c8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80027cc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80027d0:	d010      	beq.n	80027f4 <ai_platform_api_get_network_report+0x7c>
 80027d2:	4a83      	ldr	r2, [pc, #524]	; (80029e0 <ai_platform_api_get_network_report+0x268>)
 80027d4:	2301      	movs	r3, #1
 80027d6:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80027da:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80027de:	2b00      	cmp	r3, #0
 80027e0:	d1fb      	bne.n	80027da <ai_platform_api_get_network_report+0x62>
 80027e2:	4b80      	ldr	r3, [pc, #512]	; (80029e4 <ai_platform_api_get_network_report+0x26c>)
 80027e4:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80027e8:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80027ec:	4b7e      	ldr	r3, [pc, #504]	; (80029e8 <ai_platform_api_get_network_report+0x270>)
 80027ee:	429a      	cmp	r2, r3
 80027f0:	d00d      	beq.n	800280e <ai_platform_api_get_network_report+0x96>
 80027f2:	e7fe      	b.n	80027f2 <ai_platform_api_get_network_report+0x7a>
 80027f4:	4a7d      	ldr	r2, [pc, #500]	; (80029ec <ai_platform_api_get_network_report+0x274>)
 80027f6:	2301      	movs	r3, #1
 80027f8:	6093      	str	r3, [r2, #8]
 80027fa:	6893      	ldr	r3, [r2, #8]
 80027fc:	2b00      	cmp	r3, #0
 80027fe:	d1fc      	bne.n	80027fa <ai_platform_api_get_network_report+0x82>
 8002800:	4b78      	ldr	r3, [pc, #480]	; (80029e4 <ai_platform_api_get_network_report+0x26c>)
 8002802:	6013      	str	r3, [r2, #0]
 8002804:	6812      	ldr	r2, [r2, #0]
 8002806:	4b78      	ldr	r3, [pc, #480]	; (80029e8 <ai_platform_api_get_network_report+0x270>)
 8002808:	429a      	cmp	r2, r3
 800280a:	d000      	beq.n	800280e <ai_platform_api_get_network_report+0x96>
 800280c:	e7fe      	b.n	800280c <ai_platform_api_get_network_report+0x94>
 800280e:	f7ff fd17 	bl	8002240 <_ai_platform_release_crc>
 8002812:	2400      	movs	r4, #0
 8002814:	4620      	mov	r0, r4
 8002816:	b007      	add	sp, #28
 8002818:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800281c:	4a73      	ldr	r2, [pc, #460]	; (80029ec <ai_platform_api_get_network_report+0x274>)
 800281e:	2301      	movs	r3, #1
 8002820:	6093      	str	r3, [r2, #8]
 8002822:	6893      	ldr	r3, [r2, #8]
 8002824:	2b00      	cmp	r3, #0
 8002826:	d1fc      	bne.n	8002822 <ai_platform_api_get_network_report+0xaa>
 8002828:	4b6e      	ldr	r3, [pc, #440]	; (80029e4 <ai_platform_api_get_network_report+0x26c>)
 800282a:	6013      	str	r3, [r2, #0]
 800282c:	6812      	ldr	r2, [r2, #0]
 800282e:	4b6e      	ldr	r3, [pc, #440]	; (80029e8 <ai_platform_api_get_network_report+0x270>)
 8002830:	429a      	cmp	r2, r3
 8002832:	d112      	bne.n	800285a <ai_platform_api_get_network_report+0xe2>
 8002834:	f7ff fd04 	bl	8002240 <_ai_platform_release_crc>
 8002838:	f1bb 0f00 	cmp.w	fp, #0
 800283c:	d0e9      	beq.n	8002812 <ai_platform_api_get_network_report+0x9a>
 800283e:	2400      	movs	r4, #0
 8002840:	f8cb 407c 	str.w	r4, [fp, #124]	; 0x7c
 8002844:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002846:	b14b      	cbz	r3, 800285c <ai_platform_api_get_network_report+0xe4>
 8002848:	3401      	adds	r4, #1
 800284a:	f8cb 407c 	str.w	r4, [fp, #124]	; 0x7c
 800284e:	691a      	ldr	r2, [r3, #16]
 8002850:	429a      	cmp	r2, r3
 8002852:	d003      	beq.n	800285c <ai_platform_api_get_network_report+0xe4>
 8002854:	b112      	cbz	r2, 800285c <ai_platform_api_get_network_report+0xe4>
 8002856:	4613      	mov	r3, r2
 8002858:	e7f5      	b.n	8002846 <ai_platform_api_get_network_report+0xce>
 800285a:	e7fe      	b.n	800285a <ai_platform_api_get_network_report+0xe2>
 800285c:	2c00      	cmp	r4, #0
 800285e:	f000 819e 	beq.w	8002b9e <ai_platform_api_get_network_report+0x426>
 8002862:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8002864:	2b00      	cmp	r3, #0
 8002866:	d04e      	beq.n	8002906 <ai_platform_api_get_network_report+0x18e>
 8002868:	f8d7 9030 	ldr.w	r9, [r7, #48]	; 0x30
 800286c:	f1b9 0f00 	cmp.w	r9, #0
 8002870:	d049      	beq.n	8002906 <ai_platform_api_get_network_report+0x18e>
 8002872:	f04f 0a00 	mov.w	sl, #0
 8002876:	e9cd 7b00 	strd	r7, fp, [sp]
 800287a:	4655      	mov	r5, sl
 800287c:	e016      	b.n	80028ac <ai_platform_api_get_network_report+0x134>
 800287e:	2101      	movs	r1, #1
 8002880:	f847 100e 	str.w	r1, [r7, lr]
 8002884:	69b1      	ldr	r1, [r6, #24]
 8002886:	6849      	ldr	r1, [r1, #4]
 8002888:	60a3      	str	r3, [r4, #8]
 800288a:	f04f 0301 	mov.w	r3, #1
 800288e:	7523      	strb	r3, [r4, #20]
 8002890:	2300      	movs	r3, #0
 8002892:	60e3      	str	r3, [r4, #12]
 8002894:	6963      	ldr	r3, [r4, #20]
 8002896:	6121      	str	r1, [r4, #16]
 8002898:	e9c4 0200 	strd	r0, r2, [r4]
 800289c:	f368 231f 	bfi	r3, r8, #8, #24
 80028a0:	f8c4 b018 	str.w	fp, [r4, #24]
 80028a4:	3501      	adds	r5, #1
 80028a6:	f10a 0a1c 	add.w	sl, sl, #28
 80028aa:	6163      	str	r3, [r4, #20]
 80028ac:	f8b9 3000 	ldrh.w	r3, [r9]
 80028b0:	42ab      	cmp	r3, r5
 80028b2:	b2aa      	uxth	r2, r5
 80028b4:	d933      	bls.n	800291e <ai_platform_api_get_network_report+0x1a6>
 80028b6:	f8d9 3004 	ldr.w	r3, [r9, #4]
 80028ba:	b383      	cbz	r3, 800291e <ai_platform_api_get_network_report+0x1a6>
 80028bc:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
 80028c0:	b36e      	cbz	r6, 800291e <ai_platform_api_get_network_report+0x1a6>
 80028c2:	f8d9 3008 	ldr.w	r3, [r9, #8]
 80028c6:	69b2      	ldr	r2, [r6, #24]
 80028c8:	f8d6 b00c 	ldr.w	fp, [r6, #12]
 80028cc:	6810      	ldr	r0, [r2, #0]
 80028ce:	e9d3 4701 	ldrd	r4, r7, [r3, #4]
 80028d2:	68b3      	ldr	r3, [r6, #8]
 80028d4:	f3c3 2817 	ubfx	r8, r3, #8, #24
 80028d8:	f001 fe18 	bl	800450c <ai_array_to_buffer_fmt>
 80028dc:	69b1      	ldr	r1, [r6, #24]
 80028de:	eb07 03c5 	add.w	r3, r7, r5, lsl #3
 80028e2:	688a      	ldr	r2, [r1, #8]
 80028e4:	4454      	add	r4, sl
 80028e6:	ea4f 0ec5 	mov.w	lr, r5, lsl #3
 80028ea:	2b00      	cmp	r3, #0
 80028ec:	d0cb      	beq.n	8002886 <ai_platform_api_get_network_report+0x10e>
 80028ee:	2100      	movs	r1, #0
 80028f0:	f847 1035 	str.w	r1, [r7, r5, lsl #3]
 80028f4:	6831      	ldr	r1, [r6, #0]
 80028f6:	6059      	str	r1, [r3, #4]
 80028f8:	b111      	cbz	r1, 8002900 <ai_platform_api_get_network_report+0x188>
 80028fa:	8849      	ldrh	r1, [r1, #2]
 80028fc:	2900      	cmp	r1, #0
 80028fe:	d1be      	bne.n	800287e <ai_platform_api_get_network_report+0x106>
 8002900:	69b1      	ldr	r1, [r6, #24]
 8002902:	2300      	movs	r3, #0
 8002904:	e7bf      	b.n	8002886 <ai_platform_api_get_network_report+0x10e>
 8002906:	2400      	movs	r4, #0
 8002908:	f8cb 403c 	str.w	r4, [fp, #60]	; 0x3c
 800290c:	f8ab 4038 	strh.w	r4, [fp, #56]	; 0x38
 8002910:	2218      	movs	r2, #24
 8002912:	2112      	movs	r1, #18
 8002914:	f107 0010 	add.w	r0, r7, #16
 8002918:	f000 ff30 	bl	800377c <core_set_error>
 800291c:	e77a      	b.n	8002814 <ai_platform_api_get_network_report+0x9c>
 800291e:	e9dd 7b00 	ldrd	r7, fp, [sp]
 8002922:	2a00      	cmp	r2, #0
 8002924:	d0ef      	beq.n	8002906 <ai_platform_api_get_network_report+0x18e>
 8002926:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800292a:	685b      	ldr	r3, [r3, #4]
 800292c:	f8cb 303c 	str.w	r3, [fp, #60]	; 0x3c
 8002930:	f8ab 2038 	strh.w	r2, [fp, #56]	; 0x38
 8002934:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8002936:	2b01      	cmp	r3, #1
 8002938:	f240 8125 	bls.w	8002b86 <ai_platform_api_get_network_report+0x40e>
 800293c:	f04f 0a00 	mov.w	sl, #0
 8002940:	e9cd 7b00 	strd	r7, fp, [sp]
 8002944:	f8d7 9030 	ldr.w	r9, [r7, #48]	; 0x30
 8002948:	4655      	mov	r5, sl
 800294a:	e016      	b.n	800297a <ai_platform_api_get_network_report+0x202>
 800294c:	2101      	movs	r1, #1
 800294e:	f847 100e 	str.w	r1, [r7, lr]
 8002952:	69b1      	ldr	r1, [r6, #24]
 8002954:	6849      	ldr	r1, [r1, #4]
 8002956:	60a3      	str	r3, [r4, #8]
 8002958:	f04f 0301 	mov.w	r3, #1
 800295c:	7523      	strb	r3, [r4, #20]
 800295e:	2300      	movs	r3, #0
 8002960:	60e3      	str	r3, [r4, #12]
 8002962:	6963      	ldr	r3, [r4, #20]
 8002964:	6121      	str	r1, [r4, #16]
 8002966:	e9c4 0200 	strd	r0, r2, [r4]
 800296a:	f368 231f 	bfi	r3, r8, #8, #24
 800296e:	f8c4 b018 	str.w	fp, [r4, #24]
 8002972:	3501      	adds	r5, #1
 8002974:	f10a 0a1c 	add.w	sl, sl, #28
 8002978:	6163      	str	r3, [r4, #20]
 800297a:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 800297e:	42ab      	cmp	r3, r5
 8002980:	b2aa      	uxth	r2, r5
 8002982:	d935      	bls.n	80029f0 <ai_platform_api_get_network_report+0x278>
 8002984:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8002988:	2b00      	cmp	r3, #0
 800298a:	d031      	beq.n	80029f0 <ai_platform_api_get_network_report+0x278>
 800298c:	f853 6025 	ldr.w	r6, [r3, r5, lsl #2]
 8002990:	b376      	cbz	r6, 80029f0 <ai_platform_api_get_network_report+0x278>
 8002992:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8002996:	69b2      	ldr	r2, [r6, #24]
 8002998:	f8d6 b00c 	ldr.w	fp, [r6, #12]
 800299c:	6810      	ldr	r0, [r2, #0]
 800299e:	e9d3 4701 	ldrd	r4, r7, [r3, #4]
 80029a2:	68b3      	ldr	r3, [r6, #8]
 80029a4:	f3c3 2817 	ubfx	r8, r3, #8, #24
 80029a8:	f001 fdb0 	bl	800450c <ai_array_to_buffer_fmt>
 80029ac:	69b1      	ldr	r1, [r6, #24]
 80029ae:	eb07 03c5 	add.w	r3, r7, r5, lsl #3
 80029b2:	688a      	ldr	r2, [r1, #8]
 80029b4:	4454      	add	r4, sl
 80029b6:	ea4f 0ec5 	mov.w	lr, r5, lsl #3
 80029ba:	2b00      	cmp	r3, #0
 80029bc:	d0ca      	beq.n	8002954 <ai_platform_api_get_network_report+0x1dc>
 80029be:	2100      	movs	r1, #0
 80029c0:	f847 1035 	str.w	r1, [r7, r5, lsl #3]
 80029c4:	6831      	ldr	r1, [r6, #0]
 80029c6:	6059      	str	r1, [r3, #4]
 80029c8:	b111      	cbz	r1, 80029d0 <ai_platform_api_get_network_report+0x258>
 80029ca:	8849      	ldrh	r1, [r1, #2]
 80029cc:	2900      	cmp	r1, #0
 80029ce:	d1bd      	bne.n	800294c <ai_platform_api_get_network_report+0x1d4>
 80029d0:	69b1      	ldr	r1, [r6, #24]
 80029d2:	2300      	movs	r3, #0
 80029d4:	e7be      	b.n	8002954 <ai_platform_api_get_network_report+0x1dc>
 80029d6:	bf00      	nop
 80029d8:	a1c00100 	.word	0xa1c00100
 80029dc:	e0042000 	.word	0xe0042000
 80029e0:	58024000 	.word	0x58024000
 80029e4:	f407a5c2 	.word	0xf407a5c2
 80029e8:	b5e8b5cd 	.word	0xb5e8b5cd
 80029ec:	40023000 	.word	0x40023000
 80029f0:	e9dd 7b00 	ldrd	r7, fp, [sp]
 80029f4:	2a00      	cmp	r2, #0
 80029f6:	f000 80c6 	beq.w	8002b86 <ai_platform_api_get_network_report+0x40e>
 80029fa:	f8d9 3014 	ldr.w	r3, [r9, #20]
 80029fe:	f107 0624 	add.w	r6, r7, #36	; 0x24
 8002a02:	685b      	ldr	r3, [r3, #4]
 8002a04:	f8cb 3040 	str.w	r3, [fp, #64]	; 0x40
 8002a08:	f8ab 203a 	strh.w	r2, [fp, #58]	; 0x3a
 8002a0c:	4630      	mov	r0, r6
 8002a0e:	f7ff fbfb 	bl	8002208 <ai_buffer_array_sane>
 8002a12:	4604      	mov	r4, r0
 8002a14:	b938      	cbnz	r0, 8002a26 <ai_platform_api_get_network_report+0x2ae>
 8002a16:	4630      	mov	r0, r6
 8002a18:	f7ff fbf6 	bl	8002208 <ai_buffer_array_sane>
 8002a1c:	b118      	cbz	r0, 8002a26 <ai_platform_api_get_network_report+0x2ae>
 8002a1e:	8cfb      	ldrh	r3, [r7, #38]	; 0x26
 8002a20:	2b00      	cmp	r3, #0
 8002a22:	f040 80c5 	bne.w	8002bb0 <ai_platform_api_get_network_report+0x438>
 8002a26:	f107 081c 	add.w	r8, r7, #28
 8002a2a:	4640      	mov	r0, r8
 8002a2c:	f7ff fbec 	bl	8002208 <ai_buffer_array_sane>
 8002a30:	4604      	mov	r4, r0
 8002a32:	b938      	cbnz	r0, 8002a44 <ai_platform_api_get_network_report+0x2cc>
 8002a34:	4640      	mov	r0, r8
 8002a36:	f7ff fbe7 	bl	8002208 <ai_buffer_array_sane>
 8002a3a:	b118      	cbz	r0, 8002a44 <ai_platform_api_get_network_report+0x2cc>
 8002a3c:	8bfb      	ldrh	r3, [r7, #30]
 8002a3e:	2b00      	cmp	r3, #0
 8002a40:	f040 80bd 	bne.w	8002bbe <ai_platform_api_get_network_report+0x446>
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	f8cb 3080 	str.w	r3, [fp, #128]	; 0x80
 8002a4a:	f7ff fbf7 	bl	800223c <_ai_platform_acquire_crc>
 8002a4e:	4ba0      	ldr	r3, [pc, #640]	; (8002cd0 <ai_platform_api_get_network_report+0x558>)
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002a56:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002a5a:	d010      	beq.n	8002a7e <ai_platform_api_get_network_report+0x306>
 8002a5c:	4a9d      	ldr	r2, [pc, #628]	; (8002cd4 <ai_platform_api_get_network_report+0x55c>)
 8002a5e:	2301      	movs	r3, #1
 8002a60:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8002a64:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8002a68:	2b00      	cmp	r3, #0
 8002a6a:	d1fb      	bne.n	8002a64 <ai_platform_api_get_network_report+0x2ec>
 8002a6c:	4b9a      	ldr	r3, [pc, #616]	; (8002cd8 <ai_platform_api_get_network_report+0x560>)
 8002a6e:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8002a72:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8002a76:	4b99      	ldr	r3, [pc, #612]	; (8002cdc <ai_platform_api_get_network_report+0x564>)
 8002a78:	429a      	cmp	r2, r3
 8002a7a:	d00d      	beq.n	8002a98 <ai_platform_api_get_network_report+0x320>
 8002a7c:	e7fe      	b.n	8002a7c <ai_platform_api_get_network_report+0x304>
 8002a7e:	4a98      	ldr	r2, [pc, #608]	; (8002ce0 <ai_platform_api_get_network_report+0x568>)
 8002a80:	2301      	movs	r3, #1
 8002a82:	6093      	str	r3, [r2, #8]
 8002a84:	6893      	ldr	r3, [r2, #8]
 8002a86:	2b00      	cmp	r3, #0
 8002a88:	d1fc      	bne.n	8002a84 <ai_platform_api_get_network_report+0x30c>
 8002a8a:	4b93      	ldr	r3, [pc, #588]	; (8002cd8 <ai_platform_api_get_network_report+0x560>)
 8002a8c:	6013      	str	r3, [r2, #0]
 8002a8e:	6812      	ldr	r2, [r2, #0]
 8002a90:	4b92      	ldr	r3, [pc, #584]	; (8002cdc <ai_platform_api_get_network_report+0x564>)
 8002a92:	429a      	cmp	r2, r3
 8002a94:	f040 808a 	bne.w	8002bac <ai_platform_api_get_network_report+0x434>
 8002a98:	f7ff fbd2 	bl	8002240 <_ai_platform_release_crc>
 8002a9c:	4b91      	ldr	r3, [pc, #580]	; (8002ce4 <ai_platform_api_get_network_report+0x56c>)
 8002a9e:	f8cb 3010 	str.w	r3, [fp, #16]
 8002aa2:	f7ff fbcb 	bl	800223c <_ai_platform_acquire_crc>
 8002aa6:	4b8a      	ldr	r3, [pc, #552]	; (8002cd0 <ai_platform_api_get_network_report+0x558>)
 8002aa8:	681b      	ldr	r3, [r3, #0]
 8002aaa:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002aae:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002ab2:	d010      	beq.n	8002ad6 <ai_platform_api_get_network_report+0x35e>
 8002ab4:	4b87      	ldr	r3, [pc, #540]	; (8002cd4 <ai_platform_api_get_network_report+0x55c>)
 8002ab6:	2201      	movs	r2, #1
 8002ab8:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 8002abc:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 8002ac0:	2a00      	cmp	r2, #0
 8002ac2:	d1fb      	bne.n	8002abc <ai_platform_api_get_network_report+0x344>
 8002ac4:	4a84      	ldr	r2, [pc, #528]	; (8002cd8 <ai_platform_api_get_network_report+0x560>)
 8002ac6:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8002aca:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 8002ace:	4b83      	ldr	r3, [pc, #524]	; (8002cdc <ai_platform_api_get_network_report+0x564>)
 8002ad0:	429a      	cmp	r2, r3
 8002ad2:	d00c      	beq.n	8002aee <ai_platform_api_get_network_report+0x376>
 8002ad4:	e7fe      	b.n	8002ad4 <ai_platform_api_get_network_report+0x35c>
 8002ad6:	4b82      	ldr	r3, [pc, #520]	; (8002ce0 <ai_platform_api_get_network_report+0x568>)
 8002ad8:	2201      	movs	r2, #1
 8002ada:	609a      	str	r2, [r3, #8]
 8002adc:	689a      	ldr	r2, [r3, #8]
 8002ade:	2a00      	cmp	r2, #0
 8002ae0:	d1fc      	bne.n	8002adc <ai_platform_api_get_network_report+0x364>
 8002ae2:	4a7d      	ldr	r2, [pc, #500]	; (8002cd8 <ai_platform_api_get_network_report+0x560>)
 8002ae4:	601a      	str	r2, [r3, #0]
 8002ae6:	681a      	ldr	r2, [r3, #0]
 8002ae8:	4b7c      	ldr	r3, [pc, #496]	; (8002cdc <ai_platform_api_get_network_report+0x564>)
 8002aea:	429a      	cmp	r2, r3
 8002aec:	d15f      	bne.n	8002bae <ai_platform_api_get_network_report+0x436>
 8002aee:	f7ff fba7 	bl	8002240 <_ai_platform_release_crc>
 8002af2:	f44f 7384 	mov.w	r3, #264	; 0x108
 8002af6:	f8cb 3014 	str.w	r3, [fp, #20]
 8002afa:	f7ff fb9f 	bl	800223c <_ai_platform_acquire_crc>
 8002afe:	4b74      	ldr	r3, [pc, #464]	; (8002cd0 <ai_platform_api_get_network_report+0x558>)
 8002b00:	681b      	ldr	r3, [r3, #0]
 8002b02:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002b06:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002b0a:	d010      	beq.n	8002b2e <ai_platform_api_get_network_report+0x3b6>
 8002b0c:	4b71      	ldr	r3, [pc, #452]	; (8002cd4 <ai_platform_api_get_network_report+0x55c>)
 8002b0e:	2201      	movs	r2, #1
 8002b10:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 8002b14:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 8002b18:	2a00      	cmp	r2, #0
 8002b1a:	d1fb      	bne.n	8002b14 <ai_platform_api_get_network_report+0x39c>
 8002b1c:	4a6e      	ldr	r2, [pc, #440]	; (8002cd8 <ai_platform_api_get_network_report+0x560>)
 8002b1e:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8002b22:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 8002b26:	4b6d      	ldr	r3, [pc, #436]	; (8002cdc <ai_platform_api_get_network_report+0x564>)
 8002b28:	429a      	cmp	r2, r3
 8002b2a:	d00c      	beq.n	8002b46 <ai_platform_api_get_network_report+0x3ce>
 8002b2c:	e7fe      	b.n	8002b2c <ai_platform_api_get_network_report+0x3b4>
 8002b2e:	4b6c      	ldr	r3, [pc, #432]	; (8002ce0 <ai_platform_api_get_network_report+0x568>)
 8002b30:	2201      	movs	r2, #1
 8002b32:	609a      	str	r2, [r3, #8]
 8002b34:	689a      	ldr	r2, [r3, #8]
 8002b36:	2a00      	cmp	r2, #0
 8002b38:	d1fc      	bne.n	8002b34 <ai_platform_api_get_network_report+0x3bc>
 8002b3a:	4a67      	ldr	r2, [pc, #412]	; (8002cd8 <ai_platform_api_get_network_report+0x560>)
 8002b3c:	601a      	str	r2, [r3, #0]
 8002b3e:	681a      	ldr	r2, [r3, #0]
 8002b40:	4b66      	ldr	r3, [pc, #408]	; (8002cdc <ai_platform_api_get_network_report+0x564>)
 8002b42:	429a      	cmp	r2, r3
 8002b44:	d142      	bne.n	8002bcc <ai_platform_api_get_network_report+0x454>
 8002b46:	f7ff fb7b 	bl	8002240 <_ai_platform_release_crc>
 8002b4a:	f240 2301 	movw	r3, #513	; 0x201
 8002b4e:	f8cb 3024 	str.w	r3, [fp, #36]	; 0x24
 8002b52:	f7ff fb73 	bl	800223c <_ai_platform_acquire_crc>
 8002b56:	4b5e      	ldr	r3, [pc, #376]	; (8002cd0 <ai_platform_api_get_network_report+0x558>)
 8002b58:	681b      	ldr	r3, [r3, #0]
 8002b5a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002b5e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002b62:	d034      	beq.n	8002bce <ai_platform_api_get_network_report+0x456>
 8002b64:	4b5b      	ldr	r3, [pc, #364]	; (8002cd4 <ai_platform_api_get_network_report+0x55c>)
 8002b66:	2201      	movs	r2, #1
 8002b68:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 8002b6c:	f8d3 2c08 	ldr.w	r2, [r3, #3080]	; 0xc08
 8002b70:	2a00      	cmp	r2, #0
 8002b72:	d1fb      	bne.n	8002b6c <ai_platform_api_get_network_report+0x3f4>
 8002b74:	4a58      	ldr	r2, [pc, #352]	; (8002cd8 <ai_platform_api_get_network_report+0x560>)
 8002b76:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8002b7a:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 8002b7e:	4b57      	ldr	r3, [pc, #348]	; (8002cdc <ai_platform_api_get_network_report+0x564>)
 8002b80:	429a      	cmp	r2, r3
 8002b82:	d030      	beq.n	8002be6 <ai_platform_api_get_network_report+0x46e>
 8002b84:	e7fe      	b.n	8002b84 <ai_platform_api_get_network_report+0x40c>
 8002b86:	2400      	movs	r4, #0
 8002b88:	f8cb 4040 	str.w	r4, [fp, #64]	; 0x40
 8002b8c:	f8ab 403a 	strh.w	r4, [fp, #58]	; 0x3a
 8002b90:	2218      	movs	r2, #24
 8002b92:	2113      	movs	r1, #19
 8002b94:	f107 0010 	add.w	r0, r7, #16
 8002b98:	f000 fdf0 	bl	800377c <core_set_error>
 8002b9c:	e63a      	b.n	8002814 <ai_platform_api_get_network_report+0x9c>
 8002b9e:	2218      	movs	r2, #24
 8002ba0:	2111      	movs	r1, #17
 8002ba2:	f107 0010 	add.w	r0, r7, #16
 8002ba6:	f000 fde9 	bl	800377c <core_set_error>
 8002baa:	e633      	b.n	8002814 <ai_platform_api_get_network_report+0x9c>
 8002bac:	e7fe      	b.n	8002bac <ai_platform_api_get_network_report+0x434>
 8002bae:	e7fe      	b.n	8002bae <ai_platform_api_get_network_report+0x436>
 8002bb0:	2213      	movs	r2, #19
 8002bb2:	2111      	movs	r1, #17
 8002bb4:	f107 0010 	add.w	r0, r7, #16
 8002bb8:	f000 fde0 	bl	800377c <core_set_error>
 8002bbc:	e62a      	b.n	8002814 <ai_platform_api_get_network_report+0x9c>
 8002bbe:	2212      	movs	r2, #18
 8002bc0:	2111      	movs	r1, #17
 8002bc2:	f107 0010 	add.w	r0, r7, #16
 8002bc6:	f000 fdd9 	bl	800377c <core_set_error>
 8002bca:	e623      	b.n	8002814 <ai_platform_api_get_network_report+0x9c>
 8002bcc:	e7fe      	b.n	8002bcc <ai_platform_api_get_network_report+0x454>
 8002bce:	4b44      	ldr	r3, [pc, #272]	; (8002ce0 <ai_platform_api_get_network_report+0x568>)
 8002bd0:	2201      	movs	r2, #1
 8002bd2:	609a      	str	r2, [r3, #8]
 8002bd4:	689a      	ldr	r2, [r3, #8]
 8002bd6:	2a00      	cmp	r2, #0
 8002bd8:	d1fc      	bne.n	8002bd4 <ai_platform_api_get_network_report+0x45c>
 8002bda:	4a3f      	ldr	r2, [pc, #252]	; (8002cd8 <ai_platform_api_get_network_report+0x560>)
 8002bdc:	601a      	str	r2, [r3, #0]
 8002bde:	681a      	ldr	r2, [r3, #0]
 8002be0:	4b3e      	ldr	r3, [pc, #248]	; (8002cdc <ai_platform_api_get_network_report+0x564>)
 8002be2:	429a      	cmp	r2, r3
 8002be4:	d14a      	bne.n	8002c7c <ai_platform_api_get_network_report+0x504>
 8002be6:	f7ff fb2b 	bl	8002240 <_ai_platform_release_crc>
 8002bea:	f240 5301 	movw	r3, #1281	; 0x501
 8002bee:	f8cb 3028 	str.w	r3, [fp, #40]	; 0x28
 8002bf2:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8002bf4:	f001 fd36 	bl	8004664 <ai_platform_version_get>
 8002bf8:	4b3b      	ldr	r3, [pc, #236]	; (8002ce8 <ai_platform_api_get_network_report+0x570>)
 8002bfa:	f8db 2044 	ldr.w	r2, [fp, #68]	; 0x44
 8002bfe:	f8cb 0020 	str.w	r0, [fp, #32]
 8002c02:	429a      	cmp	r2, r3
 8002c04:	d10d      	bne.n	8002c22 <ai_platform_api_get_network_report+0x4aa>
 8002c06:	e896 0003 	ldmia.w	r6, {r0, r1}
 8002c0a:	f10b 0250 	add.w	r2, fp, #80	; 0x50
 8002c0e:	e882 0003 	stmia.w	r2, {r0, r1}
 8002c12:	e898 0003 	ldmia.w	r8, {r0, r1}
 8002c16:	f10b 0348 	add.w	r3, fp, #72	; 0x48
 8002c1a:	e883 0003 	stmia.w	r3, {r0, r1}
 8002c1e:	2401      	movs	r4, #1
 8002c20:	e5f8      	b.n	8002814 <ai_platform_api_get_network_report+0x9c>
 8002c22:	4a32      	ldr	r2, [pc, #200]	; (8002cec <ai_platform_api_get_network_report+0x574>)
 8002c24:	4b32      	ldr	r3, [pc, #200]	; (8002cf0 <ai_platform_api_get_network_report+0x578>)
 8002c26:	f8cb 2044 	str.w	r2, [fp, #68]	; 0x44
 8002c2a:	2000      	movs	r0, #0
 8002c2c:	2100      	movs	r1, #0
 8002c2e:	f240 4201 	movw	r2, #1025	; 0x401
 8002c32:	e9cb 0112 	strd	r0, r1, [fp, #72]	; 0x48
 8002c36:	e9cb 0114 	strd	r0, r1, [fp, #80]	; 0x50
 8002c3a:	f8cb 2058 	str.w	r2, [fp, #88]	; 0x58
 8002c3e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002c40:	f10d 0908 	add.w	r9, sp, #8
 8002c44:	f10b 0444 	add.w	r4, fp, #68	; 0x44
 8002c48:	f8cb 905c 	str.w	r9, [fp, #92]	; 0x5c
 8002c4c:	46a6      	mov	lr, r4
 8002c4e:	e889 000f 	stmia.w	r9, {r0, r1, r2, r3}
 8002c52:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8002c56:	f10b 0560 	add.w	r5, fp, #96	; 0x60
 8002c5a:	46ac      	mov	ip, r5
 8002c5c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8002c60:	e89e 0007 	ldmia.w	lr, {r0, r1, r2}
 8002c64:	e88c 0007 	stmia.w	ip, {r0, r1, r2}
 8002c68:	4630      	mov	r0, r6
 8002c6a:	f7ff facd 	bl	8002208 <ai_buffer_array_sane>
 8002c6e:	b990      	cbnz	r0, 8002c96 <ai_platform_api_get_network_report+0x51e>
 8002c70:	4640      	mov	r0, r8
 8002c72:	f7ff fac9 	bl	8002208 <ai_buffer_array_sane>
 8002c76:	b910      	cbnz	r0, 8002c7e <ai_platform_api_get_network_report+0x506>
 8002c78:	2401      	movs	r4, #1
 8002c7a:	e5cb      	b.n	8002814 <ai_platform_api_get_network_report+0x9c>
 8002c7c:	e7fe      	b.n	8002c7c <ai_platform_api_get_network_report+0x504>
 8002c7e:	4640      	mov	r0, r8
 8002c80:	f7ff fac2 	bl	8002208 <ai_buffer_array_sane>
 8002c84:	b198      	cbz	r0, 8002cae <ai_platform_api_get_network_report+0x536>
 8002c86:	6a3d      	ldr	r5, [r7, #32]
 8002c88:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002c8a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002c8c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002c90:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002c94:	e7f0      	b.n	8002c78 <ai_platform_api_get_network_report+0x500>
 8002c96:	4630      	mov	r0, r6
 8002c98:	f7ff fab6 	bl	8002208 <ai_buffer_array_sane>
 8002c9c:	b178      	cbz	r0, 8002cbe <ai_platform_api_get_network_report+0x546>
 8002c9e:	6abe      	ldr	r6, [r7, #40]	; 0x28
 8002ca0:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8002ca2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002ca4:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8002ca8:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8002cac:	e7e0      	b.n	8002c70 <ai_platform_api_get_network_report+0x4f8>
 8002cae:	4605      	mov	r5, r0
 8002cb0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002cb2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002cb4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002cb8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002cbc:	deff      	udf	#255	; 0xff
 8002cbe:	4604      	mov	r4, r0
 8002cc0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002cc2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002cc4:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8002cc8:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 8002ccc:	deff      	udf	#255	; 0xff
 8002cce:	bf00      	nop
 8002cd0:	e0042000 	.word	0xe0042000
 8002cd4:	58024000 	.word	0x58024000
 8002cd8:	f407a5c2 	.word	0xf407a5c2
 8002cdc:	b5e8b5cd 	.word	0xb5e8b5cd
 8002ce0:	40023000 	.word	0x40023000
 8002ce4:	08008cd4 	.word	0x08008cd4
 8002ce8:	a1facade 	.word	0xa1facade
 8002cec:	00040440 	.word	0x00040440
 8002cf0:	080073b0 	.word	0x080073b0

08002cf4 <ai_platform_network_create>:
 8002cf4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002cf8:	b083      	sub	sp, #12
 8002cfa:	4606      	mov	r6, r0
 8002cfc:	f89d 8028 	ldrb.w	r8, [sp, #40]	; 0x28
 8002d00:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 8002d04:	4615      	mov	r5, r2
 8002d06:	461f      	mov	r7, r3
 8002d08:	f7ff fa98 	bl	800223c <_ai_platform_acquire_crc>
 8002d0c:	b188      	cbz	r0, 8002d32 <ai_platform_network_create+0x3e>
 8002d0e:	4a5d      	ldr	r2, [pc, #372]	; (8002e84 <ai_platform_network_create+0x190>)
 8002d10:	6812      	ldr	r2, [r2, #0]
 8002d12:	f402 62e0 	and.w	r2, r2, #1792	; 0x700
 8002d16:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8002d1a:	4603      	mov	r3, r0
 8002d1c:	d00e      	beq.n	8002d3c <ai_platform_network_create+0x48>
 8002d1e:	4a5a      	ldr	r2, [pc, #360]	; (8002e88 <ai_platform_network_create+0x194>)
 8002d20:	2118      	movs	r1, #24
 8002d22:	f8c2 1c08 	str.w	r1, [r2, #3080]	; 0xc08
 8002d26:	f8d2 1c08 	ldr.w	r1, [r2, #3080]	; 0xc08
 8002d2a:	2918      	cmp	r1, #24
 8002d2c:	d018      	beq.n	8002d60 <ai_platform_network_create+0x6c>
 8002d2e:	f7ff fa87 	bl	8002240 <_ai_platform_release_crc>
 8002d32:	f244 1033 	movw	r0, #16691	; 0x4133
 8002d36:	b003      	add	sp, #12
 8002d38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002d3c:	4a53      	ldr	r2, [pc, #332]	; (8002e8c <ai_platform_network_create+0x198>)
 8002d3e:	2101      	movs	r1, #1
 8002d40:	6091      	str	r1, [r2, #8]
 8002d42:	2114      	movs	r1, #20
 8002d44:	e001      	b.n	8002d4a <ai_platform_network_create+0x56>
 8002d46:	3901      	subs	r1, #1
 8002d48:	d002      	beq.n	8002d50 <ai_platform_network_create+0x5c>
 8002d4a:	6894      	ldr	r4, [r2, #8]
 8002d4c:	2c00      	cmp	r4, #0
 8002d4e:	d1fa      	bne.n	8002d46 <ai_platform_network_create+0x52>
 8002d50:	4a4e      	ldr	r2, [pc, #312]	; (8002e8c <ai_platform_network_create+0x198>)
 8002d52:	6891      	ldr	r1, [r2, #8]
 8002d54:	b911      	cbnz	r1, 8002d5c <ai_platform_network_create+0x68>
 8002d56:	6812      	ldr	r2, [r2, #0]
 8002d58:	3201      	adds	r2, #1
 8002d5a:	d008      	beq.n	8002d6e <ai_platform_network_create+0x7a>
 8002d5c:	4618      	mov	r0, r3
 8002d5e:	e7e6      	b.n	8002d2e <ai_platform_network_create+0x3a>
 8002d60:	2101      	movs	r1, #1
 8002d62:	f8c2 1c08 	str.w	r1, [r2, #3080]	; 0xc08
 8002d66:	f8d2 1c08 	ldr.w	r1, [r2, #3080]	; 0xc08
 8002d6a:	2900      	cmp	r1, #0
 8002d6c:	d1fb      	bne.n	8002d66 <ai_platform_network_create+0x72>
 8002d6e:	4618      	mov	r0, r3
 8002d70:	f7ff fa66 	bl	8002240 <_ai_platform_release_crc>
 8002d74:	f7ff fa62 	bl	800223c <_ai_platform_acquire_crc>
 8002d78:	4b42      	ldr	r3, [pc, #264]	; (8002e84 <ai_platform_network_create+0x190>)
 8002d7a:	681b      	ldr	r3, [r3, #0]
 8002d7c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002d80:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002d84:	d010      	beq.n	8002da8 <ai_platform_network_create+0xb4>
 8002d86:	4b40      	ldr	r3, [pc, #256]	; (8002e88 <ai_platform_network_create+0x194>)
 8002d88:	2201      	movs	r2, #1
 8002d8a:	f8c3 2c08 	str.w	r2, [r3, #3080]	; 0xc08
 8002d8e:	f8d3 1c08 	ldr.w	r1, [r3, #3080]	; 0xc08
 8002d92:	2900      	cmp	r1, #0
 8002d94:	d1fb      	bne.n	8002d8e <ai_platform_network_create+0x9a>
 8002d96:	4a3e      	ldr	r2, [pc, #248]	; (8002e90 <ai_platform_network_create+0x19c>)
 8002d98:	f8c3 2c00 	str.w	r2, [r3, #3072]	; 0xc00
 8002d9c:	f8d3 2c00 	ldr.w	r2, [r3, #3072]	; 0xc00
 8002da0:	4b3c      	ldr	r3, [pc, #240]	; (8002e94 <ai_platform_network_create+0x1a0>)
 8002da2:	429a      	cmp	r2, r3
 8002da4:	d00c      	beq.n	8002dc0 <ai_platform_network_create+0xcc>
 8002da6:	e7fe      	b.n	8002da6 <ai_platform_network_create+0xb2>
 8002da8:	4a38      	ldr	r2, [pc, #224]	; (8002e8c <ai_platform_network_create+0x198>)
 8002daa:	2301      	movs	r3, #1
 8002dac:	6093      	str	r3, [r2, #8]
 8002dae:	6893      	ldr	r3, [r2, #8]
 8002db0:	2b00      	cmp	r3, #0
 8002db2:	d1fc      	bne.n	8002dae <ai_platform_network_create+0xba>
 8002db4:	4b36      	ldr	r3, [pc, #216]	; (8002e90 <ai_platform_network_create+0x19c>)
 8002db6:	6013      	str	r3, [r2, #0]
 8002db8:	6812      	ldr	r2, [r2, #0]
 8002dba:	4b36      	ldr	r3, [pc, #216]	; (8002e94 <ai_platform_network_create+0x1a0>)
 8002dbc:	429a      	cmp	r2, r3
 8002dbe:	d122      	bne.n	8002e06 <ai_platform_network_create+0x112>
 8002dc0:	f7ff fa3e 	bl	8002240 <_ai_platform_release_crc>
 8002dc4:	b38e      	cbz	r6, 8002e2a <ai_platform_network_create+0x136>
 8002dc6:	4b34      	ldr	r3, [pc, #208]	; (8002e98 <ai_platform_network_create+0x1a4>)
 8002dc8:	602b      	str	r3, [r5, #0]
 8002dca:	6035      	str	r5, [r6, #0]
 8002dcc:	f000 fcce 	bl	800376c <core_init>
 8002dd0:	b1d0      	cbz	r0, 8002e08 <ai_platform_network_create+0x114>
 8002dd2:	f7ff fa33 	bl	800223c <_ai_platform_acquire_crc>
 8002dd6:	4b2b      	ldr	r3, [pc, #172]	; (8002e84 <ai_platform_network_create+0x190>)
 8002dd8:	681b      	ldr	r3, [r3, #0]
 8002dda:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002dde:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002de2:	d025      	beq.n	8002e30 <ai_platform_network_create+0x13c>
 8002de4:	4a28      	ldr	r2, [pc, #160]	; (8002e88 <ai_platform_network_create+0x194>)
 8002de6:	2301      	movs	r3, #1
 8002de8:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8002dec:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8002df0:	2b00      	cmp	r3, #0
 8002df2:	d1fb      	bne.n	8002dec <ai_platform_network_create+0xf8>
 8002df4:	4b26      	ldr	r3, [pc, #152]	; (8002e90 <ai_platform_network_create+0x19c>)
 8002df6:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8002dfa:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8002dfe:	4b25      	ldr	r3, [pc, #148]	; (8002e94 <ai_platform_network_create+0x1a0>)
 8002e00:	429a      	cmp	r2, r3
 8002e02:	d022      	beq.n	8002e4a <ai_platform_network_create+0x156>
 8002e04:	e7fe      	b.n	8002e04 <ai_platform_network_create+0x110>
 8002e06:	e7fe      	b.n	8002e06 <ai_platform_network_create+0x112>
 8002e08:	2430      	movs	r4, #48	; 0x30
 8002e0a:	2300      	movs	r3, #0
 8002e0c:	6033      	str	r3, [r6, #0]
 8002e0e:	2610      	movs	r6, #16
 8002e10:	464a      	mov	r2, r9
 8002e12:	4641      	mov	r1, r8
 8002e14:	4638      	mov	r0, r7
 8002e16:	f001 fc1f 	bl	8004658 <ai_version_get>
 8002e1a:	4603      	mov	r3, r0
 8002e1c:	2000      	movs	r0, #0
 8002e1e:	f364 0007 	bfi	r0, r4, #0, #8
 8002e22:	64ab      	str	r3, [r5, #72]	; 0x48
 8002e24:	f366 201f 	bfi	r0, r6, #8, #24
 8002e28:	e785      	b.n	8002d36 <ai_platform_network_create+0x42>
 8002e2a:	f241 0010 	movw	r0, #4112	; 0x1010
 8002e2e:	e782      	b.n	8002d36 <ai_platform_network_create+0x42>
 8002e30:	4a16      	ldr	r2, [pc, #88]	; (8002e8c <ai_platform_network_create+0x198>)
 8002e32:	2301      	movs	r3, #1
 8002e34:	6093      	str	r3, [r2, #8]
 8002e36:	6893      	ldr	r3, [r2, #8]
 8002e38:	2b00      	cmp	r3, #0
 8002e3a:	d1fc      	bne.n	8002e36 <ai_platform_network_create+0x142>
 8002e3c:	4b14      	ldr	r3, [pc, #80]	; (8002e90 <ai_platform_network_create+0x19c>)
 8002e3e:	6013      	str	r3, [r2, #0]
 8002e40:	6812      	ldr	r2, [r2, #0]
 8002e42:	4b14      	ldr	r3, [pc, #80]	; (8002e94 <ai_platform_network_create+0x1a0>)
 8002e44:	429a      	cmp	r2, r3
 8002e46:	d000      	beq.n	8002e4a <ai_platform_network_create+0x156>
 8002e48:	e7fe      	b.n	8002e48 <ai_platform_network_create+0x154>
 8002e4a:	f7ff f9f9 	bl	8002240 <_ai_platform_release_crc>
 8002e4e:	2200      	movs	r2, #0
 8002e50:	4641      	mov	r1, r8
 8002e52:	4638      	mov	r0, r7
 8002e54:	f001 fc00 	bl	8004658 <ai_version_get>
 8002e58:	2200      	movs	r2, #0
 8002e5a:	4604      	mov	r4, r0
 8002e5c:	2105      	movs	r1, #5
 8002e5e:	2001      	movs	r0, #1
 8002e60:	f001 fbfa 	bl	8004658 <ai_version_get>
 8002e64:	4284      	cmp	r4, r0
 8002e66:	d001      	beq.n	8002e6c <ai_platform_network_create+0x178>
 8002e68:	2401      	movs	r4, #1
 8002e6a:	e7ce      	b.n	8002e0a <ai_platform_network_create+0x116>
 8002e6c:	4b0b      	ldr	r3, [pc, #44]	; (8002e9c <ai_platform_network_create+0x1a8>)
 8002e6e:	9301      	str	r3, [sp, #4]
 8002e70:	a801      	add	r0, sp, #4
 8002e72:	f000 fc8f 	bl	8003794 <ai_check_custom_types>
 8002e76:	b110      	cbz	r0, 8002e7e <ai_platform_network_create+0x18a>
 8002e78:	2600      	movs	r6, #0
 8002e7a:	4634      	mov	r4, r6
 8002e7c:	e7c8      	b.n	8002e10 <ai_platform_network_create+0x11c>
 8002e7e:	2402      	movs	r4, #2
 8002e80:	e7c3      	b.n	8002e0a <ai_platform_network_create+0x116>
 8002e82:	bf00      	nop
 8002e84:	e0042000 	.word	0xe0042000
 8002e88:	58024000 	.word	0x58024000
 8002e8c:	40023000 	.word	0x40023000
 8002e90:	f407a5c2 	.word	0xf407a5c2
 8002e94:	b5e8b5cd 	.word	0xb5e8b5cd
 8002e98:	a1c00100 	.word	0xa1c00100
 8002e9c:	84048403 	.word	0x84048403

08002ea0 <ai_platform_network_destroy>:
 8002ea0:	b510      	push	{r4, lr}
 8002ea2:	4604      	mov	r4, r0
 8002ea4:	b1e8      	cbz	r0, 8002ee2 <ai_platform_network_destroy+0x42>
 8002ea6:	4b2e      	ldr	r3, [pc, #184]	; (8002f60 <ai_platform_network_destroy+0xc0>)
 8002ea8:	6802      	ldr	r2, [r0, #0]
 8002eaa:	429a      	cmp	r2, r3
 8002eac:	d119      	bne.n	8002ee2 <ai_platform_network_destroy+0x42>
 8002eae:	f7ff f9c5 	bl	800223c <_ai_platform_acquire_crc>
 8002eb2:	4b2c      	ldr	r3, [pc, #176]	; (8002f64 <ai_platform_network_destroy+0xc4>)
 8002eb4:	681b      	ldr	r3, [r3, #0]
 8002eb6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002eba:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002ebe:	d03b      	beq.n	8002f38 <ai_platform_network_destroy+0x98>
 8002ec0:	4a29      	ldr	r2, [pc, #164]	; (8002f68 <ai_platform_network_destroy+0xc8>)
 8002ec2:	2301      	movs	r3, #1
 8002ec4:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8002ec8:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8002ecc:	2b00      	cmp	r3, #0
 8002ece:	d1fb      	bne.n	8002ec8 <ai_platform_network_destroy+0x28>
 8002ed0:	4b26      	ldr	r3, [pc, #152]	; (8002f6c <ai_platform_network_destroy+0xcc>)
 8002ed2:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8002ed6:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8002eda:	4b25      	ldr	r3, [pc, #148]	; (8002f70 <ai_platform_network_destroy+0xd0>)
 8002edc:	429a      	cmp	r2, r3
 8002ede:	d037      	beq.n	8002f50 <ai_platform_network_destroy+0xb0>
 8002ee0:	e7fe      	b.n	8002ee0 <ai_platform_network_destroy+0x40>
 8002ee2:	f7ff f9ab 	bl	800223c <_ai_platform_acquire_crc>
 8002ee6:	4b1f      	ldr	r3, [pc, #124]	; (8002f64 <ai_platform_network_destroy+0xc4>)
 8002ee8:	681b      	ldr	r3, [r3, #0]
 8002eea:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002eee:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002ef2:	d010      	beq.n	8002f16 <ai_platform_network_destroy+0x76>
 8002ef4:	4a1c      	ldr	r2, [pc, #112]	; (8002f68 <ai_platform_network_destroy+0xc8>)
 8002ef6:	2301      	movs	r3, #1
 8002ef8:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8002efc:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8002f00:	2b00      	cmp	r3, #0
 8002f02:	d1fb      	bne.n	8002efc <ai_platform_network_destroy+0x5c>
 8002f04:	4b19      	ldr	r3, [pc, #100]	; (8002f6c <ai_platform_network_destroy+0xcc>)
 8002f06:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8002f0a:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8002f0e:	4b18      	ldr	r3, [pc, #96]	; (8002f70 <ai_platform_network_destroy+0xd0>)
 8002f10:	429a      	cmp	r2, r3
 8002f12:	d00d      	beq.n	8002f30 <ai_platform_network_destroy+0x90>
 8002f14:	e7fe      	b.n	8002f14 <ai_platform_network_destroy+0x74>
 8002f16:	4a17      	ldr	r2, [pc, #92]	; (8002f74 <ai_platform_network_destroy+0xd4>)
 8002f18:	2301      	movs	r3, #1
 8002f1a:	6093      	str	r3, [r2, #8]
 8002f1c:	6893      	ldr	r3, [r2, #8]
 8002f1e:	2b00      	cmp	r3, #0
 8002f20:	d1fc      	bne.n	8002f1c <ai_platform_network_destroy+0x7c>
 8002f22:	4b12      	ldr	r3, [pc, #72]	; (8002f6c <ai_platform_network_destroy+0xcc>)
 8002f24:	6013      	str	r3, [r2, #0]
 8002f26:	6812      	ldr	r2, [r2, #0]
 8002f28:	4b11      	ldr	r3, [pc, #68]	; (8002f70 <ai_platform_network_destroy+0xd0>)
 8002f2a:	429a      	cmp	r2, r3
 8002f2c:	d000      	beq.n	8002f30 <ai_platform_network_destroy+0x90>
 8002f2e:	e7fe      	b.n	8002f2e <ai_platform_network_destroy+0x8e>
 8002f30:	f7ff f986 	bl	8002240 <_ai_platform_release_crc>
 8002f34:	4620      	mov	r0, r4
 8002f36:	bd10      	pop	{r4, pc}
 8002f38:	4a0e      	ldr	r2, [pc, #56]	; (8002f74 <ai_platform_network_destroy+0xd4>)
 8002f3a:	2301      	movs	r3, #1
 8002f3c:	6093      	str	r3, [r2, #8]
 8002f3e:	6893      	ldr	r3, [r2, #8]
 8002f40:	2b00      	cmp	r3, #0
 8002f42:	d1fc      	bne.n	8002f3e <ai_platform_network_destroy+0x9e>
 8002f44:	4b09      	ldr	r3, [pc, #36]	; (8002f6c <ai_platform_network_destroy+0xcc>)
 8002f46:	6013      	str	r3, [r2, #0]
 8002f48:	6812      	ldr	r2, [r2, #0]
 8002f4a:	4b09      	ldr	r3, [pc, #36]	; (8002f70 <ai_platform_network_destroy+0xd0>)
 8002f4c:	429a      	cmp	r2, r3
 8002f4e:	d106      	bne.n	8002f5e <ai_platform_network_destroy+0xbe>
 8002f50:	f7ff f976 	bl	8002240 <_ai_platform_release_crc>
 8002f54:	4620      	mov	r0, r4
 8002f56:	f000 fcb3 	bl	80038c0 <ai_layers_destroy_all>
 8002f5a:	2000      	movs	r0, #0
 8002f5c:	bd10      	pop	{r4, pc}
 8002f5e:	e7fe      	b.n	8002f5e <ai_platform_network_destroy+0xbe>
 8002f60:	a1c00100 	.word	0xa1c00100
 8002f64:	e0042000 	.word	0xe0042000
 8002f68:	58024000 	.word	0x58024000
 8002f6c:	f407a5c2 	.word	0xf407a5c2
 8002f70:	b5e8b5cd 	.word	0xb5e8b5cd
 8002f74:	40023000 	.word	0x40023000

08002f78 <ai_platform_network_init>:
 8002f78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002f7c:	b1f8      	cbz	r0, 8002fbe <ai_platform_network_init+0x46>
 8002f7e:	4b6e      	ldr	r3, [pc, #440]	; (8003138 <ai_platform_network_init+0x1c0>)
 8002f80:	6802      	ldr	r2, [r0, #0]
 8002f82:	429a      	cmp	r2, r3
 8002f84:	4604      	mov	r4, r0
 8002f86:	d11a      	bne.n	8002fbe <ai_platform_network_init+0x46>
 8002f88:	460e      	mov	r6, r1
 8002f8a:	f7ff f957 	bl	800223c <_ai_platform_acquire_crc>
 8002f8e:	4b6b      	ldr	r3, [pc, #428]	; (800313c <ai_platform_network_init+0x1c4>)
 8002f90:	681b      	ldr	r3, [r3, #0]
 8002f92:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002f96:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002f9a:	d03d      	beq.n	8003018 <ai_platform_network_init+0xa0>
 8002f9c:	4a68      	ldr	r2, [pc, #416]	; (8003140 <ai_platform_network_init+0x1c8>)
 8002f9e:	2301      	movs	r3, #1
 8002fa0:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8002fa4:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8002fa8:	2b00      	cmp	r3, #0
 8002faa:	d1fb      	bne.n	8002fa4 <ai_platform_network_init+0x2c>
 8002fac:	4b65      	ldr	r3, [pc, #404]	; (8003144 <ai_platform_network_init+0x1cc>)
 8002fae:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8002fb2:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8002fb6:	4b64      	ldr	r3, [pc, #400]	; (8003148 <ai_platform_network_init+0x1d0>)
 8002fb8:	429a      	cmp	r2, r3
 8002fba:	d039      	beq.n	8003030 <ai_platform_network_init+0xb8>
 8002fbc:	e7fe      	b.n	8002fbc <ai_platform_network_init+0x44>
 8002fbe:	f7ff f93d 	bl	800223c <_ai_platform_acquire_crc>
 8002fc2:	4b5e      	ldr	r3, [pc, #376]	; (800313c <ai_platform_network_init+0x1c4>)
 8002fc4:	681b      	ldr	r3, [r3, #0]
 8002fc6:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8002fca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002fce:	d010      	beq.n	8002ff2 <ai_platform_network_init+0x7a>
 8002fd0:	4a5b      	ldr	r2, [pc, #364]	; (8003140 <ai_platform_network_init+0x1c8>)
 8002fd2:	2301      	movs	r3, #1
 8002fd4:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8002fd8:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8002fdc:	2b00      	cmp	r3, #0
 8002fde:	d1fb      	bne.n	8002fd8 <ai_platform_network_init+0x60>
 8002fe0:	4b58      	ldr	r3, [pc, #352]	; (8003144 <ai_platform_network_init+0x1cc>)
 8002fe2:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 8002fe6:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 8002fea:	4b57      	ldr	r3, [pc, #348]	; (8003148 <ai_platform_network_init+0x1d0>)
 8002fec:	429a      	cmp	r2, r3
 8002fee:	d00d      	beq.n	800300c <ai_platform_network_init+0x94>
 8002ff0:	e7fe      	b.n	8002ff0 <ai_platform_network_init+0x78>
 8002ff2:	4a56      	ldr	r2, [pc, #344]	; (800314c <ai_platform_network_init+0x1d4>)
 8002ff4:	2301      	movs	r3, #1
 8002ff6:	6093      	str	r3, [r2, #8]
 8002ff8:	6893      	ldr	r3, [r2, #8]
 8002ffa:	2b00      	cmp	r3, #0
 8002ffc:	d1fc      	bne.n	8002ff8 <ai_platform_network_init+0x80>
 8002ffe:	4b51      	ldr	r3, [pc, #324]	; (8003144 <ai_platform_network_init+0x1cc>)
 8003000:	6013      	str	r3, [r2, #0]
 8003002:	6812      	ldr	r2, [r2, #0]
 8003004:	4b50      	ldr	r3, [pc, #320]	; (8003148 <ai_platform_network_init+0x1d0>)
 8003006:	429a      	cmp	r2, r3
 8003008:	d000      	beq.n	800300c <ai_platform_network_init+0x94>
 800300a:	e7fe      	b.n	800300a <ai_platform_network_init+0x92>
 800300c:	f7ff f918 	bl	8002240 <_ai_platform_release_crc>
 8003010:	2600      	movs	r6, #0
 8003012:	4630      	mov	r0, r6
 8003014:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003018:	4a4c      	ldr	r2, [pc, #304]	; (800314c <ai_platform_network_init+0x1d4>)
 800301a:	2301      	movs	r3, #1
 800301c:	6093      	str	r3, [r2, #8]
 800301e:	6893      	ldr	r3, [r2, #8]
 8003020:	2b00      	cmp	r3, #0
 8003022:	d1fc      	bne.n	800301e <ai_platform_network_init+0xa6>
 8003024:	4b47      	ldr	r3, [pc, #284]	; (8003144 <ai_platform_network_init+0x1cc>)
 8003026:	6013      	str	r3, [r2, #0]
 8003028:	6812      	ldr	r2, [r2, #0]
 800302a:	4b47      	ldr	r3, [pc, #284]	; (8003148 <ai_platform_network_init+0x1d0>)
 800302c:	429a      	cmp	r2, r3
 800302e:	d11c      	bne.n	800306a <ai_platform_network_init+0xf2>
 8003030:	f7ff f906 	bl	8002240 <_ai_platform_release_crc>
 8003034:	2e00      	cmp	r6, #0
 8003036:	d06f      	beq.n	8003118 <ai_platform_network_init+0x1a0>
 8003038:	4b45      	ldr	r3, [pc, #276]	; (8003150 <ai_platform_network_init+0x1d8>)
 800303a:	6832      	ldr	r2, [r6, #0]
 800303c:	429a      	cmp	r2, r3
 800303e:	d115      	bne.n	800306c <ai_platform_network_init+0xf4>
 8003040:	e9d6 2101 	ldrd	r2, r1, [r6, #4]
 8003044:	6933      	ldr	r3, [r6, #16]
 8003046:	f8b6 e00c 	ldrh.w	lr, [r6, #12]
 800304a:	89f7      	ldrh	r7, [r6, #14]
 800304c:	62a3      	str	r3, [r4, #40]	; 0x28
 800304e:	e9c4 2107 	strd	r2, r1, [r4, #28]
 8003052:	2303      	movs	r3, #3
 8003054:	84e7      	strh	r7, [r4, #38]	; 0x26
 8003056:	f8a4 e024 	strh.w	lr, [r4, #36]	; 0x24
 800305a:	60e3      	str	r3, [r4, #12]
 800305c:	4620      	mov	r0, r4
 800305e:	4626      	mov	r6, r4
 8003060:	f000 fbc2 	bl	80037e8 <ai_layers_init_all>
 8003064:	4630      	mov	r0, r6
 8003066:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800306a:	e7fe      	b.n	800306a <ai_platform_network_init+0xf2>
 800306c:	2101      	movs	r1, #1
 800306e:	4630      	mov	r0, r6
 8003070:	4635      	mov	r5, r6
 8003072:	6876      	ldr	r6, [r6, #4]
 8003074:	f7ff f894 	bl	80021a0 <ai_buffer_get_size>
 8003078:	f105 081c 	add.w	r8, r5, #28
 800307c:	4681      	mov	r9, r0
 800307e:	2101      	movs	r1, #1
 8003080:	4640      	mov	r0, r8
 8003082:	6a2f      	ldr	r7, [r5, #32]
 8003084:	f7ff f88c 	bl	80021a0 <ai_buffer_get_size>
 8003088:	f1b9 0f00 	cmp.w	r9, #0
 800308c:	d025      	beq.n	80030da <ai_platform_network_init+0x162>
 800308e:	2201      	movs	r2, #1
 8003090:	4696      	mov	lr, r2
 8003092:	bb30      	cbnz	r0, 80030e2 <ai_platform_network_init+0x16a>
 8003094:	4680      	mov	r8, r0
 8003096:	4607      	mov	r7, r0
 8003098:	b376      	cbz	r6, 80030f8 <ai_platform_network_init+0x180>
 800309a:	8be3      	ldrh	r3, [r4, #30]
 800309c:	4573      	cmp	r3, lr
 800309e:	d323      	bcc.n	80030e8 <ai_platform_network_init+0x170>
 80030a0:	b142      	cbz	r2, 80030b4 <ai_platform_network_init+0x13c>
 80030a2:	46ac      	mov	ip, r5
 80030a4:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80030a8:	6a25      	ldr	r5, [r4, #32]
 80030aa:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80030ac:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 80030b0:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80030b4:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 80030b6:	f8a4 e01e 	strh.w	lr, [r4, #30]
 80030ba:	2600      	movs	r6, #0
 80030bc:	42bb      	cmp	r3, r7
 80030be:	83a6      	strh	r6, [r4, #28]
 80030c0:	d323      	bcc.n	800310a <ai_platform_network_init+0x192>
 80030c2:	b37f      	cbz	r7, 8003124 <ai_platform_network_init+0x1ac>
 80030c4:	46c4      	mov	ip, r8
 80030c6:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
 80030ca:	6aa5      	ldr	r5, [r4, #40]	; 0x28
 80030cc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80030ce:	e89c 0007 	ldmia.w	ip, {r0, r1, r2}
 80030d2:	46b6      	mov	lr, r6
 80030d4:	e885 0007 	stmia.w	r5, {r0, r1, r2}
 80030d8:	e7bb      	b.n	8003052 <ai_platform_network_init+0xda>
 80030da:	464a      	mov	r2, r9
 80030dc:	46ce      	mov	lr, r9
 80030de:	464d      	mov	r5, r9
 80030e0:	e7d7      	b.n	8003092 <ai_platform_network_init+0x11a>
 80030e2:	b30f      	cbz	r7, 8003128 <ai_platform_network_init+0x1b0>
 80030e4:	2701      	movs	r7, #1
 80030e6:	e7d7      	b.n	8003098 <ai_platform_network_init+0x120>
 80030e8:	2212      	movs	r2, #18
 80030ea:	2116      	movs	r1, #22
 80030ec:	f104 0010 	add.w	r0, r4, #16
 80030f0:	f000 fb44 	bl	800377c <core_set_error>
 80030f4:	2600      	movs	r6, #0
 80030f6:	e78c      	b.n	8003012 <ai_platform_network_init+0x9a>
 80030f8:	f1b9 0f00 	cmp.w	r9, #0
 80030fc:	d0cd      	beq.n	800309a <ai_platform_network_init+0x122>
 80030fe:	2110      	movs	r1, #16
 8003100:	2212      	movs	r2, #18
 8003102:	1860      	adds	r0, r4, r1
 8003104:	f000 fb3a 	bl	800377c <core_set_error>
 8003108:	e783      	b.n	8003012 <ai_platform_network_init+0x9a>
 800310a:	2213      	movs	r2, #19
 800310c:	2116      	movs	r1, #22
 800310e:	f104 0010 	add.w	r0, r4, #16
 8003112:	f000 fb33 	bl	800377c <core_set_error>
 8003116:	e77c      	b.n	8003012 <ai_platform_network_init+0x9a>
 8003118:	2110      	movs	r1, #16
 800311a:	2211      	movs	r2, #17
 800311c:	1860      	adds	r0, r4, r1
 800311e:	f000 fb2d 	bl	800377c <core_set_error>
 8003122:	e776      	b.n	8003012 <ai_platform_network_init+0x9a>
 8003124:	46be      	mov	lr, r7
 8003126:	e794      	b.n	8003052 <ai_platform_network_init+0xda>
 8003128:	2110      	movs	r1, #16
 800312a:	2213      	movs	r2, #19
 800312c:	1860      	adds	r0, r4, r1
 800312e:	f000 fb25 	bl	800377c <core_set_error>
 8003132:	463e      	mov	r6, r7
 8003134:	e76d      	b.n	8003012 <ai_platform_network_init+0x9a>
 8003136:	bf00      	nop
 8003138:	a1c00100 	.word	0xa1c00100
 800313c:	e0042000 	.word	0xe0042000
 8003140:	58024000 	.word	0x58024000
 8003144:	f407a5c2 	.word	0xf407a5c2
 8003148:	b5e8b5cd 	.word	0xb5e8b5cd
 800314c:	40023000 	.word	0x40023000
 8003150:	a1facade 	.word	0xa1facade

08003154 <ai_platform_network_post_init>:
 8003154:	b538      	push	{r3, r4, r5, lr}
 8003156:	b1f0      	cbz	r0, 8003196 <ai_platform_network_post_init+0x42>
 8003158:	4b3c      	ldr	r3, [pc, #240]	; (800324c <ai_platform_network_post_init+0xf8>)
 800315a:	6802      	ldr	r2, [r0, #0]
 800315c:	429a      	cmp	r2, r3
 800315e:	4604      	mov	r4, r0
 8003160:	d119      	bne.n	8003196 <ai_platform_network_post_init+0x42>
 8003162:	f7ff f86b 	bl	800223c <_ai_platform_acquire_crc>
 8003166:	4b3a      	ldr	r3, [pc, #232]	; (8003250 <ai_platform_network_post_init+0xfc>)
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800316e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003172:	d03b      	beq.n	80031ec <ai_platform_network_post_init+0x98>
 8003174:	4a37      	ldr	r2, [pc, #220]	; (8003254 <ai_platform_network_post_init+0x100>)
 8003176:	2301      	movs	r3, #1
 8003178:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 800317c:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 8003180:	2b00      	cmp	r3, #0
 8003182:	d1fb      	bne.n	800317c <ai_platform_network_post_init+0x28>
 8003184:	4b34      	ldr	r3, [pc, #208]	; (8003258 <ai_platform_network_post_init+0x104>)
 8003186:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 800318a:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 800318e:	4b33      	ldr	r3, [pc, #204]	; (800325c <ai_platform_network_post_init+0x108>)
 8003190:	429a      	cmp	r2, r3
 8003192:	d037      	beq.n	8003204 <ai_platform_network_post_init+0xb0>
 8003194:	e7fe      	b.n	8003194 <ai_platform_network_post_init+0x40>
 8003196:	f7ff f851 	bl	800223c <_ai_platform_acquire_crc>
 800319a:	4b2d      	ldr	r3, [pc, #180]	; (8003250 <ai_platform_network_post_init+0xfc>)
 800319c:	681b      	ldr	r3, [r3, #0]
 800319e:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80031a2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80031a6:	d010      	beq.n	80031ca <ai_platform_network_post_init+0x76>
 80031a8:	4a2a      	ldr	r2, [pc, #168]	; (8003254 <ai_platform_network_post_init+0x100>)
 80031aa:	2301      	movs	r3, #1
 80031ac:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 80031b0:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	d1fb      	bne.n	80031b0 <ai_platform_network_post_init+0x5c>
 80031b8:	4b27      	ldr	r3, [pc, #156]	; (8003258 <ai_platform_network_post_init+0x104>)
 80031ba:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80031be:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80031c2:	4b26      	ldr	r3, [pc, #152]	; (800325c <ai_platform_network_post_init+0x108>)
 80031c4:	429a      	cmp	r2, r3
 80031c6:	d00d      	beq.n	80031e4 <ai_platform_network_post_init+0x90>
 80031c8:	e7fe      	b.n	80031c8 <ai_platform_network_post_init+0x74>
 80031ca:	4a25      	ldr	r2, [pc, #148]	; (8003260 <ai_platform_network_post_init+0x10c>)
 80031cc:	2301      	movs	r3, #1
 80031ce:	6093      	str	r3, [r2, #8]
 80031d0:	6893      	ldr	r3, [r2, #8]
 80031d2:	2b00      	cmp	r3, #0
 80031d4:	d1fc      	bne.n	80031d0 <ai_platform_network_post_init+0x7c>
 80031d6:	4b20      	ldr	r3, [pc, #128]	; (8003258 <ai_platform_network_post_init+0x104>)
 80031d8:	6013      	str	r3, [r2, #0]
 80031da:	6812      	ldr	r2, [r2, #0]
 80031dc:	4b1f      	ldr	r3, [pc, #124]	; (800325c <ai_platform_network_post_init+0x108>)
 80031de:	429a      	cmp	r2, r3
 80031e0:	d000      	beq.n	80031e4 <ai_platform_network_post_init+0x90>
 80031e2:	e7fe      	b.n	80031e2 <ai_platform_network_post_init+0x8e>
 80031e4:	f7ff f82c 	bl	8002240 <_ai_platform_release_crc>
 80031e8:	2000      	movs	r0, #0
 80031ea:	bd38      	pop	{r3, r4, r5, pc}
 80031ec:	4a1c      	ldr	r2, [pc, #112]	; (8003260 <ai_platform_network_post_init+0x10c>)
 80031ee:	2301      	movs	r3, #1
 80031f0:	6093      	str	r3, [r2, #8]
 80031f2:	6893      	ldr	r3, [r2, #8]
 80031f4:	2b00      	cmp	r3, #0
 80031f6:	d1fc      	bne.n	80031f2 <ai_platform_network_post_init+0x9e>
 80031f8:	4b17      	ldr	r3, [pc, #92]	; (8003258 <ai_platform_network_post_init+0x104>)
 80031fa:	6013      	str	r3, [r2, #0]
 80031fc:	6812      	ldr	r2, [r2, #0]
 80031fe:	4b17      	ldr	r3, [pc, #92]	; (800325c <ai_platform_network_post_init+0x108>)
 8003200:	429a      	cmp	r2, r3
 8003202:	d11a      	bne.n	800323a <ai_platform_network_post_init+0xe6>
 8003204:	f7ff f81c 	bl	8002240 <_ai_platform_release_crc>
 8003208:	68e3      	ldr	r3, [r4, #12]
 800320a:	f013 0502 	ands.w	r5, r3, #2
 800320e:	d015      	beq.n	800323c <ai_platform_network_post_init+0xe8>
 8003210:	4620      	mov	r0, r4
 8003212:	f000 faf7 	bl	8003804 <ai_layers_post_init_all>
 8003216:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003218:	b16b      	cbz	r3, 8003236 <ai_platform_network_post_init+0xe2>
 800321a:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800321c:	e007      	b.n	800322e <ai_platform_network_post_init+0xda>
 800321e:	e9d4 320f 	ldrd	r3, r2, [r4, #60]	; 0x3c
 8003222:	4798      	blx	r3
 8003224:	692b      	ldr	r3, [r5, #16]
 8003226:	42ab      	cmp	r3, r5
 8003228:	d005      	beq.n	8003236 <ai_platform_network_post_init+0xe2>
 800322a:	b123      	cbz	r3, 8003236 <ai_platform_network_post_init+0xe2>
 800322c:	461d      	mov	r5, r3
 800322e:	4629      	mov	r1, r5
 8003230:	2000      	movs	r0, #0
 8003232:	2d00      	cmp	r5, #0
 8003234:	d1f3      	bne.n	800321e <ai_platform_network_post_init+0xca>
 8003236:	2001      	movs	r0, #1
 8003238:	bd38      	pop	{r3, r4, r5, pc}
 800323a:	e7fe      	b.n	800323a <ai_platform_network_post_init+0xe6>
 800323c:	2210      	movs	r2, #16
 800323e:	2111      	movs	r1, #17
 8003240:	18a0      	adds	r0, r4, r2
 8003242:	f000 fa9b 	bl	800377c <core_set_error>
 8003246:	4628      	mov	r0, r5
 8003248:	bd38      	pop	{r3, r4, r5, pc}
 800324a:	bf00      	nop
 800324c:	a1c00100 	.word	0xa1c00100
 8003250:	e0042000 	.word	0xe0042000
 8003254:	58024000 	.word	0x58024000
 8003258:	f407a5c2 	.word	0xf407a5c2
 800325c:	b5e8b5cd 	.word	0xb5e8b5cd
 8003260:	40023000 	.word	0x40023000

08003264 <ai_platform_network_process>:
 8003264:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003268:	460e      	mov	r6, r1
 800326a:	b085      	sub	sp, #20
 800326c:	4693      	mov	fp, r2
 800326e:	4605      	mov	r5, r0
 8003270:	b120      	cbz	r0, 800327c <ai_platform_network_process+0x18>
 8003272:	4bb8      	ldr	r3, [pc, #736]	; (8003554 <ai_platform_network_process+0x2f0>)
 8003274:	6802      	ldr	r2, [r0, #0]
 8003276:	429a      	cmp	r2, r3
 8003278:	bf18      	it	ne
 800327a:	2500      	movne	r5, #0
 800327c:	f7fe ffde 	bl	800223c <_ai_platform_acquire_crc>
 8003280:	4bb5      	ldr	r3, [pc, #724]	; (8003558 <ai_platform_network_process+0x2f4>)
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8003288:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800328c:	d010      	beq.n	80032b0 <ai_platform_network_process+0x4c>
 800328e:	4ab3      	ldr	r2, [pc, #716]	; (800355c <ai_platform_network_process+0x2f8>)
 8003290:	2301      	movs	r3, #1
 8003292:	f8c2 3c08 	str.w	r3, [r2, #3080]	; 0xc08
 8003296:	f8d2 3c08 	ldr.w	r3, [r2, #3080]	; 0xc08
 800329a:	2b00      	cmp	r3, #0
 800329c:	d1fb      	bne.n	8003296 <ai_platform_network_process+0x32>
 800329e:	4bb0      	ldr	r3, [pc, #704]	; (8003560 <ai_platform_network_process+0x2fc>)
 80032a0:	f8c2 3c00 	str.w	r3, [r2, #3072]	; 0xc00
 80032a4:	f8d2 2c00 	ldr.w	r2, [r2, #3072]	; 0xc00
 80032a8:	4bae      	ldr	r3, [pc, #696]	; (8003564 <ai_platform_network_process+0x300>)
 80032aa:	429a      	cmp	r2, r3
 80032ac:	d00d      	beq.n	80032ca <ai_platform_network_process+0x66>
 80032ae:	e7fe      	b.n	80032ae <ai_platform_network_process+0x4a>
 80032b0:	4aad      	ldr	r2, [pc, #692]	; (8003568 <ai_platform_network_process+0x304>)
 80032b2:	2301      	movs	r3, #1
 80032b4:	6093      	str	r3, [r2, #8]
 80032b6:	6893      	ldr	r3, [r2, #8]
 80032b8:	2b00      	cmp	r3, #0
 80032ba:	d1fc      	bne.n	80032b6 <ai_platform_network_process+0x52>
 80032bc:	4ba8      	ldr	r3, [pc, #672]	; (8003560 <ai_platform_network_process+0x2fc>)
 80032be:	6013      	str	r3, [r2, #0]
 80032c0:	6812      	ldr	r2, [r2, #0]
 80032c2:	4ba8      	ldr	r3, [pc, #672]	; (8003564 <ai_platform_network_process+0x300>)
 80032c4:	429a      	cmp	r2, r3
 80032c6:	f040 812c 	bne.w	8003522 <ai_platform_network_process+0x2be>
 80032ca:	f7fe ffb9 	bl	8002240 <_ai_platform_release_crc>
 80032ce:	2d00      	cmp	r5, #0
 80032d0:	f000 8154 	beq.w	800357c <ai_platform_network_process+0x318>
 80032d4:	8dab      	ldrh	r3, [r5, #44]	; 0x2c
 80032d6:	2b00      	cmp	r3, #0
 80032d8:	f000 8124 	beq.w	8003524 <ai_platform_network_process+0x2c0>
 80032dc:	68eb      	ldr	r3, [r5, #12]
 80032de:	f8d5 a030 	ldr.w	sl, [r5, #48]	; 0x30
 80032e2:	f003 0303 	and.w	r3, r3, #3
 80032e6:	2700      	movs	r7, #0
 80032e8:	2b03      	cmp	r3, #3
 80032ea:	616f      	str	r7, [r5, #20]
 80032ec:	f040 813e 	bne.w	800356c <ai_platform_network_process+0x308>
 80032f0:	2e00      	cmp	r6, #0
 80032f2:	f000 811d 	beq.w	8003530 <ai_platform_network_process+0x2cc>
 80032f6:	f1ba 0f00 	cmp.w	sl, #0
 80032fa:	f000 8119 	beq.w	8003530 <ai_platform_network_process+0x2cc>
 80032fe:	f8ba 3000 	ldrh.w	r3, [sl]
 8003302:	2b00      	cmp	r3, #0
 8003304:	f000 8114 	beq.w	8003530 <ai_platform_network_process+0x2cc>
 8003308:	69b3      	ldr	r3, [r6, #24]
 800330a:	f8cd b00c 	str.w	fp, [sp, #12]
 800330e:	681b      	ldr	r3, [r3, #0]
 8003310:	e9cd 3501 	strd	r3, r5, [sp, #4]
 8003314:	f8da 3004 	ldr.w	r3, [sl, #4]
 8003318:	2b00      	cmp	r3, #0
 800331a:	d072      	beq.n	8003402 <ai_platform_network_process+0x19e>
 800331c:	f853 4027 	ldr.w	r4, [r3, r7, lsl #2]
 8003320:	2c00      	cmp	r4, #0
 8003322:	d06e      	beq.n	8003402 <ai_platform_network_process+0x19e>
 8003324:	f8da 3008 	ldr.w	r3, [sl, #8]
 8003328:	f8d3 9000 	ldr.w	r9, [r3]
 800332c:	eb19 1807 	adds.w	r8, r9, r7, lsl #4
 8003330:	ea4f 1b07 	mov.w	fp, r7, lsl #4
 8003334:	f000 81de 	beq.w	80036f4 <ai_platform_network_process+0x490>
 8003338:	69a3      	ldr	r3, [r4, #24]
 800333a:	2101      	movs	r1, #1
 800333c:	4630      	mov	r0, r6
 800333e:	685d      	ldr	r5, [r3, #4]
 8003340:	f7fe ff2e 	bl	80021a0 <ai_buffer_get_size>
 8003344:	4285      	cmp	r5, r0
 8003346:	f0c0 811b 	bcc.w	8003580 <ai_platform_network_process+0x31c>
 800334a:	68e0      	ldr	r0, [r4, #12]
 800334c:	69b1      	ldr	r1, [r6, #24]
 800334e:	68c2      	ldr	r2, [r0, #12]
 8003350:	68cb      	ldr	r3, [r1, #12]
 8003352:	429a      	cmp	r2, r3
 8003354:	f040 8114 	bne.w	8003580 <ai_platform_network_process+0x31c>
 8003358:	6882      	ldr	r2, [r0, #8]
 800335a:	688b      	ldr	r3, [r1, #8]
 800335c:	429a      	cmp	r2, r3
 800335e:	f040 810f 	bne.w	8003580 <ai_platform_network_process+0x31c>
 8003362:	6842      	ldr	r2, [r0, #4]
 8003364:	684b      	ldr	r3, [r1, #4]
 8003366:	429a      	cmp	r2, r3
 8003368:	f040 810a 	bne.w	8003580 <ai_platform_network_process+0x31c>
 800336c:	69a3      	ldr	r3, [r4, #24]
 800336e:	e9d3 0100 	ldrd	r0, r1, [r3]
 8003372:	f001 f95f 	bl	8004634 <ai_array_get_data_byte_size>
 8003376:	4605      	mov	r5, r0
 8003378:	4620      	mov	r0, r4
 800337a:	f001 f985 	bl	8004688 <get_tensor_byte_size>
 800337e:	4285      	cmp	r5, r0
 8003380:	f0c0 80fe 	bcc.w	8003580 <ai_platform_network_process+0x31c>
 8003384:	69a3      	ldr	r3, [r4, #24]
 8003386:	6818      	ldr	r0, [r3, #0]
 8003388:	f001 f8c0 	bl	800450c <ai_array_to_buffer_fmt>
 800338c:	6833      	ldr	r3, [r6, #0]
 800338e:	4058      	eors	r0, r3
 8003390:	f030 407e 	bics.w	r0, r0, #4261412864	; 0xfe000000
 8003394:	f040 81b9 	bne.w	800370a <ai_platform_network_process+0x4a6>
 8003398:	6873      	ldr	r3, [r6, #4]
 800339a:	2b00      	cmp	r3, #0
 800339c:	f000 81ac 	beq.w	80036f8 <ai_platform_network_process+0x494>
 80033a0:	69b3      	ldr	r3, [r6, #24]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	2b00      	cmp	r3, #0
 80033a6:	f000 819c 	beq.w	80036e2 <ai_platform_network_process+0x47e>
 80033aa:	9a01      	ldr	r2, [sp, #4]
 80033ac:	429a      	cmp	r2, r3
 80033ae:	bf38      	it	cc
 80033b0:	461a      	movcc	r2, r3
 80033b2:	4620      	mov	r0, r4
 80033b4:	9201      	str	r2, [sp, #4]
 80033b6:	f001 f967 	bl	8004688 <get_tensor_byte_size>
 80033ba:	f8c8 0008 	str.w	r0, [r8, #8]
 80033be:	69b3      	ldr	r3, [r6, #24]
 80033c0:	681b      	ldr	r3, [r3, #0]
 80033c2:	fb00 f303 	mul.w	r3, r0, r3
 80033c6:	f8c8 300c 	str.w	r3, [r8, #12]
 80033ca:	6871      	ldr	r1, [r6, #4]
 80033cc:	f8c8 1004 	str.w	r1, [r8, #4]
 80033d0:	440b      	add	r3, r1
 80033d2:	f849 300b 	str.w	r3, [r9, fp]
 80033d6:	69a0      	ldr	r0, [r4, #24]
 80033d8:	6803      	ldr	r3, [r0, #0]
 80033da:	009a      	lsls	r2, r3, #2
 80033dc:	f107 0701 	add.w	r7, r7, #1
 80033e0:	f106 061c 	add.w	r6, r6, #28
 80033e4:	f100 80af 	bmi.w	8003546 <ai_platform_network_process+0x2e2>
 80033e8:	e9d0 3202 	ldrd	r3, r2, [r0, #8]
 80033ec:	1a9b      	subs	r3, r3, r2
 80033ee:	4419      	add	r1, r3
 80033f0:	6081      	str	r1, [r0, #8]
 80033f2:	69a3      	ldr	r3, [r4, #24]
 80033f4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80033f8:	60da      	str	r2, [r3, #12]
 80033fa:	f8ba 3000 	ldrh.w	r3, [sl]
 80033fe:	42bb      	cmp	r3, r7
 8003400:	d888      	bhi.n	8003314 <ai_platform_network_process+0xb0>
 8003402:	e9dd 5b02 	ldrd	r5, fp, [sp, #8]
 8003406:	8daa      	ldrh	r2, [r5, #44]	; 0x2c
 8003408:	f1bb 0f00 	cmp.w	fp, #0
 800340c:	f000 8186 	beq.w	800371c <ai_platform_network_process+0x4b8>
 8003410:	2a01      	cmp	r2, #1
 8003412:	f240 815e 	bls.w	80036d2 <ai_platform_network_process+0x46e>
 8003416:	f8d5 9030 	ldr.w	r9, [r5, #48]	; 0x30
 800341a:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 800341e:	2b00      	cmp	r3, #0
 8003420:	f000 8157 	beq.w	80036d2 <ai_platform_network_process+0x46e>
 8003424:	465e      	mov	r6, fp
 8003426:	2700      	movs	r7, #0
 8003428:	462c      	mov	r4, r5
 800342a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800342e:	2b00      	cmp	r3, #0
 8003430:	f000 80b4 	beq.w	800359c <ai_platform_network_process+0x338>
 8003434:	f853 5027 	ldr.w	r5, [r3, r7, lsl #2]
 8003438:	2d00      	cmp	r5, #0
 800343a:	f000 80af 	beq.w	800359c <ai_platform_network_process+0x338>
 800343e:	f8d9 3014 	ldr.w	r3, [r9, #20]
 8003442:	f8d3 8000 	ldr.w	r8, [r3]
 8003446:	eb18 1a07 	adds.w	sl, r8, r7, lsl #4
 800344a:	ea4f 1b07 	mov.w	fp, r7, lsl #4
 800344e:	f000 8171 	beq.w	8003734 <ai_platform_network_process+0x4d0>
 8003452:	69ab      	ldr	r3, [r5, #24]
 8003454:	2101      	movs	r1, #1
 8003456:	685b      	ldr	r3, [r3, #4]
 8003458:	9302      	str	r3, [sp, #8]
 800345a:	4630      	mov	r0, r6
 800345c:	f7fe fea0 	bl	80021a0 <ai_buffer_get_size>
 8003460:	9b02      	ldr	r3, [sp, #8]
 8003462:	4283      	cmp	r3, r0
 8003464:	f0c0 8134 	bcc.w	80036d0 <ai_platform_network_process+0x46c>
 8003468:	68e8      	ldr	r0, [r5, #12]
 800346a:	69b1      	ldr	r1, [r6, #24]
 800346c:	68c2      	ldr	r2, [r0, #12]
 800346e:	68cb      	ldr	r3, [r1, #12]
 8003470:	429a      	cmp	r2, r3
 8003472:	f040 812d 	bne.w	80036d0 <ai_platform_network_process+0x46c>
 8003476:	6882      	ldr	r2, [r0, #8]
 8003478:	688b      	ldr	r3, [r1, #8]
 800347a:	429a      	cmp	r2, r3
 800347c:	f040 8128 	bne.w	80036d0 <ai_platform_network_process+0x46c>
 8003480:	6842      	ldr	r2, [r0, #4]
 8003482:	684b      	ldr	r3, [r1, #4]
 8003484:	429a      	cmp	r2, r3
 8003486:	f040 8123 	bne.w	80036d0 <ai_platform_network_process+0x46c>
 800348a:	69ab      	ldr	r3, [r5, #24]
 800348c:	e9d3 0100 	ldrd	r0, r1, [r3]
 8003490:	f001 f8d0 	bl	8004634 <ai_array_get_data_byte_size>
 8003494:	9002      	str	r0, [sp, #8]
 8003496:	4628      	mov	r0, r5
 8003498:	f001 f8f6 	bl	8004688 <get_tensor_byte_size>
 800349c:	9b02      	ldr	r3, [sp, #8]
 800349e:	4283      	cmp	r3, r0
 80034a0:	f0c0 8116 	bcc.w	80036d0 <ai_platform_network_process+0x46c>
 80034a4:	69ab      	ldr	r3, [r5, #24]
 80034a6:	6818      	ldr	r0, [r3, #0]
 80034a8:	f001 f830 	bl	800450c <ai_array_to_buffer_fmt>
 80034ac:	6833      	ldr	r3, [r6, #0]
 80034ae:	4058      	eors	r0, r3
 80034b0:	f030 407e 	bics.w	r0, r0, #4261412864	; 0xfe000000
 80034b4:	f040 8136 	bne.w	8003724 <ai_platform_network_process+0x4c0>
 80034b8:	6873      	ldr	r3, [r6, #4]
 80034ba:	2b00      	cmp	r3, #0
 80034bc:	f000 814d 	beq.w	800375a <ai_platform_network_process+0x4f6>
 80034c0:	69b3      	ldr	r3, [r6, #24]
 80034c2:	681b      	ldr	r3, [r3, #0]
 80034c4:	2b00      	cmp	r3, #0
 80034c6:	f000 813f 	beq.w	8003748 <ai_platform_network_process+0x4e4>
 80034ca:	9a01      	ldr	r2, [sp, #4]
 80034cc:	429a      	cmp	r2, r3
 80034ce:	bf38      	it	cc
 80034d0:	461a      	movcc	r2, r3
 80034d2:	4628      	mov	r0, r5
 80034d4:	9201      	str	r2, [sp, #4]
 80034d6:	f001 f8d7 	bl	8004688 <get_tensor_byte_size>
 80034da:	f8ca 0008 	str.w	r0, [sl, #8]
 80034de:	69b3      	ldr	r3, [r6, #24]
 80034e0:	681b      	ldr	r3, [r3, #0]
 80034e2:	fb00 f303 	mul.w	r3, r0, r3
 80034e6:	f8ca 300c 	str.w	r3, [sl, #12]
 80034ea:	6871      	ldr	r1, [r6, #4]
 80034ec:	f8ca 1004 	str.w	r1, [sl, #4]
 80034f0:	440b      	add	r3, r1
 80034f2:	f848 300b 	str.w	r3, [r8, fp]
 80034f6:	69a8      	ldr	r0, [r5, #24]
 80034f8:	6803      	ldr	r3, [r0, #0]
 80034fa:	009b      	lsls	r3, r3, #2
 80034fc:	f107 0701 	add.w	r7, r7, #1
 8003500:	f106 061c 	add.w	r6, r6, #28
 8003504:	d445      	bmi.n	8003592 <ai_platform_network_process+0x32e>
 8003506:	e9d0 3202 	ldrd	r3, r2, [r0, #8]
 800350a:	1a9b      	subs	r3, r3, r2
 800350c:	4419      	add	r1, r3
 800350e:	6081      	str	r1, [r0, #8]
 8003510:	69ab      	ldr	r3, [r5, #24]
 8003512:	f8da 2004 	ldr.w	r2, [sl, #4]
 8003516:	60da      	str	r2, [r3, #12]
 8003518:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 800351c:	429f      	cmp	r7, r3
 800351e:	d384      	bcc.n	800342a <ai_platform_network_process+0x1c6>
 8003520:	e03c      	b.n	800359c <ai_platform_network_process+0x338>
 8003522:	e7fe      	b.n	8003522 <ai_platform_network_process+0x2be>
 8003524:	68ea      	ldr	r2, [r5, #12]
 8003526:	616b      	str	r3, [r5, #20]
 8003528:	f002 0203 	and.w	r2, r2, #3
 800352c:	2a03      	cmp	r2, #3
 800352e:	d11d      	bne.n	800356c <ai_platform_network_process+0x308>
 8003530:	2217      	movs	r2, #23
 8003532:	2112      	movs	r1, #18
 8003534:	f105 0010 	add.w	r0, r5, #16
 8003538:	f000 f920 	bl	800377c <core_set_error>
 800353c:	2400      	movs	r4, #0
 800353e:	4620      	mov	r0, r4
 8003540:	b005      	add	sp, #20
 8003542:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003546:	f8ba 3000 	ldrh.w	r3, [sl]
 800354a:	429f      	cmp	r7, r3
 800354c:	f4ff aee2 	bcc.w	8003314 <ai_platform_network_process+0xb0>
 8003550:	e757      	b.n	8003402 <ai_platform_network_process+0x19e>
 8003552:	bf00      	nop
 8003554:	a1c00100 	.word	0xa1c00100
 8003558:	e0042000 	.word	0xe0042000
 800355c:	58024000 	.word	0x58024000
 8003560:	f407a5c2 	.word	0xf407a5c2
 8003564:	b5e8b5cd 	.word	0xb5e8b5cd
 8003568:	40023000 	.word	0x40023000
 800356c:	2230      	movs	r2, #48	; 0x30
 800356e:	2111      	movs	r1, #17
 8003570:	f105 0010 	add.w	r0, r5, #16
 8003574:	f000 f902 	bl	800377c <core_set_error>
 8003578:	2400      	movs	r4, #0
 800357a:	e7e0      	b.n	800353e <ai_platform_network_process+0x2da>
 800357c:	462c      	mov	r4, r5
 800357e:	e7de      	b.n	800353e <ai_platform_network_process+0x2da>
 8003580:	9d02      	ldr	r5, [sp, #8]
 8003582:	2218      	movs	r2, #24
 8003584:	2112      	movs	r1, #18
 8003586:	f105 0010 	add.w	r0, r5, #16
 800358a:	f000 f8f7 	bl	800377c <core_set_error>
 800358e:	2400      	movs	r4, #0
 8003590:	e7d5      	b.n	800353e <ai_platform_network_process+0x2da>
 8003592:	f8b9 300c 	ldrh.w	r3, [r9, #12]
 8003596:	429f      	cmp	r7, r3
 8003598:	f4ff af47 	bcc.w	800342a <ai_platform_network_process+0x1c6>
 800359c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80035a0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 80035a2:	82a3      	strh	r3, [r4, #20]
 80035a4:	4625      	mov	r5, r4
 80035a6:	2a00      	cmp	r2, #0
 80035a8:	f040 808c 	bne.w	80036c4 <ai_platform_network_process+0x460>
 80035ac:	4616      	mov	r6, r2
 80035ae:	4617      	mov	r7, r2
 80035b0:	8aec      	ldrh	r4, [r5, #22]
 80035b2:	429c      	cmp	r4, r3
 80035b4:	bf38      	it	cc
 80035b6:	46ab      	movcc	fp, r5
 80035b8:	d2c1      	bcs.n	800353e <ai_platform_network_process+0x2da>
 80035ba:	2e00      	cmp	r6, #0
 80035bc:	d030      	beq.n	8003620 <ai_platform_network_process+0x3bc>
 80035be:	f04f 0800 	mov.w	r8, #0
 80035c2:	e014      	b.n	80035ee <ai_platform_network_process+0x38a>
 80035c4:	6882      	ldr	r2, [r0, #8]
 80035c6:	68c5      	ldr	r5, [r0, #12]
 80035c8:	6863      	ldr	r3, [r4, #4]
 80035ca:	1b52      	subs	r2, r2, r5
 80035cc:	4413      	add	r3, r2
 80035ce:	6083      	str	r3, [r0, #8]
 80035d0:	698b      	ldr	r3, [r1, #24]
 80035d2:	6862      	ldr	r2, [r4, #4]
 80035d4:	60da      	str	r2, [r3, #12]
 80035d6:	e9d4 3101 	ldrd	r3, r1, [r4, #4]
 80035da:	f859 200a 	ldr.w	r2, [r9, sl]
 80035de:	440b      	add	r3, r1
 80035e0:	4293      	cmp	r3, r2
 80035e2:	bf24      	itt	cs
 80035e4:	68e3      	ldrcs	r3, [r4, #12]
 80035e6:	1ad3      	subcs	r3, r2, r3
 80035e8:	6063      	str	r3, [r4, #4]
 80035ea:	f108 0801 	add.w	r8, r8, #1
 80035ee:	8833      	ldrh	r3, [r6, #0]
 80035f0:	4543      	cmp	r3, r8
 80035f2:	ea4f 1a08 	mov.w	sl, r8, lsl #4
 80035f6:	d913      	bls.n	8003620 <ai_platform_network_process+0x3bc>
 80035f8:	6873      	ldr	r3, [r6, #4]
 80035fa:	b18b      	cbz	r3, 8003620 <ai_platform_network_process+0x3bc>
 80035fc:	f853 1028 	ldr.w	r1, [r3, r8, lsl #2]
 8003600:	b171      	cbz	r1, 8003620 <ai_platform_network_process+0x3bc>
 8003602:	6988      	ldr	r0, [r1, #24]
 8003604:	68b2      	ldr	r2, [r6, #8]
 8003606:	6803      	ldr	r3, [r0, #0]
 8003608:	f8d2 9000 	ldr.w	r9, [r2]
 800360c:	009d      	lsls	r5, r3, #2
 800360e:	eb09 1408 	add.w	r4, r9, r8, lsl #4
 8003612:	d5d7      	bpl.n	80035c4 <ai_platform_network_process+0x360>
 8003614:	6881      	ldr	r1, [r0, #8]
 8003616:	68a2      	ldr	r2, [r4, #8]
 8003618:	6860      	ldr	r0, [r4, #4]
 800361a:	f000 fef1 	bl	8004400 <st_int8_copy>
 800361e:	e7da      	b.n	80035d6 <ai_platform_network_process+0x372>
 8003620:	4658      	mov	r0, fp
 8003622:	f000 f903 	bl	800382c <ai_layers_forward_all>
 8003626:	2f00      	cmp	r7, #0
 8003628:	d03d      	beq.n	80036a6 <ai_platform_network_process+0x442>
 800362a:	2400      	movs	r4, #0
 800362c:	e016      	b.n	800365c <ai_platform_network_process+0x3f8>
 800362e:	e9d8 3201 	ldrd	r3, r2, [r8, #4]
 8003632:	f859 100a 	ldr.w	r1, [r9, sl]
 8003636:	4413      	add	r3, r2
 8003638:	428b      	cmp	r3, r1
 800363a:	bf24      	itt	cs
 800363c:	f8d8 300c 	ldrcs.w	r3, [r8, #12]
 8003640:	1acb      	subcs	r3, r1, r3
 8003642:	f8c8 3004 	str.w	r3, [r8, #4]
 8003646:	6981      	ldr	r1, [r0, #24]
 8003648:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 800364c:	1b52      	subs	r2, r2, r5
 800364e:	4413      	add	r3, r2
 8003650:	608b      	str	r3, [r1, #8]
 8003652:	6983      	ldr	r3, [r0, #24]
 8003654:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8003658:	60da      	str	r2, [r3, #12]
 800365a:	3401      	adds	r4, #1
 800365c:	883b      	ldrh	r3, [r7, #0]
 800365e:	42a3      	cmp	r3, r4
 8003660:	d921      	bls.n	80036a6 <ai_platform_network_process+0x442>
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	b1fb      	cbz	r3, 80036a6 <ai_platform_network_process+0x442>
 8003666:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 800366a:	b1e0      	cbz	r0, 80036a6 <ai_platform_network_process+0x442>
 800366c:	68ba      	ldr	r2, [r7, #8]
 800366e:	6983      	ldr	r3, [r0, #24]
 8003670:	f8d2 9000 	ldr.w	r9, [r2]
 8003674:	681a      	ldr	r2, [r3, #0]
 8003676:	0092      	lsls	r2, r2, #2
 8003678:	ea4f 1a04 	mov.w	sl, r4, lsl #4
 800367c:	eb09 1804 	add.w	r8, r9, r4, lsl #4
 8003680:	d5d5      	bpl.n	800362e <ai_platform_network_process+0x3ca>
 8003682:	e9d8 1201 	ldrd	r1, r2, [r8, #4]
 8003686:	6898      	ldr	r0, [r3, #8]
 8003688:	f000 feba 	bl	8004400 <st_int8_copy>
 800368c:	e9d8 3101 	ldrd	r3, r1, [r8, #4]
 8003690:	f859 200a 	ldr.w	r2, [r9, sl]
 8003694:	440b      	add	r3, r1
 8003696:	4293      	cmp	r3, r2
 8003698:	bf24      	itt	cs
 800369a:	f8d8 300c 	ldrcs.w	r3, [r8, #12]
 800369e:	1ad3      	subcs	r3, r2, r3
 80036a0:	f8c8 3004 	str.w	r3, [r8, #4]
 80036a4:	e7d9      	b.n	800365a <ai_platform_network_process+0x3f6>
 80036a6:	f8bb 4016 	ldrh.w	r4, [fp, #22]
 80036aa:	f8bb 3014 	ldrh.w	r3, [fp, #20]
 80036ae:	3401      	adds	r4, #1
 80036b0:	b2a4      	uxth	r4, r4
 80036b2:	42a3      	cmp	r3, r4
 80036b4:	f8ab 4016 	strh.w	r4, [fp, #22]
 80036b8:	f63f af7f 	bhi.w	80035ba <ai_platform_network_process+0x356>
 80036bc:	4620      	mov	r0, r4
 80036be:	b005      	add	sp, #20
 80036c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80036c4:	2a01      	cmp	r2, #1
 80036c6:	6b2e      	ldr	r6, [r5, #48]	; 0x30
 80036c8:	d03c      	beq.n	8003744 <ai_platform_network_process+0x4e0>
 80036ca:	f106 070c 	add.w	r7, r6, #12
 80036ce:	e76f      	b.n	80035b0 <ai_platform_network_process+0x34c>
 80036d0:	4625      	mov	r5, r4
 80036d2:	2218      	movs	r2, #24
 80036d4:	2113      	movs	r1, #19
 80036d6:	f105 0010 	add.w	r0, r5, #16
 80036da:	f000 f84f 	bl	800377c <core_set_error>
 80036de:	2400      	movs	r4, #0
 80036e0:	e72d      	b.n	800353e <ai_platform_network_process+0x2da>
 80036e2:	9d02      	ldr	r5, [sp, #8]
 80036e4:	4604      	mov	r4, r0
 80036e6:	2221      	movs	r2, #33	; 0x21
 80036e8:	2112      	movs	r1, #18
 80036ea:	f105 0010 	add.w	r0, r5, #16
 80036ee:	f000 f845 	bl	800377c <core_set_error>
 80036f2:	e724      	b.n	800353e <ai_platform_network_process+0x2da>
 80036f4:	9d02      	ldr	r5, [sp, #8]
 80036f6:	e71b      	b.n	8003530 <ai_platform_network_process+0x2cc>
 80036f8:	9d02      	ldr	r5, [sp, #8]
 80036fa:	4604      	mov	r4, r0
 80036fc:	2217      	movs	r2, #23
 80036fe:	2112      	movs	r1, #18
 8003700:	f105 0010 	add.w	r0, r5, #16
 8003704:	f000 f83a 	bl	800377c <core_set_error>
 8003708:	e719      	b.n	800353e <ai_platform_network_process+0x2da>
 800370a:	9d02      	ldr	r5, [sp, #8]
 800370c:	2219      	movs	r2, #25
 800370e:	2112      	movs	r1, #18
 8003710:	f105 0010 	add.w	r0, r5, #16
 8003714:	f000 f832 	bl	800377c <core_set_error>
 8003718:	2400      	movs	r4, #0
 800371a:	e710      	b.n	800353e <ai_platform_network_process+0x2da>
 800371c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8003720:	82ab      	strh	r3, [r5, #20]
 8003722:	e740      	b.n	80035a6 <ai_platform_network_process+0x342>
 8003724:	f104 0010 	add.w	r0, r4, #16
 8003728:	2219      	movs	r2, #25
 800372a:	2113      	movs	r1, #19
 800372c:	f000 f826 	bl	800377c <core_set_error>
 8003730:	2400      	movs	r4, #0
 8003732:	e704      	b.n	800353e <ai_platform_network_process+0x2da>
 8003734:	f104 0010 	add.w	r0, r4, #16
 8003738:	2217      	movs	r2, #23
 800373a:	2113      	movs	r1, #19
 800373c:	f000 f81e 	bl	800377c <core_set_error>
 8003740:	4654      	mov	r4, sl
 8003742:	e6fc      	b.n	800353e <ai_platform_network_process+0x2da>
 8003744:	2700      	movs	r7, #0
 8003746:	e733      	b.n	80035b0 <ai_platform_network_process+0x34c>
 8003748:	4625      	mov	r5, r4
 800374a:	2221      	movs	r2, #33	; 0x21
 800374c:	4604      	mov	r4, r0
 800374e:	2113      	movs	r1, #19
 8003750:	f105 0010 	add.w	r0, r5, #16
 8003754:	f000 f812 	bl	800377c <core_set_error>
 8003758:	e6f1      	b.n	800353e <ai_platform_network_process+0x2da>
 800375a:	4625      	mov	r5, r4
 800375c:	2217      	movs	r2, #23
 800375e:	4604      	mov	r4, r0
 8003760:	2113      	movs	r1, #19
 8003762:	f105 0010 	add.w	r0, r5, #16
 8003766:	f000 f809 	bl	800377c <core_set_error>
 800376a:	e6e8      	b.n	800353e <ai_platform_network_process+0x2da>

0800376c <core_init>:
 800376c:	2001      	movs	r0, #1
 800376e:	4770      	bx	lr

08003770 <core_get_error>:
 8003770:	4603      	mov	r3, r0
 8003772:	2200      	movs	r2, #0
 8003774:	6800      	ldr	r0, [r0, #0]
 8003776:	601a      	str	r2, [r3, #0]
 8003778:	4770      	bx	lr
 800377a:	bf00      	nop

0800377c <core_set_error>:
 800377c:	4603      	mov	r3, r0
 800377e:	7800      	ldrb	r0, [r0, #0]
 8003780:	b108      	cbz	r0, 8003786 <core_set_error+0xa>
 8003782:	2000      	movs	r0, #0
 8003784:	4770      	bx	lr
 8003786:	7019      	strb	r1, [r3, #0]
 8003788:	6819      	ldr	r1, [r3, #0]
 800378a:	f362 211f 	bfi	r1, r2, #8, #24
 800378e:	2001      	movs	r0, #1
 8003790:	6019      	str	r1, [r3, #0]
 8003792:	4770      	bx	lr

08003794 <ai_check_custom_types>:
 8003794:	b082      	sub	sp, #8
 8003796:	4b13      	ldr	r3, [pc, #76]	; (80037e4 <ai_check_custom_types+0x50>)
 8003798:	9301      	str	r3, [sp, #4]
 800379a:	b118      	cbz	r0, 80037a4 <ai_check_custom_types+0x10>
 800379c:	7803      	ldrb	r3, [r0, #0]
 800379e:	2b03      	cmp	r3, #3
 80037a0:	d002      	beq.n	80037a8 <ai_check_custom_types+0x14>
 80037a2:	2000      	movs	r0, #0
 80037a4:	b002      	add	sp, #8
 80037a6:	4770      	bx	lr
 80037a8:	f89d 2004 	ldrb.w	r2, [sp, #4]
 80037ac:	4293      	cmp	r3, r2
 80037ae:	d004      	beq.n	80037ba <ai_check_custom_types+0x26>
 80037b0:	2001      	movs	r0, #1
 80037b2:	f080 0001 	eor.w	r0, r0, #1
 80037b6:	b002      	add	sp, #8
 80037b8:	4770      	bx	lr
 80037ba:	7842      	ldrb	r2, [r0, #1]
 80037bc:	f89d 3005 	ldrb.w	r3, [sp, #5]
 80037c0:	429a      	cmp	r2, r3
 80037c2:	f100 0001 	add.w	r0, r0, #1
 80037c6:	d1f3      	bne.n	80037b0 <ai_check_custom_types+0x1c>
 80037c8:	f810 2f01 	ldrb.w	r2, [r0, #1]!
 80037cc:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80037d0:	429a      	cmp	r2, r3
 80037d2:	d1ed      	bne.n	80037b0 <ai_check_custom_types+0x1c>
 80037d4:	7842      	ldrb	r2, [r0, #1]
 80037d6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80037da:	429a      	cmp	r2, r3
 80037dc:	d1e8      	bne.n	80037b0 <ai_check_custom_types+0x1c>
 80037de:	2000      	movs	r0, #0
 80037e0:	e7e7      	b.n	80037b2 <ai_check_custom_types+0x1e>
 80037e2:	bf00      	nop
 80037e4:	84048403 	.word	0x84048403

080037e8 <ai_layers_init_all>:
 80037e8:	4601      	mov	r1, r0
 80037ea:	2000      	movs	r0, #0
 80037ec:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80037ee:	b143      	cbz	r3, 8003802 <ai_layers_init_all+0x1a>
 80037f0:	691a      	ldr	r2, [r3, #16]
 80037f2:	60d9      	str	r1, [r3, #12]
 80037f4:	429a      	cmp	r2, r3
 80037f6:	f100 0001 	add.w	r0, r0, #1
 80037fa:	d002      	beq.n	8003802 <ai_layers_init_all+0x1a>
 80037fc:	b10a      	cbz	r2, 8003802 <ai_layers_init_all+0x1a>
 80037fe:	4613      	mov	r3, r2
 8003800:	e7f5      	b.n	80037ee <ai_layers_init_all+0x6>
 8003802:	4770      	bx	lr

08003804 <ai_layers_post_init_all>:
 8003804:	b538      	push	{r3, r4, r5, lr}
 8003806:	6b44      	ldr	r4, [r0, #52]	; 0x34
 8003808:	2500      	movs	r5, #0
 800380a:	b16c      	cbz	r4, 8003828 <ai_layers_post_init_all+0x24>
 800380c:	6863      	ldr	r3, [r4, #4]
 800380e:	07db      	lsls	r3, r3, #31
 8003810:	d504      	bpl.n	800381c <ai_layers_post_init_all+0x18>
 8003812:	6a23      	ldr	r3, [r4, #32]
 8003814:	4620      	mov	r0, r4
 8003816:	b10b      	cbz	r3, 800381c <ai_layers_post_init_all+0x18>
 8003818:	4798      	blx	r3
 800381a:	3501      	adds	r5, #1
 800381c:	6923      	ldr	r3, [r4, #16]
 800381e:	42a3      	cmp	r3, r4
 8003820:	d002      	beq.n	8003828 <ai_layers_post_init_all+0x24>
 8003822:	b10b      	cbz	r3, 8003828 <ai_layers_post_init_all+0x24>
 8003824:	461c      	mov	r4, r3
 8003826:	e7f0      	b.n	800380a <ai_layers_post_init_all+0x6>
 8003828:	4628      	mov	r0, r5
 800382a:	bd38      	pop	{r3, r4, r5, pc}

0800382c <ai_layers_forward_all>:
 800382c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003830:	f8d0 803c 	ldr.w	r8, [r0, #60]	; 0x3c
 8003834:	4604      	mov	r4, r0
 8003836:	f1b8 0f00 	cmp.w	r8, #0
 800383a:	d02b      	beq.n	8003894 <ai_layers_forward_all+0x68>
 800383c:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800383e:	6381      	str	r1, [r0, #56]	; 0x38
 8003840:	b321      	cbz	r1, 800388c <ai_layers_forward_all+0x60>
 8003842:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8003844:	2001      	movs	r0, #1
 8003846:	47c0      	blx	r8
 8003848:	6ba6      	ldr	r6, [r4, #56]	; 0x38
 800384a:	b1fe      	cbz	r6, 800388c <ai_layers_forward_all+0x60>
 800384c:	2700      	movs	r7, #0
 800384e:	4631      	mov	r1, r6
 8003850:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003852:	2002      	movs	r0, #2
 8003854:	47c0      	blx	r8
 8003856:	6ba5      	ldr	r5, [r4, #56]	; 0x38
 8003858:	4628      	mov	r0, r5
 800385a:	696b      	ldr	r3, [r5, #20]
 800385c:	4798      	blx	r3
 800385e:	692e      	ldr	r6, [r5, #16]
 8003860:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003862:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8003864:	42b5      	cmp	r5, r6
 8003866:	f04f 0003 	mov.w	r0, #3
 800386a:	d007      	beq.n	800387c <ai_layers_forward_all+0x50>
 800386c:	47c0      	blx	r8
 800386e:	3701      	adds	r7, #1
 8003870:	63a6      	str	r6, [r4, #56]	; 0x38
 8003872:	2e00      	cmp	r6, #0
 8003874:	d1eb      	bne.n	800384e <ai_layers_forward_all+0x22>
 8003876:	4638      	mov	r0, r7
 8003878:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800387c:	2003      	movs	r0, #3
 800387e:	47c0      	blx	r8
 8003880:	2300      	movs	r3, #0
 8003882:	3701      	adds	r7, #1
 8003884:	63a3      	str	r3, [r4, #56]	; 0x38
 8003886:	4638      	mov	r0, r7
 8003888:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800388c:	2700      	movs	r7, #0
 800388e:	4638      	mov	r0, r7
 8003890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003894:	6b45      	ldr	r5, [r0, #52]	; 0x34
 8003896:	6385      	str	r5, [r0, #56]	; 0x38
 8003898:	2d00      	cmp	r5, #0
 800389a:	d0f7      	beq.n	800388c <ai_layers_forward_all+0x60>
 800389c:	4647      	mov	r7, r8
 800389e:	696b      	ldr	r3, [r5, #20]
 80038a0:	4628      	mov	r0, r5
 80038a2:	4798      	blx	r3
 80038a4:	462b      	mov	r3, r5
 80038a6:	692d      	ldr	r5, [r5, #16]
 80038a8:	429d      	cmp	r5, r3
 80038aa:	d004      	beq.n	80038b6 <ai_layers_forward_all+0x8a>
 80038ac:	63a5      	str	r5, [r4, #56]	; 0x38
 80038ae:	3701      	adds	r7, #1
 80038b0:	2d00      	cmp	r5, #0
 80038b2:	d1f4      	bne.n	800389e <ai_layers_forward_all+0x72>
 80038b4:	e7df      	b.n	8003876 <ai_layers_forward_all+0x4a>
 80038b6:	2300      	movs	r3, #0
 80038b8:	63a3      	str	r3, [r4, #56]	; 0x38
 80038ba:	3701      	adds	r7, #1
 80038bc:	e7db      	b.n	8003876 <ai_layers_forward_all+0x4a>
 80038be:	bf00      	nop

080038c0 <ai_layers_destroy_all>:
 80038c0:	b538      	push	{r3, r4, r5, lr}
 80038c2:	6b44      	ldr	r4, [r0, #52]	; 0x34
 80038c4:	2500      	movs	r5, #0
 80038c6:	b16c      	cbz	r4, 80038e4 <ai_layers_destroy_all+0x24>
 80038c8:	6863      	ldr	r3, [r4, #4]
 80038ca:	075b      	lsls	r3, r3, #29
 80038cc:	d504      	bpl.n	80038d8 <ai_layers_destroy_all+0x18>
 80038ce:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80038d0:	4620      	mov	r0, r4
 80038d2:	b10b      	cbz	r3, 80038d8 <ai_layers_destroy_all+0x18>
 80038d4:	4798      	blx	r3
 80038d6:	3501      	adds	r5, #1
 80038d8:	6923      	ldr	r3, [r4, #16]
 80038da:	42a3      	cmp	r3, r4
 80038dc:	d002      	beq.n	80038e4 <ai_layers_destroy_all+0x24>
 80038de:	b10b      	cbz	r3, 80038e4 <ai_layers_destroy_all+0x24>
 80038e0:	461c      	mov	r4, r3
 80038e2:	e7f0      	b.n	80038c6 <ai_layers_destroy_all+0x6>
 80038e4:	4628      	mov	r0, r5
 80038e6:	bd38      	pop	{r3, r4, r5, pc}

080038e8 <forward_dense>:
 80038e8:	6983      	ldr	r3, [r0, #24]
 80038ea:	881a      	ldrh	r2, [r3, #0]
 80038ec:	2a00      	cmp	r2, #0
 80038ee:	f000 8181 	beq.w	8003bf4 <forward_dense+0x30c>
 80038f2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038f6:	ed2d 8b02 	vpush	{d8}
 80038fa:	f8d3 c004 	ldr.w	ip, [r3, #4]
 80038fe:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8003902:	b095      	sub	sp, #84	; 0x54
 8003904:	b105      	cbz	r5, 8003908 <forward_dense+0x20>
 8003906:	682d      	ldr	r5, [r5, #0]
 8003908:	2a01      	cmp	r2, #1
 800390a:	f000 828f 	beq.w	8003e2c <forward_dense+0x544>
 800390e:	f8dc 6010 	ldr.w	r6, [ip, #16]
 8003912:	b106      	cbz	r6, 8003916 <forward_dense+0x2e>
 8003914:	6836      	ldr	r6, [r6, #0]
 8003916:	2a02      	cmp	r2, #2
 8003918:	f000 816e 	beq.w	8003bf8 <forward_dense+0x310>
 800391c:	f8dc 301c 	ldr.w	r3, [ip, #28]
 8003920:	930b      	str	r3, [sp, #44]	; 0x2c
 8003922:	2b00      	cmp	r3, #0
 8003924:	f000 8274 	beq.w	8003e10 <forward_dense+0x528>
 8003928:	4619      	mov	r1, r3
 800392a:	f8bc 3018 	ldrh.w	r3, [ip, #24]
 800392e:	6809      	ldr	r1, [r1, #0]
 8003930:	910d      	str	r1, [sp, #52]	; 0x34
 8003932:	2b01      	cmp	r3, #1
 8003934:	f240 826e 	bls.w	8003e14 <forward_dense+0x52c>
 8003938:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800393a:	685b      	ldr	r3, [r3, #4]
 800393c:	930b      	str	r3, [sp, #44]	; 0x2c
 800393e:	460b      	mov	r3, r1
 8003940:	68e8      	ldr	r0, [r5, #12]
 8003942:	68f7      	ldr	r7, [r6, #12]
 8003944:	6840      	ldr	r0, [r0, #4]
 8003946:	6999      	ldr	r1, [r3, #24]
 8003948:	9013      	str	r0, [sp, #76]	; 0x4c
 800394a:	6878      	ldr	r0, [r7, #4]
 800394c:	680b      	ldr	r3, [r1, #0]
 800394e:	9012      	str	r0, [sp, #72]	; 0x48
 8003950:	e9d7 4702 	ldrd	r4, r7, [r7, #8]
 8003954:	f3c3 1ec6 	ubfx	lr, r3, #7, #7
 8003958:	fb00 f404 	mul.w	r4, r0, r4
 800395c:	f3c3 5041 	ubfx	r0, r3, #21, #2
 8003960:	fa4e f000 	asr.w	r0, lr, r0
 8003964:	2a03      	cmp	r2, #3
 8003966:	9010      	str	r0, [sp, #64]	; 0x40
 8003968:	f000 825d 	beq.w	8003e26 <forward_dense+0x53e>
 800396c:	f8dc 2028 	ldr.w	r2, [ip, #40]	; 0x28
 8003970:	f3c3 4343 	ubfx	r3, r3, #17, #4
 8003974:	2a00      	cmp	r2, #0
 8003976:	f000 8246 	beq.w	8003e06 <forward_dense+0x51e>
 800397a:	6812      	ldr	r2, [r2, #0]
 800397c:	2a00      	cmp	r2, #0
 800397e:	f000 8242 	beq.w	8003e06 <forward_dense+0x51e>
 8003982:	2b04      	cmp	r3, #4
 8003984:	f8d2 9018 	ldr.w	r9, [r2, #24]
 8003988:	f000 822c 	beq.w	8003de4 <forward_dense+0x4fc>
 800398c:	2b08      	cmp	r3, #8
 800398e:	f000 8229 	beq.w	8003de4 <forward_dense+0x4fc>
 8003992:	f04f 0b00 	mov.w	fp, #0
 8003996:	69b2      	ldr	r2, [r6, #24]
 8003998:	69ab      	ldr	r3, [r5, #24]
 800399a:	6891      	ldr	r1, [r2, #8]
 800399c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800399e:	689b      	ldr	r3, [r3, #8]
 80039a0:	6952      	ldr	r2, [r2, #20]
 80039a2:	9106      	str	r1, [sp, #24]
 80039a4:	fb07 f404 	mul.w	r4, r7, r4
 80039a8:	f8d2 9004 	ldr.w	r9, [r2, #4]
 80039ac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80039ae:	eb01 0084 	add.w	r0, r1, r4, lsl #2
 80039b2:	4281      	cmp	r1, r0
 80039b4:	ea4f 0482 	mov.w	r4, r2, lsl #2
 80039b8:	900e      	str	r0, [sp, #56]	; 0x38
 80039ba:	940c      	str	r4, [sp, #48]	; 0x30
 80039bc:	eb01 0882 	add.w	r8, r1, r2, lsl #2
 80039c0:	f080 8113 	bcs.w	8003bea <forward_dense+0x302>
 80039c4:	9913      	ldr	r1, [sp, #76]	; 0x4c
 80039c6:	ed9f 8a93 	vldr	s16, [pc, #588]	; 8003c14 <forward_dense+0x32c>
 80039ca:	f021 0201 	bic.w	r2, r1, #1
 80039ce:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 80039d2:	9204      	str	r2, [sp, #16]
 80039d4:	f001 0201 	and.w	r2, r1, #1
 80039d8:	08c8      	lsrs	r0, r1, #3
 80039da:	9208      	str	r2, [sp, #32]
 80039dc:	008a      	lsls	r2, r1, #2
 80039de:	f001 0a07 	and.w	sl, r1, #7
 80039e2:	920f      	str	r2, [sp, #60]	; 0x3c
 80039e4:	eb03 1240 	add.w	r2, r3, r0, lsl #5
 80039e8:	3320      	adds	r3, #32
 80039ea:	465c      	mov	r4, fp
 80039ec:	9007      	str	r0, [sp, #28]
 80039ee:	46cb      	mov	fp, r9
 80039f0:	9205      	str	r2, [sp, #20]
 80039f2:	9302      	str	r3, [sp, #8]
 80039f4:	46c1      	mov	r9, r8
 80039f6:	f8cd a044 	str.w	sl, [sp, #68]	; 0x44
 80039fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80039fc:	699b      	ldr	r3, [r3, #24]
 80039fe:	689a      	ldr	r2, [r3, #8]
 8003a00:	9b02      	ldr	r3, [sp, #8]
 8003a02:	3b20      	subs	r3, #32
 8003a04:	930a      	str	r3, [sp, #40]	; 0x28
 8003a06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003a08:	b10b      	cbz	r3, 8003a0e <forward_dense+0x126>
 8003a0a:	699b      	ldr	r3, [r3, #24]
 8003a0c:	689b      	ldr	r3, [r3, #8]
 8003a0e:	2c00      	cmp	r4, #0
 8003a10:	f000 81da 	beq.w	8003dc8 <forward_dense+0x4e0>
 8003a14:	9910      	ldr	r1, [sp, #64]	; 0x40
 8003a16:	2904      	cmp	r1, #4
 8003a18:	9906      	ldr	r1, [sp, #24]
 8003a1a:	f000 80fd 	beq.w	8003c18 <forward_dense+0x330>
 8003a1e:	4549      	cmp	r1, r9
 8003a20:	f080 80d2 	bcs.w	8003bc8 <forward_dense+0x2e0>
 8003a24:	460f      	mov	r7, r1
 8003a26:	9907      	ldr	r1, [sp, #28]
 8003a28:	f8dd 8008 	ldr.w	r8, [sp, #8]
 8003a2c:	f8dd a014 	ldr.w	sl, [sp, #20]
 8003a30:	1c4e      	adds	r6, r1, #1
 8003a32:	eb02 06c6 	add.w	r6, r2, r6, lsl #3
 8003a36:	4694      	mov	ip, r2
 8003a38:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8003a3a:	468e      	mov	lr, r1
 8003a3c:	2b00      	cmp	r3, #0
 8003a3e:	f000 80de 	beq.w	8003bfe <forward_dense+0x316>
 8003a42:	ecf3 2a01 	vldmia	r3!, {s5}
 8003a46:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8003c14 <forward_dense+0x32c>
 8003a4a:	f1be 0f00 	cmp.w	lr, #0
 8003a4e:	f000 80de 	beq.w	8003c0e <forward_dense+0x326>
 8003a52:	f10c 0108 	add.w	r1, ip, #8
 8003a56:	4640      	mov	r0, r8
 8003a58:	f811 5c07 	ldrb.w	r5, [r1, #-7]
 8003a5c:	ed10 3a07 	vldr	s6, [r0, #-28]	; 0xffffffe4
 8003a60:	ed50 3a08 	vldr	s7, [r0, #-32]	; 0xffffffe0
 8003a64:	ed10 4a06 	vldr	s8, [r0, #-24]	; 0xffffffe8
 8003a68:	ed50 4a05 	vldr	s9, [r0, #-20]	; 0xffffffec
 8003a6c:	ed10 5a04 	vldr	s10, [r0, #-16]
 8003a70:	ed50 5a03 	vldr	s11, [r0, #-12]
 8003a74:	ed10 6a02 	vldr	s12, [r0, #-8]
 8003a78:	ed50 6a01 	vldr	s13, [r0, #-4]
 8003a7c:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003a80:	edd5 7a00 	vldr	s15, [r5]
 8003a84:	f811 5c08 	ldrb.w	r5, [r1, #-8]
 8003a88:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003a8c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8003a90:	ed95 3a00 	vldr	s6, [r5]
 8003a94:	f811 5c06 	ldrb.w	r5, [r1, #-6]
 8003a98:	eee3 7a23 	vfma.f32	s15, s6, s7
 8003a9c:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003aa0:	3108      	adds	r1, #8
 8003aa2:	edd5 3a00 	vldr	s7, [r5]
 8003aa6:	f811 5c0d 	ldrb.w	r5, [r1, #-13]
 8003aaa:	eee3 7a84 	vfma.f32	s15, s7, s8
 8003aae:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003ab2:	3020      	adds	r0, #32
 8003ab4:	ed95 4a00 	vldr	s8, [r5]
 8003ab8:	f811 5c0c 	ldrb.w	r5, [r1, #-12]
 8003abc:	eee4 7a24 	vfma.f32	s15, s8, s9
 8003ac0:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003ac4:	edd5 4a00 	vldr	s9, [r5]
 8003ac8:	f811 5c0b 	ldrb.w	r5, [r1, #-11]
 8003acc:	eee4 7a85 	vfma.f32	s15, s9, s10
 8003ad0:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003ad4:	ed95 5a00 	vldr	s10, [r5]
 8003ad8:	f811 5c0a 	ldrb.w	r5, [r1, #-10]
 8003adc:	eee5 7a25 	vfma.f32	s15, s10, s11
 8003ae0:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003ae4:	edd5 5a00 	vldr	s11, [r5]
 8003ae8:	f811 5c09 	ldrb.w	r5, [r1, #-9]
 8003aec:	eee5 7a86 	vfma.f32	s15, s11, s12
 8003af0:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003af4:	428e      	cmp	r6, r1
 8003af6:	ed95 6a00 	vldr	s12, [r5]
 8003afa:	eee6 7a26 	vfma.f32	s15, s12, s13
 8003afe:	ee37 7a27 	vadd.f32	s14, s14, s15
 8003b02:	d1a9      	bne.n	8003a58 <forward_dense+0x170>
 8003b04:	f1a6 0108 	sub.w	r1, r6, #8
 8003b08:	4650      	mov	r0, sl
 8003b0a:	2a00      	cmp	r2, #0
 8003b0c:	d04a      	beq.n	8003ba4 <forward_dense+0x2bc>
 8003b0e:	780d      	ldrb	r5, [r1, #0]
 8003b10:	edd0 6a00 	vldr	s13, [r0]
 8003b14:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003b18:	edd5 7a00 	vldr	s15, [r5]
 8003b1c:	2a01      	cmp	r2, #1
 8003b1e:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003b22:	d03f      	beq.n	8003ba4 <forward_dense+0x2bc>
 8003b24:	784d      	ldrb	r5, [r1, #1]
 8003b26:	edd0 6a01 	vldr	s13, [r0, #4]
 8003b2a:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003b2e:	edd5 7a00 	vldr	s15, [r5]
 8003b32:	2a02      	cmp	r2, #2
 8003b34:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003b38:	d034      	beq.n	8003ba4 <forward_dense+0x2bc>
 8003b3a:	788d      	ldrb	r5, [r1, #2]
 8003b3c:	edd0 6a02 	vldr	s13, [r0, #8]
 8003b40:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003b44:	edd5 7a00 	vldr	s15, [r5]
 8003b48:	2a03      	cmp	r2, #3
 8003b4a:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003b4e:	d029      	beq.n	8003ba4 <forward_dense+0x2bc>
 8003b50:	78cd      	ldrb	r5, [r1, #3]
 8003b52:	edd0 6a03 	vldr	s13, [r0, #12]
 8003b56:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003b5a:	edd5 7a00 	vldr	s15, [r5]
 8003b5e:	2a04      	cmp	r2, #4
 8003b60:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003b64:	d01e      	beq.n	8003ba4 <forward_dense+0x2bc>
 8003b66:	790d      	ldrb	r5, [r1, #4]
 8003b68:	edd0 6a04 	vldr	s13, [r0, #16]
 8003b6c:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003b70:	edd5 7a00 	vldr	s15, [r5]
 8003b74:	2a05      	cmp	r2, #5
 8003b76:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003b7a:	d013      	beq.n	8003ba4 <forward_dense+0x2bc>
 8003b7c:	794d      	ldrb	r5, [r1, #5]
 8003b7e:	edd0 6a05 	vldr	s13, [r0, #20]
 8003b82:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003b86:	edd5 7a00 	vldr	s15, [r5]
 8003b8a:	2a06      	cmp	r2, #6
 8003b8c:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003b90:	d008      	beq.n	8003ba4 <forward_dense+0x2bc>
 8003b92:	7989      	ldrb	r1, [r1, #6]
 8003b94:	edd0 7a06 	vldr	s15, [r0, #24]
 8003b98:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8003b9c:	edd1 6a00 	vldr	s13, [r1]
 8003ba0:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003ba4:	44dc      	add	ip, fp
 8003ba6:	445e      	add	r6, fp
 8003ba8:	ee32 7a87 	vadd.f32	s14, s5, s14
 8003bac:	eca7 7a01 	vstmia	r7!, {s14}
 8003bb0:	454f      	cmp	r7, r9
 8003bb2:	f4ff af43 	bcc.w	8003a3c <forward_dense+0x154>
 8003bb6:	9a06      	ldr	r2, [sp, #24]
 8003bb8:	eba9 0302 	sub.w	r3, r9, r2
 8003bbc:	3b01      	subs	r3, #1
 8003bbe:	f023 0303 	bic.w	r3, r3, #3
 8003bc2:	3304      	adds	r3, #4
 8003bc4:	18d3      	adds	r3, r2, r3
 8003bc6:	9306      	str	r3, [sp, #24]
 8003bc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003bca:	9a05      	ldr	r2, [sp, #20]
 8003bcc:	4499      	add	r9, r3
 8003bce:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003bd0:	441a      	add	r2, r3
 8003bd2:	9205      	str	r2, [sp, #20]
 8003bd4:	9a02      	ldr	r2, [sp, #8]
 8003bd6:	441a      	add	r2, r3
 8003bd8:	9202      	str	r2, [sp, #8]
 8003bda:	9a04      	ldr	r2, [sp, #16]
 8003bdc:	441a      	add	r2, r3
 8003bde:	9204      	str	r2, [sp, #16]
 8003be0:	9b06      	ldr	r3, [sp, #24]
 8003be2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003be4:	4293      	cmp	r3, r2
 8003be6:	f4ff af08 	bcc.w	80039fa <forward_dense+0x112>
 8003bea:	b015      	add	sp, #84	; 0x54
 8003bec:	ecbd 8b02 	vpop	{d8}
 8003bf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003bf4:	6853      	ldr	r3, [r2, #4]
 8003bf6:	deff      	udf	#255	; 0xff
 8003bf8:	2300      	movs	r3, #0
 8003bfa:	685b      	ldr	r3, [r3, #4]
 8003bfc:	deff      	udf	#255	; 0xff
 8003bfe:	ed9f 7a05 	vldr	s14, [pc, #20]	; 8003c14 <forward_dense+0x32c>
 8003c02:	eef0 2a48 	vmov.f32	s5, s16
 8003c06:	f1be 0f00 	cmp.w	lr, #0
 8003c0a:	f47f af22 	bne.w	8003a52 <forward_dense+0x16a>
 8003c0e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003c10:	4661      	mov	r1, ip
 8003c12:	e77a      	b.n	8003b0a <forward_dense+0x222>
 8003c14:	00000000 	.word	0x00000000
 8003c18:	4549      	cmp	r1, r9
 8003c1a:	d2d5      	bcs.n	8003bc8 <forward_dense+0x2e0>
 8003c1c:	9807      	ldr	r0, [sp, #28]
 8003c1e:	9103      	str	r1, [sp, #12]
 8003c20:	9904      	ldr	r1, [sp, #16]
 8003c22:	f100 0c01 	add.w	ip, r0, #1
 8003c26:	3901      	subs	r1, #1
 8003c28:	eb02 0c8c 	add.w	ip, r2, ip, lsl #2
 8003c2c:	9109      	str	r1, [sp, #36]	; 0x24
 8003c2e:	2b00      	cmp	r3, #0
 8003c30:	f000 80b2 	beq.w	8003d98 <forward_dense+0x4b0>
 8003c34:	9907      	ldr	r1, [sp, #28]
 8003c36:	ecf3 2a01 	vldmia	r3!, {s5}
 8003c3a:	ed1f 7a0a 	vldr	s14, [pc, #-40]	; 8003c14 <forward_dense+0x32c>
 8003c3e:	2900      	cmp	r1, #0
 8003c40:	f000 80b2 	beq.w	8003da8 <forward_dense+0x4c0>
 8003c44:	9902      	ldr	r1, [sp, #8]
 8003c46:	1d10      	adds	r0, r2, #4
 8003c48:	f810 6c04 	ldrb.w	r6, [r0, #-4]
 8003c4c:	ed11 2a07 	vldr	s4, [r1, #-28]	; 0xffffffe4
 8003c50:	f810 5c03 	ldrb.w	r5, [r0, #-3]
 8003c54:	ed51 3a08 	vldr	s7, [r1, #-32]	; 0xffffffe0
 8003c58:	ed11 4a06 	vldr	s8, [r1, #-24]	; 0xffffffe8
 8003c5c:	ed51 4a05 	vldr	s9, [r1, #-20]	; 0xffffffec
 8003c60:	ed11 5a04 	vldr	s10, [r1, #-16]
 8003c64:	ed51 5a03 	vldr	s11, [r1, #-12]
 8003c68:	ed11 6a02 	vldr	s12, [r1, #-8]
 8003c6c:	ed51 6a01 	vldr	s13, [r1, #-4]
 8003c70:	f006 070f 	and.w	r7, r6, #15
 8003c74:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 8003c78:	edd7 7a00 	vldr	s15, [r7]
 8003c7c:	0936      	lsrs	r6, r6, #4
 8003c7e:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8003c82:	ed96 3a00 	vldr	s6, [r6]
 8003c86:	ee67 7a82 	vmul.f32	s15, s15, s4
 8003c8a:	092e      	lsrs	r6, r5, #4
 8003c8c:	eee3 7a23 	vfma.f32	s15, s6, s7
 8003c90:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8003c94:	f005 050f 	and.w	r5, r5, #15
 8003c98:	edd6 3a00 	vldr	s7, [r6]
 8003c9c:	f810 6c02 	ldrb.w	r6, [r0, #-2]
 8003ca0:	eee3 7a84 	vfma.f32	s15, s7, s8
 8003ca4:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003ca8:	0937      	lsrs	r7, r6, #4
 8003caa:	ed95 4a00 	vldr	s8, [r5]
 8003cae:	f810 5c01 	ldrb.w	r5, [r0, #-1]
 8003cb2:	eee4 7a24 	vfma.f32	s15, s8, s9
 8003cb6:	eb04 0787 	add.w	r7, r4, r7, lsl #2
 8003cba:	f006 060f 	and.w	r6, r6, #15
 8003cbe:	edd7 4a00 	vldr	s9, [r7]
 8003cc2:	eee4 7a85 	vfma.f32	s15, s9, s10
 8003cc6:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8003cca:	3004      	adds	r0, #4
 8003ccc:	ed96 5a00 	vldr	s10, [r6]
 8003cd0:	092e      	lsrs	r6, r5, #4
 8003cd2:	eee5 7a25 	vfma.f32	s15, s10, s11
 8003cd6:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8003cda:	f005 050f 	and.w	r5, r5, #15
 8003cde:	edd6 5a00 	vldr	s11, [r6]
 8003ce2:	eee5 7a86 	vfma.f32	s15, s11, s12
 8003ce6:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003cea:	4584      	cmp	ip, r0
 8003cec:	ed95 6a00 	vldr	s12, [r5]
 8003cf0:	eee6 7a26 	vfma.f32	s15, s12, s13
 8003cf4:	f101 0120 	add.w	r1, r1, #32
 8003cf8:	ee37 7a27 	vadd.f32	s14, s14, s15
 8003cfc:	d1a4      	bne.n	8003c48 <forward_dense+0x360>
 8003cfe:	f8dd e014 	ldr.w	lr, [sp, #20]
 8003d02:	f1ac 0804 	sub.w	r8, ip, #4
 8003d06:	9904      	ldr	r1, [sp, #16]
 8003d08:	458e      	cmp	lr, r1
 8003d0a:	d22a      	bcs.n	8003d62 <forward_dense+0x47a>
 8003d0c:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003d0e:	eba1 070e 	sub.w	r7, r1, lr
 8003d12:	ea4f 0ad7 	mov.w	sl, r7, lsr #3
 8003d16:	f10e 0008 	add.w	r0, lr, #8
 8003d1a:	f108 36ff 	add.w	r6, r8, #4294967295
 8003d1e:	eb08 07d7 	add.w	r7, r8, r7, lsr #3
 8003d22:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8003d26:	ed50 5a01 	vldr	s11, [r0, #-4]
 8003d2a:	ed50 6a02 	vldr	s13, [r0, #-8]
 8003d2e:	f001 050f 	and.w	r5, r1, #15
 8003d32:	eb04 0585 	add.w	r5, r4, r5, lsl #2
 8003d36:	edd5 7a00 	vldr	s15, [r5]
 8003d3a:	0909      	lsrs	r1, r1, #4
 8003d3c:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8003d40:	ed91 6a00 	vldr	s12, [r1]
 8003d44:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8003d48:	42b7      	cmp	r7, r6
 8003d4a:	eee6 7a26 	vfma.f32	s15, s12, s13
 8003d4e:	f100 0008 	add.w	r0, r0, #8
 8003d52:	ee37 7a27 	vadd.f32	s14, s14, s15
 8003d56:	d1e4      	bne.n	8003d22 <forward_dense+0x43a>
 8003d58:	f10a 0a01 	add.w	sl, sl, #1
 8003d5c:	44d0      	add	r8, sl
 8003d5e:	eb0e 0eca 	add.w	lr, lr, sl, lsl #3
 8003d62:	9908      	ldr	r1, [sp, #32]
 8003d64:	b321      	cbz	r1, 8003db0 <forward_dense+0x4c8>
 8003d66:	f898 1000 	ldrb.w	r1, [r8]
 8003d6a:	edde 7a00 	vldr	s15, [lr]
 8003d6e:	0909      	lsrs	r1, r1, #4
 8003d70:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8003d74:	edd1 6a00 	vldr	s13, [r1]
 8003d78:	9903      	ldr	r1, [sp, #12]
 8003d7a:	eea6 7aa7 	vfma.f32	s14, s13, s15
 8003d7e:	445a      	add	r2, fp
 8003d80:	44dc      	add	ip, fp
 8003d82:	ee72 2a87 	vadd.f32	s5, s5, s14
 8003d86:	ece1 2a01 	vstmia	r1!, {s5}
 8003d8a:	4589      	cmp	r9, r1
 8003d8c:	9103      	str	r1, [sp, #12]
 8003d8e:	f67f af12 	bls.w	8003bb6 <forward_dense+0x2ce>
 8003d92:	2b00      	cmp	r3, #0
 8003d94:	f47f af4e 	bne.w	8003c34 <forward_dense+0x34c>
 8003d98:	9907      	ldr	r1, [sp, #28]
 8003d9a:	ed1f 7a62 	vldr	s14, [pc, #-392]	; 8003c14 <forward_dense+0x32c>
 8003d9e:	eef0 2a48 	vmov.f32	s5, s16
 8003da2:	2900      	cmp	r1, #0
 8003da4:	f47f af4e 	bne.w	8003c44 <forward_dense+0x35c>
 8003da8:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 8003dac:	4690      	mov	r8, r2
 8003dae:	e7aa      	b.n	8003d06 <forward_dense+0x41e>
 8003db0:	9903      	ldr	r1, [sp, #12]
 8003db2:	ee32 7a87 	vadd.f32	s14, s5, s14
 8003db6:	445a      	add	r2, fp
 8003db8:	eca1 7a01 	vstmia	r1!, {s14}
 8003dbc:	4549      	cmp	r1, r9
 8003dbe:	9103      	str	r1, [sp, #12]
 8003dc0:	44dc      	add	ip, fp
 8003dc2:	f4ff af34 	bcc.w	8003c2e <forward_dense+0x346>
 8003dc6:	e6f6      	b.n	8003bb6 <forward_dense+0x2ce>
 8003dc8:	9912      	ldr	r1, [sp, #72]	; 0x48
 8003dca:	9d06      	ldr	r5, [sp, #24]
 8003dcc:	9101      	str	r1, [sp, #4]
 8003dce:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8003dd0:	9100      	str	r1, [sp, #0]
 8003dd2:	4628      	mov	r0, r5
 8003dd4:	990a      	ldr	r1, [sp, #40]	; 0x28
 8003dd6:	f000 f9ef 	bl	80041b8 <forward_lite_dense_if32of32wf32>
 8003dda:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003ddc:	462b      	mov	r3, r5
 8003dde:	4413      	add	r3, r2
 8003de0:	9306      	str	r3, [sp, #24]
 8003de2:	e6f1      	b.n	8003bc8 <forward_dense+0x2e0>
 8003de4:	f8d1 800c 	ldr.w	r8, [r1, #12]
 8003de8:	f1b9 0f00 	cmp.w	r9, #0
 8003dec:	d016      	beq.n	8003e1c <forward_dense+0x534>
 8003dee:	e9d9 0100 	ldrd	r0, r1, [r9]
 8003df2:	f000 fbf7 	bl	80045e4 <ai_array_get_byte_size>
 8003df6:	f8d9 b00c 	ldr.w	fp, [r9, #12]
 8003dfa:	4602      	mov	r2, r0
 8003dfc:	4659      	mov	r1, fp
 8003dfe:	4640      	mov	r0, r8
 8003e00:	f000 fafe 	bl	8004400 <st_int8_copy>
 8003e04:	e5c7      	b.n	8003996 <forward_dense+0xae>
 8003e06:	2b04      	cmp	r3, #4
 8003e08:	d00a      	beq.n	8003e20 <forward_dense+0x538>
 8003e0a:	f04f 0900 	mov.w	r9, #0
 8003e0e:	e5bd      	b.n	800398c <forward_dense+0xa4>
 8003e10:	930d      	str	r3, [sp, #52]	; 0x34
 8003e12:	e595      	b.n	8003940 <forward_dense+0x58>
 8003e14:	2300      	movs	r3, #0
 8003e16:	930b      	str	r3, [sp, #44]	; 0x2c
 8003e18:	460b      	mov	r3, r1
 8003e1a:	e591      	b.n	8003940 <forward_dense+0x58>
 8003e1c:	46c3      	mov	fp, r8
 8003e1e:	e5ba      	b.n	8003996 <forward_dense+0xae>
 8003e20:	f8d1 b00c 	ldr.w	fp, [r1, #12]
 8003e24:	e5b7      	b.n	8003996 <forward_dense+0xae>
 8003e26:	2300      	movs	r3, #0
 8003e28:	685b      	ldr	r3, [r3, #4]
 8003e2a:	deff      	udf	#255	; 0xff
 8003e2c:	2300      	movs	r3, #0
 8003e2e:	685b      	ldr	r3, [r3, #4]
 8003e30:	deff      	udf	#255	; 0xff
 8003e32:	bf00      	nop

08003e34 <forward_relu>:
 8003e34:	6982      	ldr	r2, [r0, #24]
 8003e36:	8813      	ldrh	r3, [r2, #0]
 8003e38:	2b00      	cmp	r3, #0
 8003e3a:	d05b      	beq.n	8003ef4 <forward_relu+0xc0>
 8003e3c:	6851      	ldr	r1, [r2, #4]
 8003e3e:	684a      	ldr	r2, [r1, #4]
 8003e40:	b102      	cbz	r2, 8003e44 <forward_relu+0x10>
 8003e42:	6812      	ldr	r2, [r2, #0]
 8003e44:	2b01      	cmp	r3, #1
 8003e46:	f000 8123 	beq.w	8004090 <forward_relu+0x25c>
 8003e4a:	b470      	push	{r4, r5, r6}
 8003e4c:	6909      	ldr	r1, [r1, #16]
 8003e4e:	b101      	cbz	r1, 8003e52 <forward_relu+0x1e>
 8003e50:	6809      	ldr	r1, [r1, #0]
 8003e52:	69c6      	ldr	r6, [r0, #28]
 8003e54:	2e00      	cmp	r6, #0
 8003e56:	f000 8097 	beq.w	8003f88 <forward_relu+0x154>
 8003e5a:	6873      	ldr	r3, [r6, #4]
 8003e5c:	6988      	ldr	r0, [r1, #24]
 8003e5e:	6991      	ldr	r1, [r2, #24]
 8003e60:	2b01      	cmp	r3, #1
 8003e62:	f000 80c1 	beq.w	8003fe8 <forward_relu+0x1b4>
 8003e66:	6893      	ldr	r3, [r2, #8]
 8003e68:	6880      	ldr	r0, [r0, #8]
 8003e6a:	688c      	ldr	r4, [r1, #8]
 8003e6c:	0a1b      	lsrs	r3, r3, #8
 8003e6e:	f000 80f2 	beq.w	8004056 <forward_relu+0x222>
 8003e72:	68d5      	ldr	r5, [r2, #12]
 8003e74:	2201      	movs	r2, #1
 8003e76:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8003e7a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8003e7e:	42ab      	cmp	r3, r5
 8003e80:	fb01 f202 	mul.w	r2, r1, r2
 8003e84:	d1f9      	bne.n	8003e7a <forward_relu+0x46>
 8003e86:	68b3      	ldr	r3, [r6, #8]
 8003e88:	ed93 7a02 	vldr	s14, [r3, #8]
 8003e8c:	edd3 6a00 	vldr	s13, [r3]
 8003e90:	ed93 6a01 	vldr	s12, [r3, #4]
 8003e94:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8003e98:	f102 4280 	add.w	r2, r2, #1073741824	; 0x40000000
 8003e9c:	3a01      	subs	r2, #1
 8003e9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ea2:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003ea6:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 8003eaa:	d425      	bmi.n	8003ef8 <forward_relu+0xc4>
 8003eac:	429c      	cmp	r4, r3
 8003eae:	d81f      	bhi.n	8003ef0 <forward_relu+0xbc>
 8003eb0:	1d1a      	adds	r2, r3, #4
 8003eb2:	1d01      	adds	r1, r0, #4
 8003eb4:	e00d      	b.n	8003ed2 <forward_relu+0x9e>
 8003eb6:	eef4 6ae7 	vcmpe.f32	s13, s15
 8003eba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ebe:	db03      	blt.n	8003ec8 <forward_relu+0x94>
 8003ec0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8003ec4:	ee67 7a86 	vmul.f32	s15, s15, s12
 8003ec8:	3b08      	subs	r3, #8
 8003eca:	429c      	cmp	r4, r3
 8003ecc:	ed61 7a01 	vstmdb	r1!, {s15}
 8003ed0:	d80e      	bhi.n	8003ef0 <forward_relu+0xbc>
 8003ed2:	4613      	mov	r3, r2
 8003ed4:	ed72 7a01 	vldmdb	r2!, {s15}
 8003ed8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003edc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ee0:	d9e9      	bls.n	8003eb6 <forward_relu+0x82>
 8003ee2:	3b08      	subs	r3, #8
 8003ee4:	eef0 7a47 	vmov.f32	s15, s14
 8003ee8:	429c      	cmp	r4, r3
 8003eea:	ed61 7a01 	vstmdb	r1!, {s15}
 8003eee:	d9f0      	bls.n	8003ed2 <forward_relu+0x9e>
 8003ef0:	bc70      	pop	{r4, r5, r6}
 8003ef2:	4770      	bx	lr
 8003ef4:	685b      	ldr	r3, [r3, #4]
 8003ef6:	deff      	udf	#255	; 0xff
 8003ef8:	eeb5 6a40 	vcmp.f32	s12, #0.0
 8003efc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003f00:	d11f      	bne.n	8003f42 <forward_relu+0x10e>
 8003f02:	429c      	cmp	r4, r3
 8003f04:	d8f4      	bhi.n	8003ef0 <forward_relu+0xbc>
 8003f06:	1b1c      	subs	r4, r3, r4
 8003f08:	f024 0403 	bic.w	r4, r4, #3
 8003f0c:	1d1a      	adds	r2, r3, #4
 8003f0e:	2500      	movs	r5, #0
 8003f10:	1b1b      	subs	r3, r3, r4
 8003f12:	1d01      	adds	r1, r0, #4
 8003f14:	ed72 7a01 	vldmdb	r2!, {s15}
 8003f18:	eef4 7ae6 	vcmpe.f32	s15, s13
 8003f1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003f20:	dc0a      	bgt.n	8003f38 <forward_relu+0x104>
 8003f22:	429a      	cmp	r2, r3
 8003f24:	f841 5d04 	str.w	r5, [r1, #-4]!
 8003f28:	d0e2      	beq.n	8003ef0 <forward_relu+0xbc>
 8003f2a:	ed72 7a01 	vldmdb	r2!, {s15}
 8003f2e:	eef4 7ae6 	vcmpe.f32	s15, s13
 8003f32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003f36:	ddf4      	ble.n	8003f22 <forward_relu+0xee>
 8003f38:	429a      	cmp	r2, r3
 8003f3a:	ed61 7a01 	vstmdb	r1!, {s15}
 8003f3e:	d1e9      	bne.n	8003f14 <forward_relu+0xe0>
 8003f40:	e7d6      	b.n	8003ef0 <forward_relu+0xbc>
 8003f42:	429c      	cmp	r4, r3
 8003f44:	d8d4      	bhi.n	8003ef0 <forward_relu+0xbc>
 8003f46:	1b1c      	subs	r4, r3, r4
 8003f48:	f024 0403 	bic.w	r4, r4, #3
 8003f4c:	1d1a      	adds	r2, r3, #4
 8003f4e:	1d01      	adds	r1, r0, #4
 8003f50:	1b1b      	subs	r3, r3, r4
 8003f52:	ed72 7a01 	vldmdb	r2!, {s15}
 8003f56:	eef4 6ae7 	vcmpe.f32	s13, s15
 8003f5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003f5e:	db0e      	blt.n	8003f7e <forward_relu+0x14a>
 8003f60:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8003f64:	4293      	cmp	r3, r2
 8003f66:	ee67 7a86 	vmul.f32	s15, s15, s12
 8003f6a:	ed61 7a01 	vstmdb	r1!, {s15}
 8003f6e:	d0bf      	beq.n	8003ef0 <forward_relu+0xbc>
 8003f70:	ed72 7a01 	vldmdb	r2!, {s15}
 8003f74:	eef4 6ae7 	vcmpe.f32	s13, s15
 8003f78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003f7c:	daf0      	bge.n	8003f60 <forward_relu+0x12c>
 8003f7e:	4293      	cmp	r3, r2
 8003f80:	ed61 7a01 	vstmdb	r1!, {s15}
 8003f84:	d1e5      	bne.n	8003f52 <forward_relu+0x11e>
 8003f86:	e7b3      	b.n	8003ef0 <forward_relu+0xbc>
 8003f88:	6893      	ldr	r3, [r2, #8]
 8003f8a:	6989      	ldr	r1, [r1, #24]
 8003f8c:	6990      	ldr	r0, [r2, #24]
 8003f8e:	6889      	ldr	r1, [r1, #8]
 8003f90:	6884      	ldr	r4, [r0, #8]
 8003f92:	0a1b      	lsrs	r3, r3, #8
 8003f94:	d075      	beq.n	8004082 <forward_relu+0x24e>
 8003f96:	68d5      	ldr	r5, [r2, #12]
 8003f98:	2201      	movs	r2, #1
 8003f9a:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8003f9e:	f853 0d04 	ldr.w	r0, [r3, #-4]!
 8003fa2:	429d      	cmp	r5, r3
 8003fa4:	fb00 f202 	mul.w	r2, r0, r2
 8003fa8:	d1f9      	bne.n	8003f9e <forward_relu+0x16a>
 8003faa:	f102 4380 	add.w	r3, r2, #1073741824	; 0x40000000
 8003fae:	3b01      	subs	r3, #1
 8003fb0:	eb04 0283 	add.w	r2, r4, r3, lsl #2
 8003fb4:	4294      	cmp	r4, r2
 8003fb6:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8003fba:	d899      	bhi.n	8003ef0 <forward_relu+0xbc>
 8003fbc:	ed9f 7a36 	vldr	s14, [pc, #216]	; 8004098 <forward_relu+0x264>
 8003fc0:	3204      	adds	r2, #4
 8003fc2:	3104      	adds	r1, #4
 8003fc4:	4613      	mov	r3, r2
 8003fc6:	ed72 7a01 	vldmdb	r2!, {s15}
 8003fca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003fce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003fd2:	f1a3 0308 	sub.w	r3, r3, #8
 8003fd6:	bfb8      	it	lt
 8003fd8:	eef0 7a47 	vmovlt.f32	s15, s14
 8003fdc:	429c      	cmp	r4, r3
 8003fde:	ed61 7a01 	vstmdb	r1!, {s15}
 8003fe2:	d9ef      	bls.n	8003fc4 <forward_relu+0x190>
 8003fe4:	bc70      	pop	{r4, r5, r6}
 8003fe6:	4770      	bx	lr
 8003fe8:	688c      	ldr	r4, [r1, #8]
 8003fea:	6891      	ldr	r1, [r2, #8]
 8003fec:	6880      	ldr	r0, [r0, #8]
 8003fee:	0a09      	lsrs	r1, r1, #8
 8003ff0:	d049      	beq.n	8004086 <forward_relu+0x252>
 8003ff2:	68d5      	ldr	r5, [r2, #12]
 8003ff4:	eb05 0281 	add.w	r2, r5, r1, lsl #2
 8003ff8:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8003ffc:	42aa      	cmp	r2, r5
 8003ffe:	fb01 f303 	mul.w	r3, r1, r3
 8004002:	d1f9      	bne.n	8003ff8 <forward_relu+0x1c4>
 8004004:	f103 4280 	add.w	r2, r3, #1073741824	; 0x40000000
 8004008:	3a01      	subs	r2, #1
 800400a:	68b1      	ldr	r1, [r6, #8]
 800400c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8004010:	429c      	cmp	r4, r3
 8004012:	ed91 7a00 	vldr	s14, [r1]
 8004016:	eb00 0082 	add.w	r0, r0, r2, lsl #2
 800401a:	f63f af69 	bhi.w	8003ef0 <forward_relu+0xbc>
 800401e:	2500      	movs	r5, #0
 8004020:	3304      	adds	r3, #4
 8004022:	1d02      	adds	r2, r0, #4
 8004024:	ed53 7a01 	vldr	s15, [r3, #-4]
 8004028:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800402c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004030:	f1a3 0104 	sub.w	r1, r3, #4
 8004034:	f1a3 0308 	sub.w	r3, r3, #8
 8004038:	d406      	bmi.n	8004048 <forward_relu+0x214>
 800403a:	429c      	cmp	r4, r3
 800403c:	f842 5d04 	str.w	r5, [r2, #-4]!
 8004040:	f63f af56 	bhi.w	8003ef0 <forward_relu+0xbc>
 8004044:	460b      	mov	r3, r1
 8004046:	e7ed      	b.n	8004024 <forward_relu+0x1f0>
 8004048:	429c      	cmp	r4, r3
 800404a:	ed62 7a01 	vstmdb	r2!, {s15}
 800404e:	f63f af4f 	bhi.w	8003ef0 <forward_relu+0xbc>
 8004052:	460b      	mov	r3, r1
 8004054:	e7e6      	b.n	8004024 <forward_relu+0x1f0>
 8004056:	68b3      	ldr	r3, [r6, #8]
 8004058:	ed93 7a02 	vldr	s14, [r3, #8]
 800405c:	edd3 6a00 	vldr	s13, [r3]
 8004060:	ed93 6a01 	vldr	s12, [r3, #4]
 8004064:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8004068:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800406c:	d401      	bmi.n	8004072 <forward_relu+0x23e>
 800406e:	4623      	mov	r3, r4
 8004070:	e71e      	b.n	8003eb0 <forward_relu+0x7c>
 8004072:	eeb5 6a40 	vcmp.f32	s12, #0.0
 8004076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800407a:	4623      	mov	r3, r4
 800407c:	f47f af63 	bne.w	8003f46 <forward_relu+0x112>
 8004080:	e741      	b.n	8003f06 <forward_relu+0xd2>
 8004082:	4622      	mov	r2, r4
 8004084:	e79a      	b.n	8003fbc <forward_relu+0x188>
 8004086:	68b2      	ldr	r2, [r6, #8]
 8004088:	4623      	mov	r3, r4
 800408a:	ed92 7a00 	vldr	s14, [r2]
 800408e:	e7c6      	b.n	800401e <forward_relu+0x1ea>
 8004090:	2300      	movs	r3, #0
 8004092:	685b      	ldr	r3, [r3, #4]
 8004094:	deff      	udf	#255	; 0xff
 8004096:	bf00      	nop
 8004098:	00000000 	.word	0x00000000

0800409c <forward_sm>:
 800409c:	6982      	ldr	r2, [r0, #24]
 800409e:	8813      	ldrh	r3, [r2, #0]
 80040a0:	2b00      	cmp	r3, #0
 80040a2:	d07c      	beq.n	800419e <forward_sm+0x102>
 80040a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80040a8:	ed2d 8b04 	vpush	{d8-d9}
 80040ac:	6852      	ldr	r2, [r2, #4]
 80040ae:	6854      	ldr	r4, [r2, #4]
 80040b0:	b085      	sub	sp, #20
 80040b2:	b104      	cbz	r4, 80040b6 <forward_sm+0x1a>
 80040b4:	6824      	ldr	r4, [r4, #0]
 80040b6:	2b01      	cmp	r3, #1
 80040b8:	d076      	beq.n	80041a8 <forward_sm+0x10c>
 80040ba:	6913      	ldr	r3, [r2, #16]
 80040bc:	2b00      	cmp	r3, #0
 80040be:	d076      	beq.n	80041ae <forward_sm+0x112>
 80040c0:	681e      	ldr	r6, [r3, #0]
 80040c2:	68a3      	ldr	r3, [r4, #8]
 80040c4:	68e0      	ldr	r0, [r4, #12]
 80040c6:	68f2      	ldr	r2, [r6, #12]
 80040c8:	6845      	ldr	r5, [r0, #4]
 80040ca:	6857      	ldr	r7, [r2, #4]
 80040cc:	0a1b      	lsrs	r3, r3, #8
 80040ce:	d068      	beq.n	80041a2 <forward_sm+0x106>
 80040d0:	eb00 0383 	add.w	r3, r0, r3, lsl #2
 80040d4:	2201      	movs	r2, #1
 80040d6:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80040da:	4298      	cmp	r0, r3
 80040dc:	fb01 f202 	mul.w	r2, r1, r2
 80040e0:	d1f9      	bne.n	80040d6 <forward_sm+0x3a>
 80040e2:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80040e6:	69a2      	ldr	r2, [r4, #24]
 80040e8:	69b3      	ldr	r3, [r6, #24]
 80040ea:	6892      	ldr	r2, [r2, #8]
 80040ec:	f8d3 8008 	ldr.w	r8, [r3, #8]
 80040f0:	eb02 0309 	add.w	r3, r2, r9
 80040f4:	429a      	cmp	r2, r3
 80040f6:	9301      	str	r3, [sp, #4]
 80040f8:	d24c      	bcs.n	8004194 <forward_sm+0xf8>
 80040fa:	00bb      	lsls	r3, r7, #2
 80040fc:	9303      	str	r3, [sp, #12]
 80040fe:	eb02 0785 	add.w	r7, r2, r5, lsl #2
 8004102:	00ab      	lsls	r3, r5, #2
 8004104:	2d01      	cmp	r5, #1
 8004106:	ed92 8a00 	vldr	s16, [r2]
 800410a:	9302      	str	r3, [sp, #8]
 800410c:	eeb7 9a00 	vmov.f32	s18, #112	; 0x3f800000  1.0
 8004110:	463e      	mov	r6, r7
 8004112:	d93c      	bls.n	800418e <forward_sm+0xf2>
 8004114:	1d13      	adds	r3, r2, #4
 8004116:	ecf3 7a01 	vldmia	r3!, {s15}
 800411a:	eeb4 8ae7 	vcmpe.f32	s16, s15
 800411e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004122:	bfb8      	it	lt
 8004124:	eeb0 8a67 	vmovlt.f32	s16, s15
 8004128:	429e      	cmp	r6, r3
 800412a:	d1f4      	bne.n	8004116 <forward_sm+0x7a>
 800412c:	eddf 8a21 	vldr	s17, [pc, #132]	; 80041b4 <forward_sm+0x118>
 8004130:	4692      	mov	sl, r2
 8004132:	46c3      	mov	fp, r8
 8004134:	46c1      	mov	r9, r8
 8004136:	2400      	movs	r4, #0
 8004138:	ecba 0a01 	vldmia	sl!, {s0}
 800413c:	ee30 0a48 	vsub.f32	s0, s0, s16
 8004140:	f002 ffea 	bl	8007118 <expf>
 8004144:	3401      	adds	r4, #1
 8004146:	42a5      	cmp	r5, r4
 8004148:	ee78 8a80 	vadd.f32	s17, s17, s0
 800414c:	eca9 0a01 	vstmia	r9!, {s0}
 8004150:	d8f2      	bhi.n	8004138 <forward_sm+0x9c>
 8004152:	eef5 8a40 	vcmp.f32	s17, #0.0
 8004156:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800415a:	d00b      	beq.n	8004174 <forward_sm+0xd8>
 800415c:	ee89 7a28 	vdiv.f32	s14, s18, s17
 8004160:	2300      	movs	r3, #0
 8004162:	3301      	adds	r3, #1
 8004164:	429d      	cmp	r5, r3
 8004166:	eddb 7a00 	vldr	s15, [fp]
 800416a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800416e:	eceb 7a01 	vstmia	fp!, {s15}
 8004172:	d8f6      	bhi.n	8004162 <forward_sm+0xc6>
 8004174:	9b03      	ldr	r3, [sp, #12]
 8004176:	9901      	ldr	r1, [sp, #4]
 8004178:	4498      	add	r8, r3
 800417a:	9b02      	ldr	r3, [sp, #8]
 800417c:	42b9      	cmp	r1, r7
 800417e:	463a      	mov	r2, r7
 8004180:	441e      	add	r6, r3
 8004182:	d907      	bls.n	8004194 <forward_sm+0xf8>
 8004184:	2d01      	cmp	r5, #1
 8004186:	ed92 8a00 	vldr	s16, [r2]
 800418a:	441f      	add	r7, r3
 800418c:	d8c2      	bhi.n	8004114 <forward_sm+0x78>
 800418e:	2d00      	cmp	r5, #0
 8004190:	d0f0      	beq.n	8004174 <forward_sm+0xd8>
 8004192:	e7cb      	b.n	800412c <forward_sm+0x90>
 8004194:	b005      	add	sp, #20
 8004196:	ecbd 8b04 	vpop	{d8-d9}
 800419a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800419e:	685b      	ldr	r3, [r3, #4]
 80041a0:	deff      	udf	#255	; 0xff
 80041a2:	f04f 0904 	mov.w	r9, #4
 80041a6:	e79e      	b.n	80040e6 <forward_sm+0x4a>
 80041a8:	2300      	movs	r3, #0
 80041aa:	685b      	ldr	r3, [r3, #4]
 80041ac:	deff      	udf	#255	; 0xff
 80041ae:	68db      	ldr	r3, [r3, #12]
 80041b0:	deff      	udf	#255	; 0xff
 80041b2:	bf00      	nop
 80041b4:	00000000 	.word	0x00000000

080041b8 <forward_lite_dense_if32of32wf32>:
 80041b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041bc:	e9dd 6409 	ldrd	r6, r4, [sp, #36]	; 0x24
 80041c0:	eb00 0784 	add.w	r7, r0, r4, lsl #2
 80041c4:	4287      	cmp	r7, r0
 80041c6:	f240 8106 	bls.w	80043d6 <forward_lite_dense_if32of32wf32+0x21e>
 80041ca:	f1a6 0810 	sub.w	r8, r6, #16
 80041ce:	ea4f 1818 	mov.w	r8, r8, lsr #4
 80041d2:	f108 0801 	add.w	r8, r8, #1
 80041d6:	ea4f 1b88 	mov.w	fp, r8, lsl #6
 80041da:	ea4f 0986 	mov.w	r9, r6, lsl #2
 80041de:	eb01 1888 	add.w	r8, r1, r8, lsl #6
 80041e2:	4605      	mov	r5, r0
 80041e4:	f006 0a0f 	and.w	sl, r6, #15
 80041e8:	2e0f      	cmp	r6, #15
 80041ea:	ed9f 7a84 	vldr	s14, [pc, #528]	; 80043fc <forward_lite_dense_if32of32wf32+0x244>
 80041ee:	f240 8101 	bls.w	80043f4 <forward_lite_dense_if32of32wf32+0x23c>
 80041f2:	f101 0c40 	add.w	ip, r1, #64	; 0x40
 80041f6:	f102 0440 	add.w	r4, r2, #64	; 0x40
 80041fa:	46b6      	mov	lr, r6
 80041fc:	ed54 5a0f 	vldr	s11, [r4, #-60]	; 0xffffffc4
 8004200:	ed5c 7a0f 	vldr	s15, [ip, #-60]	; 0xffffffc4
 8004204:	ed1c 6a10 	vldr	s12, [ip, #-64]	; 0xffffffc0
 8004208:	ed54 6a10 	vldr	s13, [r4, #-64]	; 0xffffffc0
 800420c:	ed5c 4a0d 	vldr	s9, [ip, #-52]	; 0xffffffcc
 8004210:	ed1c 5a0c 	vldr	s10, [ip, #-48]	; 0xffffffd0
 8004214:	ed1c 3a0a 	vldr	s6, [ip, #-40]	; 0xffffffd8
 8004218:	ed54 3a0a 	vldr	s7, [r4, #-40]	; 0xffffffd8
 800421c:	ed1c 4a09 	vldr	s8, [ip, #-36]	; 0xffffffdc
 8004220:	ed1c 1a06 	vldr	s2, [ip, #-24]	; 0xffffffe8
 8004224:	ed54 1a06 	vldr	s3, [r4, #-24]	; 0xffffffe8
 8004228:	ed1c 2a05 	vldr	s4, [ip, #-20]	; 0xffffffec
 800422c:	ed54 2a05 	vldr	s5, [r4, #-20]	; 0xffffffec
 8004230:	ee67 7aa5 	vmul.f32	s15, s15, s11
 8004234:	ed5c 5a0e 	vldr	s11, [ip, #-56]	; 0xffffffc8
 8004238:	eee6 7a26 	vfma.f32	s15, s12, s13
 800423c:	f1ae 0e10 	sub.w	lr, lr, #16
 8004240:	f1be 0f0f 	cmp.w	lr, #15
 8004244:	ed14 6a0e 	vldr	s12, [r4, #-56]	; 0xffffffc8
 8004248:	ed54 6a0d 	vldr	s13, [r4, #-52]	; 0xffffffcc
 800424c:	eee5 7a86 	vfma.f32	s15, s11, s12
 8004250:	f10c 0c40 	add.w	ip, ip, #64	; 0x40
 8004254:	f104 0440 	add.w	r4, r4, #64	; 0x40
 8004258:	ed54 5a1c 	vldr	s11, [r4, #-112]	; 0xffffff90
 800425c:	ed1c 6a1b 	vldr	s12, [ip, #-108]	; 0xffffff94
 8004260:	eee4 7aa6 	vfma.f32	s15, s9, s13
 8004264:	ed54 6a1b 	vldr	s13, [r4, #-108]	; 0xffffff94
 8004268:	ed54 4a19 	vldr	s9, [r4, #-100]	; 0xffffff9c
 800426c:	eee5 7a25 	vfma.f32	s15, s10, s11
 8004270:	ed1c 5a18 	vldr	s10, [ip, #-96]	; 0xffffffa0
 8004274:	ed54 5a18 	vldr	s11, [r4, #-96]	; 0xffffffa0
 8004278:	eee6 7a26 	vfma.f32	s15, s12, s13
 800427c:	ed1c 6a17 	vldr	s12, [ip, #-92]	; 0xffffffa4
 8004280:	ed54 6a17 	vldr	s13, [r4, #-92]	; 0xffffffa4
 8004284:	eee3 7a23 	vfma.f32	s15, s6, s7
 8004288:	ed1c 3a14 	vldr	s6, [ip, #-80]	; 0xffffffb0
 800428c:	ed54 3a14 	vldr	s7, [r4, #-80]	; 0xffffffb0
 8004290:	eee4 7a24 	vfma.f32	s15, s8, s9
 8004294:	ed1c 4a13 	vldr	s8, [ip, #-76]	; 0xffffffb4
 8004298:	ed54 4a13 	vldr	s9, [r4, #-76]	; 0xffffffb4
 800429c:	eee5 7a25 	vfma.f32	s15, s10, s11
 80042a0:	ed1c 5a12 	vldr	s10, [ip, #-72]	; 0xffffffb8
 80042a4:	ed54 5a12 	vldr	s11, [r4, #-72]	; 0xffffffb8
 80042a8:	eee6 7a26 	vfma.f32	s15, s12, s13
 80042ac:	ed1c 6a11 	vldr	s12, [ip, #-68]	; 0xffffffbc
 80042b0:	ed54 6a11 	vldr	s13, [r4, #-68]	; 0xffffffbc
 80042b4:	eee1 7a21 	vfma.f32	s15, s2, s3
 80042b8:	eee2 7a22 	vfma.f32	s15, s4, s5
 80042bc:	eee3 7a23 	vfma.f32	s15, s6, s7
 80042c0:	eee4 7a24 	vfma.f32	s15, s8, s9
 80042c4:	eee5 7a25 	vfma.f32	s15, s10, s11
 80042c8:	eee6 7a26 	vfma.f32	s15, s12, s13
 80042cc:	ee37 7a27 	vadd.f32	s14, s14, s15
 80042d0:	d894      	bhi.n	80041fc <forward_lite_dense_if32of32wf32+0x44>
 80042d2:	eb02 0e0b 	add.w	lr, r2, fp
 80042d6:	4654      	mov	r4, sl
 80042d8:	46c4      	mov	ip, r8
 80042da:	2c00      	cmp	r4, #0
 80042dc:	d075      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 80042de:	eddc 6a00 	vldr	s13, [ip]
 80042e2:	edde 7a00 	vldr	s15, [lr]
 80042e6:	2c01      	cmp	r4, #1
 80042e8:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80042ec:	d06d      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 80042ee:	eddc 6a01 	vldr	s13, [ip, #4]
 80042f2:	edde 7a01 	vldr	s15, [lr, #4]
 80042f6:	2c02      	cmp	r4, #2
 80042f8:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80042fc:	d065      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 80042fe:	eddc 6a02 	vldr	s13, [ip, #8]
 8004302:	edde 7a02 	vldr	s15, [lr, #8]
 8004306:	2c03      	cmp	r4, #3
 8004308:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800430c:	d05d      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 800430e:	eddc 6a03 	vldr	s13, [ip, #12]
 8004312:	edde 7a03 	vldr	s15, [lr, #12]
 8004316:	2c04      	cmp	r4, #4
 8004318:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800431c:	d055      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 800431e:	eddc 6a04 	vldr	s13, [ip, #16]
 8004322:	edde 7a04 	vldr	s15, [lr, #16]
 8004326:	2c05      	cmp	r4, #5
 8004328:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800432c:	d04d      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 800432e:	eddc 6a05 	vldr	s13, [ip, #20]
 8004332:	edde 7a05 	vldr	s15, [lr, #20]
 8004336:	2c06      	cmp	r4, #6
 8004338:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800433c:	d045      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 800433e:	eddc 6a06 	vldr	s13, [ip, #24]
 8004342:	edde 7a06 	vldr	s15, [lr, #24]
 8004346:	2c07      	cmp	r4, #7
 8004348:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800434c:	d03d      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 800434e:	eddc 6a07 	vldr	s13, [ip, #28]
 8004352:	edde 7a07 	vldr	s15, [lr, #28]
 8004356:	2c08      	cmp	r4, #8
 8004358:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800435c:	d035      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 800435e:	eddc 6a08 	vldr	s13, [ip, #32]
 8004362:	edde 7a08 	vldr	s15, [lr, #32]
 8004366:	2c09      	cmp	r4, #9
 8004368:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800436c:	d02d      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 800436e:	eddc 6a09 	vldr	s13, [ip, #36]	; 0x24
 8004372:	edde 7a09 	vldr	s15, [lr, #36]	; 0x24
 8004376:	2c0a      	cmp	r4, #10
 8004378:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800437c:	d025      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 800437e:	eddc 6a0a 	vldr	s13, [ip, #40]	; 0x28
 8004382:	edde 7a0a 	vldr	s15, [lr, #40]	; 0x28
 8004386:	2c0b      	cmp	r4, #11
 8004388:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800438c:	d01d      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 800438e:	eddc 6a0b 	vldr	s13, [ip, #44]	; 0x2c
 8004392:	edde 7a0b 	vldr	s15, [lr, #44]	; 0x2c
 8004396:	2c0c      	cmp	r4, #12
 8004398:	eea6 7aa7 	vfma.f32	s14, s13, s15
 800439c:	d015      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 800439e:	eddc 6a0c 	vldr	s13, [ip, #48]	; 0x30
 80043a2:	edde 7a0c 	vldr	s15, [lr, #48]	; 0x30
 80043a6:	3c0d      	subs	r4, #13
 80043a8:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80043ac:	d00d      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 80043ae:	eddc 6a0d 	vldr	s13, [ip, #52]	; 0x34
 80043b2:	edde 7a0d 	vldr	s15, [lr, #52]	; 0x34
 80043b6:	2c01      	cmp	r4, #1
 80043b8:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80043bc:	d005      	beq.n	80043ca <forward_lite_dense_if32of32wf32+0x212>
 80043be:	edde 6a0e 	vldr	s13, [lr, #56]	; 0x38
 80043c2:	eddc 7a0e 	vldr	s15, [ip, #56]	; 0x38
 80043c6:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80043ca:	444a      	add	r2, r9
 80043cc:	eca5 7a01 	vstmia	r5!, {s14}
 80043d0:	42af      	cmp	r7, r5
 80043d2:	f63f af09 	bhi.w	80041e8 <forward_lite_dense_if32of32wf32+0x30>
 80043d6:	b15b      	cbz	r3, 80043f0 <forward_lite_dense_if32of32wf32+0x238>
 80043d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80043da:	b14a      	cbz	r2, 80043f0 <forward_lite_dense_if32of32wf32+0x238>
 80043dc:	edd0 7a00 	vldr	s15, [r0]
 80043e0:	ecb3 7a01 	vldmia	r3!, {s14}
 80043e4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80043e8:	ece0 7a01 	vstmia	r0!, {s15}
 80043ec:	4287      	cmp	r7, r0
 80043ee:	d1f5      	bne.n	80043dc <forward_lite_dense_if32of32wf32+0x224>
 80043f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80043f4:	4634      	mov	r4, r6
 80043f6:	4696      	mov	lr, r2
 80043f8:	468c      	mov	ip, r1
 80043fa:	e76e      	b.n	80042da <forward_lite_dense_if32of32wf32+0x122>
 80043fc:	00000000 	.word	0x00000000

08004400 <st_int8_copy>:
 8004400:	4288      	cmp	r0, r1
 8004402:	d057      	beq.n	80044b4 <st_int8_copy+0xb4>
 8004404:	2a00      	cmp	r2, #0
 8004406:	d055      	beq.n	80044b4 <st_int8_copy+0xb4>
 8004408:	4288      	cmp	r0, r1
 800440a:	d354      	bcc.n	80044b6 <st_int8_copy+0xb6>
 800440c:	078b      	lsls	r3, r1, #30
 800440e:	d102      	bne.n	8004416 <st_int8_copy+0x16>
 8004410:	e009      	b.n	8004426 <st_int8_copy+0x26>
 8004412:	2a00      	cmp	r2, #0
 8004414:	d05c      	beq.n	80044d0 <st_int8_copy+0xd0>
 8004416:	f910 3b01 	ldrsb.w	r3, [r0], #1
 800441a:	f801 3b01 	strb.w	r3, [r1], #1
 800441e:	078b      	lsls	r3, r1, #30
 8004420:	f102 32ff 	add.w	r2, r2, #4294967295
 8004424:	d1f5      	bne.n	8004412 <st_int8_copy+0x12>
 8004426:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800442a:	ea5f 1e12 	movs.w	lr, r2, lsr #4
 800442e:	d069      	beq.n	8004504 <st_int8_copy+0x104>
 8004430:	ea41 0300 	orr.w	r3, r1, r0
 8004434:	075b      	lsls	r3, r3, #29
 8004436:	d14c      	bne.n	80044d2 <st_int8_copy+0xd2>
 8004438:	f10e 33ff 	add.w	r3, lr, #4294967295
 800443c:	2b01      	cmp	r3, #1
 800443e:	d948      	bls.n	80044d2 <st_int8_copy+0xd2>
 8004440:	f100 0310 	add.w	r3, r0, #16
 8004444:	ea4f 140e 	mov.w	r4, lr, lsl #4
 8004448:	f101 0c10 	add.w	ip, r1, #16
 800444c:	eb03 1e0e 	add.w	lr, r3, lr, lsl #4
 8004450:	ed13 6b04 	vldr	d6, [r3, #-16]
 8004454:	ed13 7b02 	vldr	d7, [r3, #-8]
 8004458:	3310      	adds	r3, #16
 800445a:	4573      	cmp	r3, lr
 800445c:	ed0c 6b04 	vstr	d6, [ip, #-16]
 8004460:	ed0c 7b02 	vstr	d7, [ip, #-8]
 8004464:	f10c 0c10 	add.w	ip, ip, #16
 8004468:	d1f2      	bne.n	8004450 <st_int8_copy+0x50>
 800446a:	f3c2 0381 	ubfx	r3, r2, #2, #2
 800446e:	4421      	add	r1, r4
 8004470:	4420      	add	r0, r4
 8004472:	f002 0203 	and.w	r2, r2, #3
 8004476:	b16b      	cbz	r3, 8004494 <st_int8_copy+0x94>
 8004478:	6804      	ldr	r4, [r0, #0]
 800447a:	600c      	str	r4, [r1, #0]
 800447c:	1e5c      	subs	r4, r3, #1
 800447e:	d005      	beq.n	800448c <st_int8_copy+0x8c>
 8004480:	6845      	ldr	r5, [r0, #4]
 8004482:	604d      	str	r5, [r1, #4]
 8004484:	2c01      	cmp	r4, #1
 8004486:	bf1c      	itt	ne
 8004488:	6884      	ldrne	r4, [r0, #8]
 800448a:	608c      	strne	r4, [r1, #8]
 800448c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 8004490:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8004494:	b162      	cbz	r2, 80044b0 <st_int8_copy+0xb0>
 8004496:	f990 3000 	ldrsb.w	r3, [r0]
 800449a:	700b      	strb	r3, [r1, #0]
 800449c:	3a01      	subs	r2, #1
 800449e:	d007      	beq.n	80044b0 <st_int8_copy+0xb0>
 80044a0:	f990 3001 	ldrsb.w	r3, [r0, #1]
 80044a4:	704b      	strb	r3, [r1, #1]
 80044a6:	2a01      	cmp	r2, #1
 80044a8:	bf1c      	itt	ne
 80044aa:	f990 3002 	ldrsbne.w	r3, [r0, #2]
 80044ae:	708b      	strbne	r3, [r1, #2]
 80044b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80044b4:	4770      	bx	lr
 80044b6:	1883      	adds	r3, r0, r2
 80044b8:	428b      	cmp	r3, r1
 80044ba:	d9a7      	bls.n	800440c <st_int8_copy+0xc>
 80044bc:	4283      	cmp	r3, r0
 80044be:	440a      	add	r2, r1
 80044c0:	d9f8      	bls.n	80044b4 <st_int8_copy+0xb4>
 80044c2:	f913 1d01 	ldrsb.w	r1, [r3, #-1]!
 80044c6:	f802 1d01 	strb.w	r1, [r2, #-1]!
 80044ca:	4283      	cmp	r3, r0
 80044cc:	d1f9      	bne.n	80044c2 <st_int8_copy+0xc2>
 80044ce:	4770      	bx	lr
 80044d0:	4770      	bx	lr
 80044d2:	ea4f 140e 	mov.w	r4, lr, lsl #4
 80044d6:	460b      	mov	r3, r1
 80044d8:	eb01 1e0e 	add.w	lr, r1, lr, lsl #4
 80044dc:	4684      	mov	ip, r0
 80044de:	f8dc 7000 	ldr.w	r7, [ip]
 80044e2:	f8dc 6004 	ldr.w	r6, [ip, #4]
 80044e6:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80044ea:	f8dc 800c 	ldr.w	r8, [ip, #12]
 80044ee:	f8c3 800c 	str.w	r8, [r3, #12]
 80044f2:	601f      	str	r7, [r3, #0]
 80044f4:	605e      	str	r6, [r3, #4]
 80044f6:	609d      	str	r5, [r3, #8]
 80044f8:	3310      	adds	r3, #16
 80044fa:	459e      	cmp	lr, r3
 80044fc:	f10c 0c10 	add.w	ip, ip, #16
 8004500:	d1ed      	bne.n	80044de <st_int8_copy+0xde>
 8004502:	e7b2      	b.n	800446a <st_int8_copy+0x6a>
 8004504:	0893      	lsrs	r3, r2, #2
 8004506:	f002 0203 	and.w	r2, r2, #3
 800450a:	e7b4      	b.n	8004476 <st_int8_copy+0x76>

0800450c <ai_array_to_buffer_fmt>:
 800450c:	f3c0 4343 	ubfx	r3, r0, #17, #4
 8004510:	2b02      	cmp	r3, #2
 8004512:	d050      	beq.n	80045b6 <ai_array_to_buffer_fmt+0xaa>
 8004514:	4b2a      	ldr	r3, [pc, #168]	; (80045c0 <ai_array_to_buffer_fmt+0xb4>)
 8004516:	f020 427e 	bic.w	r2, r0, #4261412864	; 0xfe000000
 800451a:	429a      	cmp	r2, r3
 800451c:	d00b      	beq.n	8004536 <ai_array_to_buffer_fmt+0x2a>
 800451e:	dc1c      	bgt.n	800455a <ai_array_to_buffer_fmt+0x4e>
 8004520:	4b28      	ldr	r3, [pc, #160]	; (80045c4 <ai_array_to_buffer_fmt+0xb8>)
 8004522:	429a      	cmp	r2, r3
 8004524:	d007      	beq.n	8004536 <ai_array_to_buffer_fmt+0x2a>
 8004526:	dd0b      	ble.n	8004540 <ai_array_to_buffer_fmt+0x34>
 8004528:	4b27      	ldr	r3, [pc, #156]	; (80045c8 <ai_array_to_buffer_fmt+0xbc>)
 800452a:	429a      	cmp	r2, r3
 800452c:	d003      	beq.n	8004536 <ai_array_to_buffer_fmt+0x2a>
 800452e:	f503 33fa 	add.w	r3, r3, #128000	; 0x1f400
 8004532:	429a      	cmp	r2, r3
 8004534:	d131      	bne.n	800459a <ai_array_to_buffer_fmt+0x8e>
 8004536:	4613      	mov	r3, r2
 8004538:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 800453c:	4318      	orrs	r0, r3
 800453e:	4770      	bx	lr
 8004540:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8004544:	429a      	cmp	r2, r3
 8004546:	d0f6      	beq.n	8004536 <ai_array_to_buffer_fmt+0x2a>
 8004548:	dd2c      	ble.n	80045a4 <ai_array_to_buffer_fmt+0x98>
 800454a:	4b20      	ldr	r3, [pc, #128]	; (80045cc <ai_array_to_buffer_fmt+0xc0>)
 800454c:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 8004550:	429a      	cmp	r2, r3
 8004552:	bf18      	it	ne
 8004554:	2340      	movne	r3, #64	; 0x40
 8004556:	4318      	orrs	r0, r3
 8004558:	4770      	bx	lr
 800455a:	4b1d      	ldr	r3, [pc, #116]	; (80045d0 <ai_array_to_buffer_fmt+0xc4>)
 800455c:	429a      	cmp	r2, r3
 800455e:	d0ea      	beq.n	8004536 <ai_array_to_buffer_fmt+0x2a>
 8004560:	dd0e      	ble.n	8004580 <ai_array_to_buffer_fmt+0x74>
 8004562:	4b1c      	ldr	r3, [pc, #112]	; (80045d4 <ai_array_to_buffer_fmt+0xc8>)
 8004564:	429a      	cmp	r2, r3
 8004566:	d0e6      	beq.n	8004536 <ai_array_to_buffer_fmt+0x2a>
 8004568:	f503 037e 	add.w	r3, r3, #16646144	; 0xfe0000
 800456c:	429a      	cmp	r2, r3
 800456e:	d0e2      	beq.n	8004536 <ai_array_to_buffer_fmt+0x2a>
 8004570:	4b19      	ldr	r3, [pc, #100]	; (80045d8 <ai_array_to_buffer_fmt+0xcc>)
 8004572:	f000 40d0 	and.w	r0, r0, #1744830464	; 0x68000000
 8004576:	429a      	cmp	r2, r3
 8004578:	bf18      	it	ne
 800457a:	2340      	movne	r3, #64	; 0x40
 800457c:	4318      	orrs	r0, r3
 800457e:	4770      	bx	lr
 8004580:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 8004584:	429a      	cmp	r2, r3
 8004586:	d0d6      	beq.n	8004536 <ai_array_to_buffer_fmt+0x2a>
 8004588:	3307      	adds	r3, #7
 800458a:	429a      	cmp	r2, r3
 800458c:	d0d3      	beq.n	8004536 <ai_array_to_buffer_fmt+0x2a>
 800458e:	f2a3 3387 	subw	r3, r3, #903	; 0x387
 8004592:	429a      	cmp	r2, r3
 8004594:	bf18      	it	ne
 8004596:	2340      	movne	r3, #64	; 0x40
 8004598:	e7ce      	b.n	8004538 <ai_array_to_buffer_fmt+0x2c>
 800459a:	4b10      	ldr	r3, [pc, #64]	; (80045dc <ai_array_to_buffer_fmt+0xd0>)
 800459c:	429a      	cmp	r2, r3
 800459e:	bf18      	it	ne
 80045a0:	2340      	movne	r3, #64	; 0x40
 80045a2:	e7c9      	b.n	8004538 <ai_array_to_buffer_fmt+0x2c>
 80045a4:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
 80045a8:	429a      	cmp	r2, r3
 80045aa:	d0c4      	beq.n	8004536 <ai_array_to_buffer_fmt+0x2a>
 80045ac:	3380      	adds	r3, #128	; 0x80
 80045ae:	429a      	cmp	r2, r3
 80045b0:	bf18      	it	ne
 80045b2:	2340      	movne	r3, #64	; 0x40
 80045b4:	e7c0      	b.n	8004538 <ai_array_to_buffer_fmt+0x2c>
 80045b6:	4b0a      	ldr	r3, [pc, #40]	; (80045e0 <ai_array_to_buffer_fmt+0xd4>)
 80045b8:	4003      	ands	r3, r0
 80045ba:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80045be:	e7bb      	b.n	8004538 <ai_array_to_buffer_fmt+0x2c>
 80045c0:	00840040 	.word	0x00840040
 80045c4:	00040840 	.word	0x00040840
 80045c8:	00041040 	.word	0x00041040
 80045cc:	00040447 	.word	0x00040447
 80045d0:	00840840 	.word	0x00840840
 80045d4:	00841040 	.word	0x00841040
 80045d8:	0084084f 	.word	0x0084084f
 80045dc:	0004084f 	.word	0x0004084f
 80045e0:	00803fff 	.word	0x00803fff

080045e4 <ai_array_get_byte_size>:
 80045e4:	b319      	cbz	r1, 800462e <ai_array_get_byte_size+0x4a>
 80045e6:	f3c0 13c6 	ubfx	r3, r0, #7, #7
 80045ea:	fb03 f101 	mul.w	r1, r3, r1
 80045ee:	3107      	adds	r1, #7
 80045f0:	f3c0 4243 	ubfx	r2, r0, #17, #4
 80045f4:	f021 0307 	bic.w	r3, r1, #7
 80045f8:	2a04      	cmp	r2, #4
 80045fa:	f3c0 5141 	ubfx	r1, r0, #21, #2
 80045fe:	fa23 f101 	lsr.w	r1, r3, r1
 8004602:	ea4f 10e0 	mov.w	r0, r0, asr #7
 8004606:	d00b      	beq.n	8004620 <ai_array_get_byte_size+0x3c>
 8004608:	2a08      	cmp	r2, #8
 800460a:	d002      	beq.n	8004612 <ai_array_get_byte_size+0x2e>
 800460c:	3107      	adds	r1, #7
 800460e:	08c8      	lsrs	r0, r1, #3
 8004610:	4770      	bx	lr
 8004612:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8004616:	eb01 2100 	add.w	r1, r1, r0, lsl #8
 800461a:	3107      	adds	r1, #7
 800461c:	08c8      	lsrs	r0, r1, #3
 800461e:	4770      	bx	lr
 8004620:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8004624:	eb01 1100 	add.w	r1, r1, r0, lsl #4
 8004628:	3107      	adds	r1, #7
 800462a:	08c8      	lsrs	r0, r1, #3
 800462c:	4770      	bx	lr
 800462e:	4608      	mov	r0, r1
 8004630:	4770      	bx	lr
 8004632:	bf00      	nop

08004634 <ai_array_get_data_byte_size>:
 8004634:	b169      	cbz	r1, 8004652 <ai_array_get_data_byte_size+0x1e>
 8004636:	f3c0 12c6 	ubfx	r2, r0, #7, #7
 800463a:	fb02 f101 	mul.w	r1, r2, r1
 800463e:	1dcb      	adds	r3, r1, #7
 8004640:	f023 0307 	bic.w	r3, r3, #7
 8004644:	f3c0 5041 	ubfx	r0, r0, #21, #2
 8004648:	fa23 f000 	lsr.w	r0, r3, r0
 800464c:	3007      	adds	r0, #7
 800464e:	08c0      	lsrs	r0, r0, #3
 8004650:	4770      	bx	lr
 8004652:	4608      	mov	r0, r1
 8004654:	4770      	bx	lr
 8004656:	bf00      	nop

08004658 <ai_version_get>:
 8004658:	0212      	lsls	r2, r2, #8
 800465a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800465e:	ea42 6000 	orr.w	r0, r2, r0, lsl #24
 8004662:	4770      	bx	lr

08004664 <ai_platform_version_get>:
 8004664:	0e02      	lsrs	r2, r0, #24
 8004666:	2300      	movs	r3, #0
 8004668:	f362 0307 	bfi	r3, r2, #0, #8
 800466c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8004670:	f362 230f 	bfi	r3, r2, #8, #8
 8004674:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8004678:	f360 4317 	bfi	r3, r0, #16, #8
 800467c:	b082      	sub	sp, #8
 800467e:	f023 407f 	bic.w	r0, r3, #4278190080	; 0xff000000
 8004682:	b002      	add	sp, #8
 8004684:	4770      	bx	lr
 8004686:	bf00      	nop

08004688 <get_tensor_byte_size>:
 8004688:	b410      	push	{r4}
 800468a:	6983      	ldr	r3, [r0, #24]
 800468c:	68c4      	ldr	r4, [r0, #12]
 800468e:	6941      	ldr	r1, [r0, #20]
 8004690:	681b      	ldr	r3, [r3, #0]
 8004692:	68e0      	ldr	r0, [r4, #12]
 8004694:	4a07      	ldr	r2, [pc, #28]	; (80046b4 <get_tensor_byte_size+0x2c>)
 8004696:	68c9      	ldr	r1, [r1, #12]
 8004698:	f85d 4b04 	ldr.w	r4, [sp], #4
 800469c:	f023 437e 	bic.w	r3, r3, #4261412864	; 0xfe000000
 80046a0:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80046a4:	fb01 f000 	mul.w	r0, r1, r0
 80046a8:	4293      	cmp	r3, r2
 80046aa:	bf04      	itt	eq
 80046ac:	3007      	addeq	r0, #7
 80046ae:	08c0      	lsreq	r0, r0, #3
 80046b0:	4770      	bx	lr
 80046b2:	bf00      	nop
 80046b4:	000400c0 	.word	0x000400c0

080046b8 <calloc>:
 80046b8:	4b02      	ldr	r3, [pc, #8]	; (80046c4 <calloc+0xc>)
 80046ba:	460a      	mov	r2, r1
 80046bc:	4601      	mov	r1, r0
 80046be:	6818      	ldr	r0, [r3, #0]
 80046c0:	f000 b802 	b.w	80046c8 <_calloc_r>
 80046c4:	2000069c 	.word	0x2000069c

080046c8 <_calloc_r>:
 80046c8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80046ca:	fba1 2402 	umull	r2, r4, r1, r2
 80046ce:	b94c      	cbnz	r4, 80046e4 <_calloc_r+0x1c>
 80046d0:	4611      	mov	r1, r2
 80046d2:	9201      	str	r2, [sp, #4]
 80046d4:	f000 f836 	bl	8004744 <_malloc_r>
 80046d8:	9a01      	ldr	r2, [sp, #4]
 80046da:	4605      	mov	r5, r0
 80046dc:	b930      	cbnz	r0, 80046ec <_calloc_r+0x24>
 80046de:	4628      	mov	r0, r5
 80046e0:	b003      	add	sp, #12
 80046e2:	bd30      	pop	{r4, r5, pc}
 80046e4:	220c      	movs	r2, #12
 80046e6:	6002      	str	r2, [r0, #0]
 80046e8:	2500      	movs	r5, #0
 80046ea:	e7f8      	b.n	80046de <_calloc_r+0x16>
 80046ec:	4621      	mov	r1, r4
 80046ee:	f000 ff11 	bl	8005514 <memset>
 80046f2:	e7f4      	b.n	80046de <_calloc_r+0x16>

080046f4 <malloc>:
 80046f4:	4b02      	ldr	r3, [pc, #8]	; (8004700 <malloc+0xc>)
 80046f6:	4601      	mov	r1, r0
 80046f8:	6818      	ldr	r0, [r3, #0]
 80046fa:	f000 b823 	b.w	8004744 <_malloc_r>
 80046fe:	bf00      	nop
 8004700:	2000069c 	.word	0x2000069c

08004704 <sbrk_aligned>:
 8004704:	b570      	push	{r4, r5, r6, lr}
 8004706:	4e0e      	ldr	r6, [pc, #56]	; (8004740 <sbrk_aligned+0x3c>)
 8004708:	460c      	mov	r4, r1
 800470a:	6831      	ldr	r1, [r6, #0]
 800470c:	4605      	mov	r5, r0
 800470e:	b911      	cbnz	r1, 8004716 <sbrk_aligned+0x12>
 8004710:	f000 ff52 	bl	80055b8 <_sbrk_r>
 8004714:	6030      	str	r0, [r6, #0]
 8004716:	4621      	mov	r1, r4
 8004718:	4628      	mov	r0, r5
 800471a:	f000 ff4d 	bl	80055b8 <_sbrk_r>
 800471e:	1c43      	adds	r3, r0, #1
 8004720:	d00a      	beq.n	8004738 <sbrk_aligned+0x34>
 8004722:	1cc4      	adds	r4, r0, #3
 8004724:	f024 0403 	bic.w	r4, r4, #3
 8004728:	42a0      	cmp	r0, r4
 800472a:	d007      	beq.n	800473c <sbrk_aligned+0x38>
 800472c:	1a21      	subs	r1, r4, r0
 800472e:	4628      	mov	r0, r5
 8004730:	f000 ff42 	bl	80055b8 <_sbrk_r>
 8004734:	3001      	adds	r0, #1
 8004736:	d101      	bne.n	800473c <sbrk_aligned+0x38>
 8004738:	f04f 34ff 	mov.w	r4, #4294967295
 800473c:	4620      	mov	r0, r4
 800473e:	bd70      	pop	{r4, r5, r6, pc}
 8004740:	200009d0 	.word	0x200009d0

08004744 <_malloc_r>:
 8004744:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004748:	1ccd      	adds	r5, r1, #3
 800474a:	f025 0503 	bic.w	r5, r5, #3
 800474e:	3508      	adds	r5, #8
 8004750:	2d0c      	cmp	r5, #12
 8004752:	bf38      	it	cc
 8004754:	250c      	movcc	r5, #12
 8004756:	2d00      	cmp	r5, #0
 8004758:	4607      	mov	r7, r0
 800475a:	db01      	blt.n	8004760 <_malloc_r+0x1c>
 800475c:	42a9      	cmp	r1, r5
 800475e:	d905      	bls.n	800476c <_malloc_r+0x28>
 8004760:	230c      	movs	r3, #12
 8004762:	603b      	str	r3, [r7, #0]
 8004764:	2600      	movs	r6, #0
 8004766:	4630      	mov	r0, r6
 8004768:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800476c:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8004840 <_malloc_r+0xfc>
 8004770:	f000 f868 	bl	8004844 <__malloc_lock>
 8004774:	f8d8 3000 	ldr.w	r3, [r8]
 8004778:	461c      	mov	r4, r3
 800477a:	bb5c      	cbnz	r4, 80047d4 <_malloc_r+0x90>
 800477c:	4629      	mov	r1, r5
 800477e:	4638      	mov	r0, r7
 8004780:	f7ff ffc0 	bl	8004704 <sbrk_aligned>
 8004784:	1c43      	adds	r3, r0, #1
 8004786:	4604      	mov	r4, r0
 8004788:	d155      	bne.n	8004836 <_malloc_r+0xf2>
 800478a:	f8d8 4000 	ldr.w	r4, [r8]
 800478e:	4626      	mov	r6, r4
 8004790:	2e00      	cmp	r6, #0
 8004792:	d145      	bne.n	8004820 <_malloc_r+0xdc>
 8004794:	2c00      	cmp	r4, #0
 8004796:	d048      	beq.n	800482a <_malloc_r+0xe6>
 8004798:	6823      	ldr	r3, [r4, #0]
 800479a:	4631      	mov	r1, r6
 800479c:	4638      	mov	r0, r7
 800479e:	eb04 0903 	add.w	r9, r4, r3
 80047a2:	f000 ff09 	bl	80055b8 <_sbrk_r>
 80047a6:	4581      	cmp	r9, r0
 80047a8:	d13f      	bne.n	800482a <_malloc_r+0xe6>
 80047aa:	6821      	ldr	r1, [r4, #0]
 80047ac:	1a6d      	subs	r5, r5, r1
 80047ae:	4629      	mov	r1, r5
 80047b0:	4638      	mov	r0, r7
 80047b2:	f7ff ffa7 	bl	8004704 <sbrk_aligned>
 80047b6:	3001      	adds	r0, #1
 80047b8:	d037      	beq.n	800482a <_malloc_r+0xe6>
 80047ba:	6823      	ldr	r3, [r4, #0]
 80047bc:	442b      	add	r3, r5
 80047be:	6023      	str	r3, [r4, #0]
 80047c0:	f8d8 3000 	ldr.w	r3, [r8]
 80047c4:	2b00      	cmp	r3, #0
 80047c6:	d038      	beq.n	800483a <_malloc_r+0xf6>
 80047c8:	685a      	ldr	r2, [r3, #4]
 80047ca:	42a2      	cmp	r2, r4
 80047cc:	d12b      	bne.n	8004826 <_malloc_r+0xe2>
 80047ce:	2200      	movs	r2, #0
 80047d0:	605a      	str	r2, [r3, #4]
 80047d2:	e00f      	b.n	80047f4 <_malloc_r+0xb0>
 80047d4:	6822      	ldr	r2, [r4, #0]
 80047d6:	1b52      	subs	r2, r2, r5
 80047d8:	d41f      	bmi.n	800481a <_malloc_r+0xd6>
 80047da:	2a0b      	cmp	r2, #11
 80047dc:	d917      	bls.n	800480e <_malloc_r+0xca>
 80047de:	1961      	adds	r1, r4, r5
 80047e0:	42a3      	cmp	r3, r4
 80047e2:	6025      	str	r5, [r4, #0]
 80047e4:	bf18      	it	ne
 80047e6:	6059      	strne	r1, [r3, #4]
 80047e8:	6863      	ldr	r3, [r4, #4]
 80047ea:	bf08      	it	eq
 80047ec:	f8c8 1000 	streq.w	r1, [r8]
 80047f0:	5162      	str	r2, [r4, r5]
 80047f2:	604b      	str	r3, [r1, #4]
 80047f4:	4638      	mov	r0, r7
 80047f6:	f104 060b 	add.w	r6, r4, #11
 80047fa:	f000 f829 	bl	8004850 <__malloc_unlock>
 80047fe:	f026 0607 	bic.w	r6, r6, #7
 8004802:	1d23      	adds	r3, r4, #4
 8004804:	1af2      	subs	r2, r6, r3
 8004806:	d0ae      	beq.n	8004766 <_malloc_r+0x22>
 8004808:	1b9b      	subs	r3, r3, r6
 800480a:	50a3      	str	r3, [r4, r2]
 800480c:	e7ab      	b.n	8004766 <_malloc_r+0x22>
 800480e:	42a3      	cmp	r3, r4
 8004810:	6862      	ldr	r2, [r4, #4]
 8004812:	d1dd      	bne.n	80047d0 <_malloc_r+0x8c>
 8004814:	f8c8 2000 	str.w	r2, [r8]
 8004818:	e7ec      	b.n	80047f4 <_malloc_r+0xb0>
 800481a:	4623      	mov	r3, r4
 800481c:	6864      	ldr	r4, [r4, #4]
 800481e:	e7ac      	b.n	800477a <_malloc_r+0x36>
 8004820:	4634      	mov	r4, r6
 8004822:	6876      	ldr	r6, [r6, #4]
 8004824:	e7b4      	b.n	8004790 <_malloc_r+0x4c>
 8004826:	4613      	mov	r3, r2
 8004828:	e7cc      	b.n	80047c4 <_malloc_r+0x80>
 800482a:	230c      	movs	r3, #12
 800482c:	603b      	str	r3, [r7, #0]
 800482e:	4638      	mov	r0, r7
 8004830:	f000 f80e 	bl	8004850 <__malloc_unlock>
 8004834:	e797      	b.n	8004766 <_malloc_r+0x22>
 8004836:	6025      	str	r5, [r4, #0]
 8004838:	e7dc      	b.n	80047f4 <_malloc_r+0xb0>
 800483a:	605b      	str	r3, [r3, #4]
 800483c:	deff      	udf	#255	; 0xff
 800483e:	bf00      	nop
 8004840:	200009cc 	.word	0x200009cc

08004844 <__malloc_lock>:
 8004844:	4801      	ldr	r0, [pc, #4]	; (800484c <__malloc_lock+0x8>)
 8004846:	f000 bf03 	b.w	8005650 <__retarget_lock_acquire_recursive>
 800484a:	bf00      	nop
 800484c:	20000b14 	.word	0x20000b14

08004850 <__malloc_unlock>:
 8004850:	4801      	ldr	r0, [pc, #4]	; (8004858 <__malloc_unlock+0x8>)
 8004852:	f000 befe 	b.w	8005652 <__retarget_lock_release_recursive>
 8004856:	bf00      	nop
 8004858:	20000b14 	.word	0x20000b14

0800485c <__cvt>:
 800485c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004860:	ec55 4b10 	vmov	r4, r5, d0
 8004864:	2d00      	cmp	r5, #0
 8004866:	460e      	mov	r6, r1
 8004868:	4619      	mov	r1, r3
 800486a:	462b      	mov	r3, r5
 800486c:	bfbb      	ittet	lt
 800486e:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8004872:	461d      	movlt	r5, r3
 8004874:	2300      	movge	r3, #0
 8004876:	232d      	movlt	r3, #45	; 0x2d
 8004878:	700b      	strb	r3, [r1, #0]
 800487a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800487c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8004880:	4691      	mov	r9, r2
 8004882:	f023 0820 	bic.w	r8, r3, #32
 8004886:	bfbc      	itt	lt
 8004888:	4622      	movlt	r2, r4
 800488a:	4614      	movlt	r4, r2
 800488c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8004890:	d005      	beq.n	800489e <__cvt+0x42>
 8004892:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8004896:	d100      	bne.n	800489a <__cvt+0x3e>
 8004898:	3601      	adds	r6, #1
 800489a:	2102      	movs	r1, #2
 800489c:	e000      	b.n	80048a0 <__cvt+0x44>
 800489e:	2103      	movs	r1, #3
 80048a0:	ab03      	add	r3, sp, #12
 80048a2:	9301      	str	r3, [sp, #4]
 80048a4:	ab02      	add	r3, sp, #8
 80048a6:	9300      	str	r3, [sp, #0]
 80048a8:	ec45 4b10 	vmov	d0, r4, r5
 80048ac:	4653      	mov	r3, sl
 80048ae:	4632      	mov	r2, r6
 80048b0:	f000 ff66 	bl	8005780 <_dtoa_r>
 80048b4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80048b8:	4607      	mov	r7, r0
 80048ba:	d102      	bne.n	80048c2 <__cvt+0x66>
 80048bc:	f019 0f01 	tst.w	r9, #1
 80048c0:	d022      	beq.n	8004908 <__cvt+0xac>
 80048c2:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80048c6:	eb07 0906 	add.w	r9, r7, r6
 80048ca:	d110      	bne.n	80048ee <__cvt+0x92>
 80048cc:	783b      	ldrb	r3, [r7, #0]
 80048ce:	2b30      	cmp	r3, #48	; 0x30
 80048d0:	d10a      	bne.n	80048e8 <__cvt+0x8c>
 80048d2:	2200      	movs	r2, #0
 80048d4:	2300      	movs	r3, #0
 80048d6:	4620      	mov	r0, r4
 80048d8:	4629      	mov	r1, r5
 80048da:	f7fc f8f5 	bl	8000ac8 <__aeabi_dcmpeq>
 80048de:	b918      	cbnz	r0, 80048e8 <__cvt+0x8c>
 80048e0:	f1c6 0601 	rsb	r6, r6, #1
 80048e4:	f8ca 6000 	str.w	r6, [sl]
 80048e8:	f8da 3000 	ldr.w	r3, [sl]
 80048ec:	4499      	add	r9, r3
 80048ee:	2200      	movs	r2, #0
 80048f0:	2300      	movs	r3, #0
 80048f2:	4620      	mov	r0, r4
 80048f4:	4629      	mov	r1, r5
 80048f6:	f7fc f8e7 	bl	8000ac8 <__aeabi_dcmpeq>
 80048fa:	b108      	cbz	r0, 8004900 <__cvt+0xa4>
 80048fc:	f8cd 900c 	str.w	r9, [sp, #12]
 8004900:	2230      	movs	r2, #48	; 0x30
 8004902:	9b03      	ldr	r3, [sp, #12]
 8004904:	454b      	cmp	r3, r9
 8004906:	d307      	bcc.n	8004918 <__cvt+0xbc>
 8004908:	9b03      	ldr	r3, [sp, #12]
 800490a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800490c:	1bdb      	subs	r3, r3, r7
 800490e:	4638      	mov	r0, r7
 8004910:	6013      	str	r3, [r2, #0]
 8004912:	b004      	add	sp, #16
 8004914:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004918:	1c59      	adds	r1, r3, #1
 800491a:	9103      	str	r1, [sp, #12]
 800491c:	701a      	strb	r2, [r3, #0]
 800491e:	e7f0      	b.n	8004902 <__cvt+0xa6>

08004920 <__exponent>:
 8004920:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004922:	4603      	mov	r3, r0
 8004924:	2900      	cmp	r1, #0
 8004926:	bfb8      	it	lt
 8004928:	4249      	neglt	r1, r1
 800492a:	f803 2b02 	strb.w	r2, [r3], #2
 800492e:	bfb4      	ite	lt
 8004930:	222d      	movlt	r2, #45	; 0x2d
 8004932:	222b      	movge	r2, #43	; 0x2b
 8004934:	2909      	cmp	r1, #9
 8004936:	7042      	strb	r2, [r0, #1]
 8004938:	dd2a      	ble.n	8004990 <__exponent+0x70>
 800493a:	f10d 0207 	add.w	r2, sp, #7
 800493e:	4617      	mov	r7, r2
 8004940:	260a      	movs	r6, #10
 8004942:	4694      	mov	ip, r2
 8004944:	fb91 f5f6 	sdiv	r5, r1, r6
 8004948:	fb06 1415 	mls	r4, r6, r5, r1
 800494c:	3430      	adds	r4, #48	; 0x30
 800494e:	f80c 4c01 	strb.w	r4, [ip, #-1]
 8004952:	460c      	mov	r4, r1
 8004954:	2c63      	cmp	r4, #99	; 0x63
 8004956:	f102 32ff 	add.w	r2, r2, #4294967295
 800495a:	4629      	mov	r1, r5
 800495c:	dcf1      	bgt.n	8004942 <__exponent+0x22>
 800495e:	3130      	adds	r1, #48	; 0x30
 8004960:	f1ac 0402 	sub.w	r4, ip, #2
 8004964:	f802 1c01 	strb.w	r1, [r2, #-1]
 8004968:	1c41      	adds	r1, r0, #1
 800496a:	4622      	mov	r2, r4
 800496c:	42ba      	cmp	r2, r7
 800496e:	d30a      	bcc.n	8004986 <__exponent+0x66>
 8004970:	f10d 0209 	add.w	r2, sp, #9
 8004974:	eba2 020c 	sub.w	r2, r2, ip
 8004978:	42bc      	cmp	r4, r7
 800497a:	bf88      	it	hi
 800497c:	2200      	movhi	r2, #0
 800497e:	4413      	add	r3, r2
 8004980:	1a18      	subs	r0, r3, r0
 8004982:	b003      	add	sp, #12
 8004984:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004986:	f812 5b01 	ldrb.w	r5, [r2], #1
 800498a:	f801 5f01 	strb.w	r5, [r1, #1]!
 800498e:	e7ed      	b.n	800496c <__exponent+0x4c>
 8004990:	2330      	movs	r3, #48	; 0x30
 8004992:	3130      	adds	r1, #48	; 0x30
 8004994:	7083      	strb	r3, [r0, #2]
 8004996:	70c1      	strb	r1, [r0, #3]
 8004998:	1d03      	adds	r3, r0, #4
 800499a:	e7f1      	b.n	8004980 <__exponent+0x60>

0800499c <_printf_float>:
 800499c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80049a0:	ed2d 8b02 	vpush	{d8}
 80049a4:	b08d      	sub	sp, #52	; 0x34
 80049a6:	460c      	mov	r4, r1
 80049a8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80049ac:	4616      	mov	r6, r2
 80049ae:	461f      	mov	r7, r3
 80049b0:	4605      	mov	r5, r0
 80049b2:	f000 fdc9 	bl	8005548 <_localeconv_r>
 80049b6:	f8d0 a000 	ldr.w	sl, [r0]
 80049ba:	4650      	mov	r0, sl
 80049bc:	f7fb fc58 	bl	8000270 <strlen>
 80049c0:	2300      	movs	r3, #0
 80049c2:	930a      	str	r3, [sp, #40]	; 0x28
 80049c4:	6823      	ldr	r3, [r4, #0]
 80049c6:	9305      	str	r3, [sp, #20]
 80049c8:	f8d8 3000 	ldr.w	r3, [r8]
 80049cc:	f894 b018 	ldrb.w	fp, [r4, #24]
 80049d0:	3307      	adds	r3, #7
 80049d2:	f023 0307 	bic.w	r3, r3, #7
 80049d6:	f103 0208 	add.w	r2, r3, #8
 80049da:	f8c8 2000 	str.w	r2, [r8]
 80049de:	e9d3 8900 	ldrd	r8, r9, [r3]
 80049e2:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80049e6:	9307      	str	r3, [sp, #28]
 80049e8:	f8cd 8018 	str.w	r8, [sp, #24]
 80049ec:	ee08 0a10 	vmov	s16, r0
 80049f0:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 80049f4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80049f8:	4b9e      	ldr	r3, [pc, #632]	; (8004c74 <_printf_float+0x2d8>)
 80049fa:	f04f 32ff 	mov.w	r2, #4294967295
 80049fe:	f7fc f895 	bl	8000b2c <__aeabi_dcmpun>
 8004a02:	bb88      	cbnz	r0, 8004a68 <_printf_float+0xcc>
 8004a04:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8004a08:	4b9a      	ldr	r3, [pc, #616]	; (8004c74 <_printf_float+0x2d8>)
 8004a0a:	f04f 32ff 	mov.w	r2, #4294967295
 8004a0e:	f7fc f86f 	bl	8000af0 <__aeabi_dcmple>
 8004a12:	bb48      	cbnz	r0, 8004a68 <_printf_float+0xcc>
 8004a14:	2200      	movs	r2, #0
 8004a16:	2300      	movs	r3, #0
 8004a18:	4640      	mov	r0, r8
 8004a1a:	4649      	mov	r1, r9
 8004a1c:	f7fc f85e 	bl	8000adc <__aeabi_dcmplt>
 8004a20:	b110      	cbz	r0, 8004a28 <_printf_float+0x8c>
 8004a22:	232d      	movs	r3, #45	; 0x2d
 8004a24:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004a28:	4a93      	ldr	r2, [pc, #588]	; (8004c78 <_printf_float+0x2dc>)
 8004a2a:	4b94      	ldr	r3, [pc, #592]	; (8004c7c <_printf_float+0x2e0>)
 8004a2c:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8004a30:	bf94      	ite	ls
 8004a32:	4690      	movls	r8, r2
 8004a34:	4698      	movhi	r8, r3
 8004a36:	2303      	movs	r3, #3
 8004a38:	6123      	str	r3, [r4, #16]
 8004a3a:	9b05      	ldr	r3, [sp, #20]
 8004a3c:	f023 0304 	bic.w	r3, r3, #4
 8004a40:	6023      	str	r3, [r4, #0]
 8004a42:	f04f 0900 	mov.w	r9, #0
 8004a46:	9700      	str	r7, [sp, #0]
 8004a48:	4633      	mov	r3, r6
 8004a4a:	aa0b      	add	r2, sp, #44	; 0x2c
 8004a4c:	4621      	mov	r1, r4
 8004a4e:	4628      	mov	r0, r5
 8004a50:	f000 f9da 	bl	8004e08 <_printf_common>
 8004a54:	3001      	adds	r0, #1
 8004a56:	f040 8090 	bne.w	8004b7a <_printf_float+0x1de>
 8004a5a:	f04f 30ff 	mov.w	r0, #4294967295
 8004a5e:	b00d      	add	sp, #52	; 0x34
 8004a60:	ecbd 8b02 	vpop	{d8}
 8004a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004a68:	4642      	mov	r2, r8
 8004a6a:	464b      	mov	r3, r9
 8004a6c:	4640      	mov	r0, r8
 8004a6e:	4649      	mov	r1, r9
 8004a70:	f7fc f85c 	bl	8000b2c <__aeabi_dcmpun>
 8004a74:	b140      	cbz	r0, 8004a88 <_printf_float+0xec>
 8004a76:	464b      	mov	r3, r9
 8004a78:	2b00      	cmp	r3, #0
 8004a7a:	bfbc      	itt	lt
 8004a7c:	232d      	movlt	r3, #45	; 0x2d
 8004a7e:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8004a82:	4a7f      	ldr	r2, [pc, #508]	; (8004c80 <_printf_float+0x2e4>)
 8004a84:	4b7f      	ldr	r3, [pc, #508]	; (8004c84 <_printf_float+0x2e8>)
 8004a86:	e7d1      	b.n	8004a2c <_printf_float+0x90>
 8004a88:	6863      	ldr	r3, [r4, #4]
 8004a8a:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8004a8e:	9206      	str	r2, [sp, #24]
 8004a90:	1c5a      	adds	r2, r3, #1
 8004a92:	d13f      	bne.n	8004b14 <_printf_float+0x178>
 8004a94:	2306      	movs	r3, #6
 8004a96:	6063      	str	r3, [r4, #4]
 8004a98:	9b05      	ldr	r3, [sp, #20]
 8004a9a:	6861      	ldr	r1, [r4, #4]
 8004a9c:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8004aa0:	2300      	movs	r3, #0
 8004aa2:	9303      	str	r3, [sp, #12]
 8004aa4:	ab0a      	add	r3, sp, #40	; 0x28
 8004aa6:	e9cd b301 	strd	fp, r3, [sp, #4]
 8004aaa:	ab09      	add	r3, sp, #36	; 0x24
 8004aac:	ec49 8b10 	vmov	d0, r8, r9
 8004ab0:	9300      	str	r3, [sp, #0]
 8004ab2:	6022      	str	r2, [r4, #0]
 8004ab4:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8004ab8:	4628      	mov	r0, r5
 8004aba:	f7ff fecf 	bl	800485c <__cvt>
 8004abe:	9b06      	ldr	r3, [sp, #24]
 8004ac0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8004ac2:	2b47      	cmp	r3, #71	; 0x47
 8004ac4:	4680      	mov	r8, r0
 8004ac6:	d108      	bne.n	8004ada <_printf_float+0x13e>
 8004ac8:	1cc8      	adds	r0, r1, #3
 8004aca:	db02      	blt.n	8004ad2 <_printf_float+0x136>
 8004acc:	6863      	ldr	r3, [r4, #4]
 8004ace:	4299      	cmp	r1, r3
 8004ad0:	dd41      	ble.n	8004b56 <_printf_float+0x1ba>
 8004ad2:	f1ab 0302 	sub.w	r3, fp, #2
 8004ad6:	fa5f fb83 	uxtb.w	fp, r3
 8004ada:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8004ade:	d820      	bhi.n	8004b22 <_printf_float+0x186>
 8004ae0:	3901      	subs	r1, #1
 8004ae2:	465a      	mov	r2, fp
 8004ae4:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8004ae8:	9109      	str	r1, [sp, #36]	; 0x24
 8004aea:	f7ff ff19 	bl	8004920 <__exponent>
 8004aee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004af0:	1813      	adds	r3, r2, r0
 8004af2:	2a01      	cmp	r2, #1
 8004af4:	4681      	mov	r9, r0
 8004af6:	6123      	str	r3, [r4, #16]
 8004af8:	dc02      	bgt.n	8004b00 <_printf_float+0x164>
 8004afa:	6822      	ldr	r2, [r4, #0]
 8004afc:	07d2      	lsls	r2, r2, #31
 8004afe:	d501      	bpl.n	8004b04 <_printf_float+0x168>
 8004b00:	3301      	adds	r3, #1
 8004b02:	6123      	str	r3, [r4, #16]
 8004b04:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8004b08:	2b00      	cmp	r3, #0
 8004b0a:	d09c      	beq.n	8004a46 <_printf_float+0xaa>
 8004b0c:	232d      	movs	r3, #45	; 0x2d
 8004b0e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004b12:	e798      	b.n	8004a46 <_printf_float+0xaa>
 8004b14:	9a06      	ldr	r2, [sp, #24]
 8004b16:	2a47      	cmp	r2, #71	; 0x47
 8004b18:	d1be      	bne.n	8004a98 <_printf_float+0xfc>
 8004b1a:	2b00      	cmp	r3, #0
 8004b1c:	d1bc      	bne.n	8004a98 <_printf_float+0xfc>
 8004b1e:	2301      	movs	r3, #1
 8004b20:	e7b9      	b.n	8004a96 <_printf_float+0xfa>
 8004b22:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8004b26:	d118      	bne.n	8004b5a <_printf_float+0x1be>
 8004b28:	2900      	cmp	r1, #0
 8004b2a:	6863      	ldr	r3, [r4, #4]
 8004b2c:	dd0b      	ble.n	8004b46 <_printf_float+0x1aa>
 8004b2e:	6121      	str	r1, [r4, #16]
 8004b30:	b913      	cbnz	r3, 8004b38 <_printf_float+0x19c>
 8004b32:	6822      	ldr	r2, [r4, #0]
 8004b34:	07d0      	lsls	r0, r2, #31
 8004b36:	d502      	bpl.n	8004b3e <_printf_float+0x1a2>
 8004b38:	3301      	adds	r3, #1
 8004b3a:	440b      	add	r3, r1
 8004b3c:	6123      	str	r3, [r4, #16]
 8004b3e:	65a1      	str	r1, [r4, #88]	; 0x58
 8004b40:	f04f 0900 	mov.w	r9, #0
 8004b44:	e7de      	b.n	8004b04 <_printf_float+0x168>
 8004b46:	b913      	cbnz	r3, 8004b4e <_printf_float+0x1b2>
 8004b48:	6822      	ldr	r2, [r4, #0]
 8004b4a:	07d2      	lsls	r2, r2, #31
 8004b4c:	d501      	bpl.n	8004b52 <_printf_float+0x1b6>
 8004b4e:	3302      	adds	r3, #2
 8004b50:	e7f4      	b.n	8004b3c <_printf_float+0x1a0>
 8004b52:	2301      	movs	r3, #1
 8004b54:	e7f2      	b.n	8004b3c <_printf_float+0x1a0>
 8004b56:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8004b5a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004b5c:	4299      	cmp	r1, r3
 8004b5e:	db05      	blt.n	8004b6c <_printf_float+0x1d0>
 8004b60:	6823      	ldr	r3, [r4, #0]
 8004b62:	6121      	str	r1, [r4, #16]
 8004b64:	07d8      	lsls	r0, r3, #31
 8004b66:	d5ea      	bpl.n	8004b3e <_printf_float+0x1a2>
 8004b68:	1c4b      	adds	r3, r1, #1
 8004b6a:	e7e7      	b.n	8004b3c <_printf_float+0x1a0>
 8004b6c:	2900      	cmp	r1, #0
 8004b6e:	bfd4      	ite	le
 8004b70:	f1c1 0202 	rsble	r2, r1, #2
 8004b74:	2201      	movgt	r2, #1
 8004b76:	4413      	add	r3, r2
 8004b78:	e7e0      	b.n	8004b3c <_printf_float+0x1a0>
 8004b7a:	6823      	ldr	r3, [r4, #0]
 8004b7c:	055a      	lsls	r2, r3, #21
 8004b7e:	d407      	bmi.n	8004b90 <_printf_float+0x1f4>
 8004b80:	6923      	ldr	r3, [r4, #16]
 8004b82:	4642      	mov	r2, r8
 8004b84:	4631      	mov	r1, r6
 8004b86:	4628      	mov	r0, r5
 8004b88:	47b8      	blx	r7
 8004b8a:	3001      	adds	r0, #1
 8004b8c:	d12c      	bne.n	8004be8 <_printf_float+0x24c>
 8004b8e:	e764      	b.n	8004a5a <_printf_float+0xbe>
 8004b90:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8004b94:	f240 80e0 	bls.w	8004d58 <_printf_float+0x3bc>
 8004b98:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8004b9c:	2200      	movs	r2, #0
 8004b9e:	2300      	movs	r3, #0
 8004ba0:	f7fb ff92 	bl	8000ac8 <__aeabi_dcmpeq>
 8004ba4:	2800      	cmp	r0, #0
 8004ba6:	d034      	beq.n	8004c12 <_printf_float+0x276>
 8004ba8:	4a37      	ldr	r2, [pc, #220]	; (8004c88 <_printf_float+0x2ec>)
 8004baa:	2301      	movs	r3, #1
 8004bac:	4631      	mov	r1, r6
 8004bae:	4628      	mov	r0, r5
 8004bb0:	47b8      	blx	r7
 8004bb2:	3001      	adds	r0, #1
 8004bb4:	f43f af51 	beq.w	8004a5a <_printf_float+0xbe>
 8004bb8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8004bbc:	429a      	cmp	r2, r3
 8004bbe:	db02      	blt.n	8004bc6 <_printf_float+0x22a>
 8004bc0:	6823      	ldr	r3, [r4, #0]
 8004bc2:	07d8      	lsls	r0, r3, #31
 8004bc4:	d510      	bpl.n	8004be8 <_printf_float+0x24c>
 8004bc6:	ee18 3a10 	vmov	r3, s16
 8004bca:	4652      	mov	r2, sl
 8004bcc:	4631      	mov	r1, r6
 8004bce:	4628      	mov	r0, r5
 8004bd0:	47b8      	blx	r7
 8004bd2:	3001      	adds	r0, #1
 8004bd4:	f43f af41 	beq.w	8004a5a <_printf_float+0xbe>
 8004bd8:	f04f 0800 	mov.w	r8, #0
 8004bdc:	f104 091a 	add.w	r9, r4, #26
 8004be0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004be2:	3b01      	subs	r3, #1
 8004be4:	4543      	cmp	r3, r8
 8004be6:	dc09      	bgt.n	8004bfc <_printf_float+0x260>
 8004be8:	6823      	ldr	r3, [r4, #0]
 8004bea:	079b      	lsls	r3, r3, #30
 8004bec:	f100 8107 	bmi.w	8004dfe <_printf_float+0x462>
 8004bf0:	68e0      	ldr	r0, [r4, #12]
 8004bf2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004bf4:	4298      	cmp	r0, r3
 8004bf6:	bfb8      	it	lt
 8004bf8:	4618      	movlt	r0, r3
 8004bfa:	e730      	b.n	8004a5e <_printf_float+0xc2>
 8004bfc:	2301      	movs	r3, #1
 8004bfe:	464a      	mov	r2, r9
 8004c00:	4631      	mov	r1, r6
 8004c02:	4628      	mov	r0, r5
 8004c04:	47b8      	blx	r7
 8004c06:	3001      	adds	r0, #1
 8004c08:	f43f af27 	beq.w	8004a5a <_printf_float+0xbe>
 8004c0c:	f108 0801 	add.w	r8, r8, #1
 8004c10:	e7e6      	b.n	8004be0 <_printf_float+0x244>
 8004c12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c14:	2b00      	cmp	r3, #0
 8004c16:	dc39      	bgt.n	8004c8c <_printf_float+0x2f0>
 8004c18:	4a1b      	ldr	r2, [pc, #108]	; (8004c88 <_printf_float+0x2ec>)
 8004c1a:	2301      	movs	r3, #1
 8004c1c:	4631      	mov	r1, r6
 8004c1e:	4628      	mov	r0, r5
 8004c20:	47b8      	blx	r7
 8004c22:	3001      	adds	r0, #1
 8004c24:	f43f af19 	beq.w	8004a5a <_printf_float+0xbe>
 8004c28:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8004c2c:	4313      	orrs	r3, r2
 8004c2e:	d102      	bne.n	8004c36 <_printf_float+0x29a>
 8004c30:	6823      	ldr	r3, [r4, #0]
 8004c32:	07d9      	lsls	r1, r3, #31
 8004c34:	d5d8      	bpl.n	8004be8 <_printf_float+0x24c>
 8004c36:	ee18 3a10 	vmov	r3, s16
 8004c3a:	4652      	mov	r2, sl
 8004c3c:	4631      	mov	r1, r6
 8004c3e:	4628      	mov	r0, r5
 8004c40:	47b8      	blx	r7
 8004c42:	3001      	adds	r0, #1
 8004c44:	f43f af09 	beq.w	8004a5a <_printf_float+0xbe>
 8004c48:	f04f 0900 	mov.w	r9, #0
 8004c4c:	f104 0a1a 	add.w	sl, r4, #26
 8004c50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c52:	425b      	negs	r3, r3
 8004c54:	454b      	cmp	r3, r9
 8004c56:	dc01      	bgt.n	8004c5c <_printf_float+0x2c0>
 8004c58:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004c5a:	e792      	b.n	8004b82 <_printf_float+0x1e6>
 8004c5c:	2301      	movs	r3, #1
 8004c5e:	4652      	mov	r2, sl
 8004c60:	4631      	mov	r1, r6
 8004c62:	4628      	mov	r0, r5
 8004c64:	47b8      	blx	r7
 8004c66:	3001      	adds	r0, #1
 8004c68:	f43f aef7 	beq.w	8004a5a <_printf_float+0xbe>
 8004c6c:	f109 0901 	add.w	r9, r9, #1
 8004c70:	e7ee      	b.n	8004c50 <_printf_float+0x2b4>
 8004c72:	bf00      	nop
 8004c74:	7fefffff 	.word	0x7fefffff
 8004c78:	08008ce4 	.word	0x08008ce4
 8004c7c:	08008ce8 	.word	0x08008ce8
 8004c80:	08008cec 	.word	0x08008cec
 8004c84:	08008cf0 	.word	0x08008cf0
 8004c88:	08007511 	.word	0x08007511
 8004c8c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004c8e:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004c90:	429a      	cmp	r2, r3
 8004c92:	bfa8      	it	ge
 8004c94:	461a      	movge	r2, r3
 8004c96:	2a00      	cmp	r2, #0
 8004c98:	4691      	mov	r9, r2
 8004c9a:	dc37      	bgt.n	8004d0c <_printf_float+0x370>
 8004c9c:	f04f 0b00 	mov.w	fp, #0
 8004ca0:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8004ca4:	f104 021a 	add.w	r2, r4, #26
 8004ca8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8004caa:	9305      	str	r3, [sp, #20]
 8004cac:	eba3 0309 	sub.w	r3, r3, r9
 8004cb0:	455b      	cmp	r3, fp
 8004cb2:	dc33      	bgt.n	8004d1c <_printf_float+0x380>
 8004cb4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8004cb8:	429a      	cmp	r2, r3
 8004cba:	db3b      	blt.n	8004d34 <_printf_float+0x398>
 8004cbc:	6823      	ldr	r3, [r4, #0]
 8004cbe:	07da      	lsls	r2, r3, #31
 8004cc0:	d438      	bmi.n	8004d34 <_printf_float+0x398>
 8004cc2:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8004cc6:	eba2 0903 	sub.w	r9, r2, r3
 8004cca:	9b05      	ldr	r3, [sp, #20]
 8004ccc:	1ad2      	subs	r2, r2, r3
 8004cce:	4591      	cmp	r9, r2
 8004cd0:	bfa8      	it	ge
 8004cd2:	4691      	movge	r9, r2
 8004cd4:	f1b9 0f00 	cmp.w	r9, #0
 8004cd8:	dc35      	bgt.n	8004d46 <_printf_float+0x3aa>
 8004cda:	f04f 0800 	mov.w	r8, #0
 8004cde:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8004ce2:	f104 0a1a 	add.w	sl, r4, #26
 8004ce6:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8004cea:	1a9b      	subs	r3, r3, r2
 8004cec:	eba3 0309 	sub.w	r3, r3, r9
 8004cf0:	4543      	cmp	r3, r8
 8004cf2:	f77f af79 	ble.w	8004be8 <_printf_float+0x24c>
 8004cf6:	2301      	movs	r3, #1
 8004cf8:	4652      	mov	r2, sl
 8004cfa:	4631      	mov	r1, r6
 8004cfc:	4628      	mov	r0, r5
 8004cfe:	47b8      	blx	r7
 8004d00:	3001      	adds	r0, #1
 8004d02:	f43f aeaa 	beq.w	8004a5a <_printf_float+0xbe>
 8004d06:	f108 0801 	add.w	r8, r8, #1
 8004d0a:	e7ec      	b.n	8004ce6 <_printf_float+0x34a>
 8004d0c:	4613      	mov	r3, r2
 8004d0e:	4631      	mov	r1, r6
 8004d10:	4642      	mov	r2, r8
 8004d12:	4628      	mov	r0, r5
 8004d14:	47b8      	blx	r7
 8004d16:	3001      	adds	r0, #1
 8004d18:	d1c0      	bne.n	8004c9c <_printf_float+0x300>
 8004d1a:	e69e      	b.n	8004a5a <_printf_float+0xbe>
 8004d1c:	2301      	movs	r3, #1
 8004d1e:	4631      	mov	r1, r6
 8004d20:	4628      	mov	r0, r5
 8004d22:	9205      	str	r2, [sp, #20]
 8004d24:	47b8      	blx	r7
 8004d26:	3001      	adds	r0, #1
 8004d28:	f43f ae97 	beq.w	8004a5a <_printf_float+0xbe>
 8004d2c:	9a05      	ldr	r2, [sp, #20]
 8004d2e:	f10b 0b01 	add.w	fp, fp, #1
 8004d32:	e7b9      	b.n	8004ca8 <_printf_float+0x30c>
 8004d34:	ee18 3a10 	vmov	r3, s16
 8004d38:	4652      	mov	r2, sl
 8004d3a:	4631      	mov	r1, r6
 8004d3c:	4628      	mov	r0, r5
 8004d3e:	47b8      	blx	r7
 8004d40:	3001      	adds	r0, #1
 8004d42:	d1be      	bne.n	8004cc2 <_printf_float+0x326>
 8004d44:	e689      	b.n	8004a5a <_printf_float+0xbe>
 8004d46:	9a05      	ldr	r2, [sp, #20]
 8004d48:	464b      	mov	r3, r9
 8004d4a:	4442      	add	r2, r8
 8004d4c:	4631      	mov	r1, r6
 8004d4e:	4628      	mov	r0, r5
 8004d50:	47b8      	blx	r7
 8004d52:	3001      	adds	r0, #1
 8004d54:	d1c1      	bne.n	8004cda <_printf_float+0x33e>
 8004d56:	e680      	b.n	8004a5a <_printf_float+0xbe>
 8004d58:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004d5a:	2a01      	cmp	r2, #1
 8004d5c:	dc01      	bgt.n	8004d62 <_printf_float+0x3c6>
 8004d5e:	07db      	lsls	r3, r3, #31
 8004d60:	d53a      	bpl.n	8004dd8 <_printf_float+0x43c>
 8004d62:	2301      	movs	r3, #1
 8004d64:	4642      	mov	r2, r8
 8004d66:	4631      	mov	r1, r6
 8004d68:	4628      	mov	r0, r5
 8004d6a:	47b8      	blx	r7
 8004d6c:	3001      	adds	r0, #1
 8004d6e:	f43f ae74 	beq.w	8004a5a <_printf_float+0xbe>
 8004d72:	ee18 3a10 	vmov	r3, s16
 8004d76:	4652      	mov	r2, sl
 8004d78:	4631      	mov	r1, r6
 8004d7a:	4628      	mov	r0, r5
 8004d7c:	47b8      	blx	r7
 8004d7e:	3001      	adds	r0, #1
 8004d80:	f43f ae6b 	beq.w	8004a5a <_printf_float+0xbe>
 8004d84:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8004d88:	2200      	movs	r2, #0
 8004d8a:	2300      	movs	r3, #0
 8004d8c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8004d90:	f7fb fe9a 	bl	8000ac8 <__aeabi_dcmpeq>
 8004d94:	b9d8      	cbnz	r0, 8004dce <_printf_float+0x432>
 8004d96:	f10a 33ff 	add.w	r3, sl, #4294967295
 8004d9a:	f108 0201 	add.w	r2, r8, #1
 8004d9e:	4631      	mov	r1, r6
 8004da0:	4628      	mov	r0, r5
 8004da2:	47b8      	blx	r7
 8004da4:	3001      	adds	r0, #1
 8004da6:	d10e      	bne.n	8004dc6 <_printf_float+0x42a>
 8004da8:	e657      	b.n	8004a5a <_printf_float+0xbe>
 8004daa:	2301      	movs	r3, #1
 8004dac:	4652      	mov	r2, sl
 8004dae:	4631      	mov	r1, r6
 8004db0:	4628      	mov	r0, r5
 8004db2:	47b8      	blx	r7
 8004db4:	3001      	adds	r0, #1
 8004db6:	f43f ae50 	beq.w	8004a5a <_printf_float+0xbe>
 8004dba:	f108 0801 	add.w	r8, r8, #1
 8004dbe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004dc0:	3b01      	subs	r3, #1
 8004dc2:	4543      	cmp	r3, r8
 8004dc4:	dcf1      	bgt.n	8004daa <_printf_float+0x40e>
 8004dc6:	464b      	mov	r3, r9
 8004dc8:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8004dcc:	e6da      	b.n	8004b84 <_printf_float+0x1e8>
 8004dce:	f04f 0800 	mov.w	r8, #0
 8004dd2:	f104 0a1a 	add.w	sl, r4, #26
 8004dd6:	e7f2      	b.n	8004dbe <_printf_float+0x422>
 8004dd8:	2301      	movs	r3, #1
 8004dda:	4642      	mov	r2, r8
 8004ddc:	e7df      	b.n	8004d9e <_printf_float+0x402>
 8004dde:	2301      	movs	r3, #1
 8004de0:	464a      	mov	r2, r9
 8004de2:	4631      	mov	r1, r6
 8004de4:	4628      	mov	r0, r5
 8004de6:	47b8      	blx	r7
 8004de8:	3001      	adds	r0, #1
 8004dea:	f43f ae36 	beq.w	8004a5a <_printf_float+0xbe>
 8004dee:	f108 0801 	add.w	r8, r8, #1
 8004df2:	68e3      	ldr	r3, [r4, #12]
 8004df4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004df6:	1a5b      	subs	r3, r3, r1
 8004df8:	4543      	cmp	r3, r8
 8004dfa:	dcf0      	bgt.n	8004dde <_printf_float+0x442>
 8004dfc:	e6f8      	b.n	8004bf0 <_printf_float+0x254>
 8004dfe:	f04f 0800 	mov.w	r8, #0
 8004e02:	f104 0919 	add.w	r9, r4, #25
 8004e06:	e7f4      	b.n	8004df2 <_printf_float+0x456>

08004e08 <_printf_common>:
 8004e08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e0c:	4616      	mov	r6, r2
 8004e0e:	4699      	mov	r9, r3
 8004e10:	688a      	ldr	r2, [r1, #8]
 8004e12:	690b      	ldr	r3, [r1, #16]
 8004e14:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004e18:	4293      	cmp	r3, r2
 8004e1a:	bfb8      	it	lt
 8004e1c:	4613      	movlt	r3, r2
 8004e1e:	6033      	str	r3, [r6, #0]
 8004e20:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004e24:	4607      	mov	r7, r0
 8004e26:	460c      	mov	r4, r1
 8004e28:	b10a      	cbz	r2, 8004e2e <_printf_common+0x26>
 8004e2a:	3301      	adds	r3, #1
 8004e2c:	6033      	str	r3, [r6, #0]
 8004e2e:	6823      	ldr	r3, [r4, #0]
 8004e30:	0699      	lsls	r1, r3, #26
 8004e32:	bf42      	ittt	mi
 8004e34:	6833      	ldrmi	r3, [r6, #0]
 8004e36:	3302      	addmi	r3, #2
 8004e38:	6033      	strmi	r3, [r6, #0]
 8004e3a:	6825      	ldr	r5, [r4, #0]
 8004e3c:	f015 0506 	ands.w	r5, r5, #6
 8004e40:	d106      	bne.n	8004e50 <_printf_common+0x48>
 8004e42:	f104 0a19 	add.w	sl, r4, #25
 8004e46:	68e3      	ldr	r3, [r4, #12]
 8004e48:	6832      	ldr	r2, [r6, #0]
 8004e4a:	1a9b      	subs	r3, r3, r2
 8004e4c:	42ab      	cmp	r3, r5
 8004e4e:	dc26      	bgt.n	8004e9e <_printf_common+0x96>
 8004e50:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004e54:	1e13      	subs	r3, r2, #0
 8004e56:	6822      	ldr	r2, [r4, #0]
 8004e58:	bf18      	it	ne
 8004e5a:	2301      	movne	r3, #1
 8004e5c:	0692      	lsls	r2, r2, #26
 8004e5e:	d42b      	bmi.n	8004eb8 <_printf_common+0xb0>
 8004e60:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004e64:	4649      	mov	r1, r9
 8004e66:	4638      	mov	r0, r7
 8004e68:	47c0      	blx	r8
 8004e6a:	3001      	adds	r0, #1
 8004e6c:	d01e      	beq.n	8004eac <_printf_common+0xa4>
 8004e6e:	6823      	ldr	r3, [r4, #0]
 8004e70:	6922      	ldr	r2, [r4, #16]
 8004e72:	f003 0306 	and.w	r3, r3, #6
 8004e76:	2b04      	cmp	r3, #4
 8004e78:	bf02      	ittt	eq
 8004e7a:	68e5      	ldreq	r5, [r4, #12]
 8004e7c:	6833      	ldreq	r3, [r6, #0]
 8004e7e:	1aed      	subeq	r5, r5, r3
 8004e80:	68a3      	ldr	r3, [r4, #8]
 8004e82:	bf0c      	ite	eq
 8004e84:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004e88:	2500      	movne	r5, #0
 8004e8a:	4293      	cmp	r3, r2
 8004e8c:	bfc4      	itt	gt
 8004e8e:	1a9b      	subgt	r3, r3, r2
 8004e90:	18ed      	addgt	r5, r5, r3
 8004e92:	2600      	movs	r6, #0
 8004e94:	341a      	adds	r4, #26
 8004e96:	42b5      	cmp	r5, r6
 8004e98:	d11a      	bne.n	8004ed0 <_printf_common+0xc8>
 8004e9a:	2000      	movs	r0, #0
 8004e9c:	e008      	b.n	8004eb0 <_printf_common+0xa8>
 8004e9e:	2301      	movs	r3, #1
 8004ea0:	4652      	mov	r2, sl
 8004ea2:	4649      	mov	r1, r9
 8004ea4:	4638      	mov	r0, r7
 8004ea6:	47c0      	blx	r8
 8004ea8:	3001      	adds	r0, #1
 8004eaa:	d103      	bne.n	8004eb4 <_printf_common+0xac>
 8004eac:	f04f 30ff 	mov.w	r0, #4294967295
 8004eb0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004eb4:	3501      	adds	r5, #1
 8004eb6:	e7c6      	b.n	8004e46 <_printf_common+0x3e>
 8004eb8:	18e1      	adds	r1, r4, r3
 8004eba:	1c5a      	adds	r2, r3, #1
 8004ebc:	2030      	movs	r0, #48	; 0x30
 8004ebe:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8004ec2:	4422      	add	r2, r4
 8004ec4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004ec8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004ecc:	3302      	adds	r3, #2
 8004ece:	e7c7      	b.n	8004e60 <_printf_common+0x58>
 8004ed0:	2301      	movs	r3, #1
 8004ed2:	4622      	mov	r2, r4
 8004ed4:	4649      	mov	r1, r9
 8004ed6:	4638      	mov	r0, r7
 8004ed8:	47c0      	blx	r8
 8004eda:	3001      	adds	r0, #1
 8004edc:	d0e6      	beq.n	8004eac <_printf_common+0xa4>
 8004ede:	3601      	adds	r6, #1
 8004ee0:	e7d9      	b.n	8004e96 <_printf_common+0x8e>
	...

08004ee4 <_printf_i>:
 8004ee4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004ee8:	7e0f      	ldrb	r7, [r1, #24]
 8004eea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8004eec:	2f78      	cmp	r7, #120	; 0x78
 8004eee:	4691      	mov	r9, r2
 8004ef0:	4680      	mov	r8, r0
 8004ef2:	460c      	mov	r4, r1
 8004ef4:	469a      	mov	sl, r3
 8004ef6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8004efa:	d807      	bhi.n	8004f0c <_printf_i+0x28>
 8004efc:	2f62      	cmp	r7, #98	; 0x62
 8004efe:	d80a      	bhi.n	8004f16 <_printf_i+0x32>
 8004f00:	2f00      	cmp	r7, #0
 8004f02:	f000 80d4 	beq.w	80050ae <_printf_i+0x1ca>
 8004f06:	2f58      	cmp	r7, #88	; 0x58
 8004f08:	f000 80c0 	beq.w	800508c <_printf_i+0x1a8>
 8004f0c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004f10:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8004f14:	e03a      	b.n	8004f8c <_printf_i+0xa8>
 8004f16:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004f1a:	2b15      	cmp	r3, #21
 8004f1c:	d8f6      	bhi.n	8004f0c <_printf_i+0x28>
 8004f1e:	a101      	add	r1, pc, #4	; (adr r1, 8004f24 <_printf_i+0x40>)
 8004f20:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8004f24:	08004f7d 	.word	0x08004f7d
 8004f28:	08004f91 	.word	0x08004f91
 8004f2c:	08004f0d 	.word	0x08004f0d
 8004f30:	08004f0d 	.word	0x08004f0d
 8004f34:	08004f0d 	.word	0x08004f0d
 8004f38:	08004f0d 	.word	0x08004f0d
 8004f3c:	08004f91 	.word	0x08004f91
 8004f40:	08004f0d 	.word	0x08004f0d
 8004f44:	08004f0d 	.word	0x08004f0d
 8004f48:	08004f0d 	.word	0x08004f0d
 8004f4c:	08004f0d 	.word	0x08004f0d
 8004f50:	08005095 	.word	0x08005095
 8004f54:	08004fbd 	.word	0x08004fbd
 8004f58:	0800504f 	.word	0x0800504f
 8004f5c:	08004f0d 	.word	0x08004f0d
 8004f60:	08004f0d 	.word	0x08004f0d
 8004f64:	080050b7 	.word	0x080050b7
 8004f68:	08004f0d 	.word	0x08004f0d
 8004f6c:	08004fbd 	.word	0x08004fbd
 8004f70:	08004f0d 	.word	0x08004f0d
 8004f74:	08004f0d 	.word	0x08004f0d
 8004f78:	08005057 	.word	0x08005057
 8004f7c:	682b      	ldr	r3, [r5, #0]
 8004f7e:	1d1a      	adds	r2, r3, #4
 8004f80:	681b      	ldr	r3, [r3, #0]
 8004f82:	602a      	str	r2, [r5, #0]
 8004f84:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004f88:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004f8c:	2301      	movs	r3, #1
 8004f8e:	e09f      	b.n	80050d0 <_printf_i+0x1ec>
 8004f90:	6820      	ldr	r0, [r4, #0]
 8004f92:	682b      	ldr	r3, [r5, #0]
 8004f94:	0607      	lsls	r7, r0, #24
 8004f96:	f103 0104 	add.w	r1, r3, #4
 8004f9a:	6029      	str	r1, [r5, #0]
 8004f9c:	d501      	bpl.n	8004fa2 <_printf_i+0xbe>
 8004f9e:	681e      	ldr	r6, [r3, #0]
 8004fa0:	e003      	b.n	8004faa <_printf_i+0xc6>
 8004fa2:	0646      	lsls	r6, r0, #25
 8004fa4:	d5fb      	bpl.n	8004f9e <_printf_i+0xba>
 8004fa6:	f9b3 6000 	ldrsh.w	r6, [r3]
 8004faa:	2e00      	cmp	r6, #0
 8004fac:	da03      	bge.n	8004fb6 <_printf_i+0xd2>
 8004fae:	232d      	movs	r3, #45	; 0x2d
 8004fb0:	4276      	negs	r6, r6
 8004fb2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004fb6:	485a      	ldr	r0, [pc, #360]	; (8005120 <_printf_i+0x23c>)
 8004fb8:	230a      	movs	r3, #10
 8004fba:	e012      	b.n	8004fe2 <_printf_i+0xfe>
 8004fbc:	682b      	ldr	r3, [r5, #0]
 8004fbe:	6820      	ldr	r0, [r4, #0]
 8004fc0:	1d19      	adds	r1, r3, #4
 8004fc2:	6029      	str	r1, [r5, #0]
 8004fc4:	0605      	lsls	r5, r0, #24
 8004fc6:	d501      	bpl.n	8004fcc <_printf_i+0xe8>
 8004fc8:	681e      	ldr	r6, [r3, #0]
 8004fca:	e002      	b.n	8004fd2 <_printf_i+0xee>
 8004fcc:	0641      	lsls	r1, r0, #25
 8004fce:	d5fb      	bpl.n	8004fc8 <_printf_i+0xe4>
 8004fd0:	881e      	ldrh	r6, [r3, #0]
 8004fd2:	4853      	ldr	r0, [pc, #332]	; (8005120 <_printf_i+0x23c>)
 8004fd4:	2f6f      	cmp	r7, #111	; 0x6f
 8004fd6:	bf0c      	ite	eq
 8004fd8:	2308      	moveq	r3, #8
 8004fda:	230a      	movne	r3, #10
 8004fdc:	2100      	movs	r1, #0
 8004fde:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8004fe2:	6865      	ldr	r5, [r4, #4]
 8004fe4:	60a5      	str	r5, [r4, #8]
 8004fe6:	2d00      	cmp	r5, #0
 8004fe8:	bfa2      	ittt	ge
 8004fea:	6821      	ldrge	r1, [r4, #0]
 8004fec:	f021 0104 	bicge.w	r1, r1, #4
 8004ff0:	6021      	strge	r1, [r4, #0]
 8004ff2:	b90e      	cbnz	r6, 8004ff8 <_printf_i+0x114>
 8004ff4:	2d00      	cmp	r5, #0
 8004ff6:	d04b      	beq.n	8005090 <_printf_i+0x1ac>
 8004ff8:	4615      	mov	r5, r2
 8004ffa:	fbb6 f1f3 	udiv	r1, r6, r3
 8004ffe:	fb03 6711 	mls	r7, r3, r1, r6
 8005002:	5dc7      	ldrb	r7, [r0, r7]
 8005004:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8005008:	4637      	mov	r7, r6
 800500a:	42bb      	cmp	r3, r7
 800500c:	460e      	mov	r6, r1
 800500e:	d9f4      	bls.n	8004ffa <_printf_i+0x116>
 8005010:	2b08      	cmp	r3, #8
 8005012:	d10b      	bne.n	800502c <_printf_i+0x148>
 8005014:	6823      	ldr	r3, [r4, #0]
 8005016:	07de      	lsls	r6, r3, #31
 8005018:	d508      	bpl.n	800502c <_printf_i+0x148>
 800501a:	6923      	ldr	r3, [r4, #16]
 800501c:	6861      	ldr	r1, [r4, #4]
 800501e:	4299      	cmp	r1, r3
 8005020:	bfde      	ittt	le
 8005022:	2330      	movle	r3, #48	; 0x30
 8005024:	f805 3c01 	strble.w	r3, [r5, #-1]
 8005028:	f105 35ff 	addle.w	r5, r5, #4294967295
 800502c:	1b52      	subs	r2, r2, r5
 800502e:	6122      	str	r2, [r4, #16]
 8005030:	f8cd a000 	str.w	sl, [sp]
 8005034:	464b      	mov	r3, r9
 8005036:	aa03      	add	r2, sp, #12
 8005038:	4621      	mov	r1, r4
 800503a:	4640      	mov	r0, r8
 800503c:	f7ff fee4 	bl	8004e08 <_printf_common>
 8005040:	3001      	adds	r0, #1
 8005042:	d14a      	bne.n	80050da <_printf_i+0x1f6>
 8005044:	f04f 30ff 	mov.w	r0, #4294967295
 8005048:	b004      	add	sp, #16
 800504a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800504e:	6823      	ldr	r3, [r4, #0]
 8005050:	f043 0320 	orr.w	r3, r3, #32
 8005054:	6023      	str	r3, [r4, #0]
 8005056:	4833      	ldr	r0, [pc, #204]	; (8005124 <_printf_i+0x240>)
 8005058:	2778      	movs	r7, #120	; 0x78
 800505a:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800505e:	6823      	ldr	r3, [r4, #0]
 8005060:	6829      	ldr	r1, [r5, #0]
 8005062:	061f      	lsls	r7, r3, #24
 8005064:	f851 6b04 	ldr.w	r6, [r1], #4
 8005068:	d402      	bmi.n	8005070 <_printf_i+0x18c>
 800506a:	065f      	lsls	r7, r3, #25
 800506c:	bf48      	it	mi
 800506e:	b2b6      	uxthmi	r6, r6
 8005070:	07df      	lsls	r7, r3, #31
 8005072:	bf48      	it	mi
 8005074:	f043 0320 	orrmi.w	r3, r3, #32
 8005078:	6029      	str	r1, [r5, #0]
 800507a:	bf48      	it	mi
 800507c:	6023      	strmi	r3, [r4, #0]
 800507e:	b91e      	cbnz	r6, 8005088 <_printf_i+0x1a4>
 8005080:	6823      	ldr	r3, [r4, #0]
 8005082:	f023 0320 	bic.w	r3, r3, #32
 8005086:	6023      	str	r3, [r4, #0]
 8005088:	2310      	movs	r3, #16
 800508a:	e7a7      	b.n	8004fdc <_printf_i+0xf8>
 800508c:	4824      	ldr	r0, [pc, #144]	; (8005120 <_printf_i+0x23c>)
 800508e:	e7e4      	b.n	800505a <_printf_i+0x176>
 8005090:	4615      	mov	r5, r2
 8005092:	e7bd      	b.n	8005010 <_printf_i+0x12c>
 8005094:	682b      	ldr	r3, [r5, #0]
 8005096:	6826      	ldr	r6, [r4, #0]
 8005098:	6961      	ldr	r1, [r4, #20]
 800509a:	1d18      	adds	r0, r3, #4
 800509c:	6028      	str	r0, [r5, #0]
 800509e:	0635      	lsls	r5, r6, #24
 80050a0:	681b      	ldr	r3, [r3, #0]
 80050a2:	d501      	bpl.n	80050a8 <_printf_i+0x1c4>
 80050a4:	6019      	str	r1, [r3, #0]
 80050a6:	e002      	b.n	80050ae <_printf_i+0x1ca>
 80050a8:	0670      	lsls	r0, r6, #25
 80050aa:	d5fb      	bpl.n	80050a4 <_printf_i+0x1c0>
 80050ac:	8019      	strh	r1, [r3, #0]
 80050ae:	2300      	movs	r3, #0
 80050b0:	6123      	str	r3, [r4, #16]
 80050b2:	4615      	mov	r5, r2
 80050b4:	e7bc      	b.n	8005030 <_printf_i+0x14c>
 80050b6:	682b      	ldr	r3, [r5, #0]
 80050b8:	1d1a      	adds	r2, r3, #4
 80050ba:	602a      	str	r2, [r5, #0]
 80050bc:	681d      	ldr	r5, [r3, #0]
 80050be:	6862      	ldr	r2, [r4, #4]
 80050c0:	2100      	movs	r1, #0
 80050c2:	4628      	mov	r0, r5
 80050c4:	f7fb f884 	bl	80001d0 <memchr>
 80050c8:	b108      	cbz	r0, 80050ce <_printf_i+0x1ea>
 80050ca:	1b40      	subs	r0, r0, r5
 80050cc:	6060      	str	r0, [r4, #4]
 80050ce:	6863      	ldr	r3, [r4, #4]
 80050d0:	6123      	str	r3, [r4, #16]
 80050d2:	2300      	movs	r3, #0
 80050d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80050d8:	e7aa      	b.n	8005030 <_printf_i+0x14c>
 80050da:	6923      	ldr	r3, [r4, #16]
 80050dc:	462a      	mov	r2, r5
 80050de:	4649      	mov	r1, r9
 80050e0:	4640      	mov	r0, r8
 80050e2:	47d0      	blx	sl
 80050e4:	3001      	adds	r0, #1
 80050e6:	d0ad      	beq.n	8005044 <_printf_i+0x160>
 80050e8:	6823      	ldr	r3, [r4, #0]
 80050ea:	079b      	lsls	r3, r3, #30
 80050ec:	d413      	bmi.n	8005116 <_printf_i+0x232>
 80050ee:	68e0      	ldr	r0, [r4, #12]
 80050f0:	9b03      	ldr	r3, [sp, #12]
 80050f2:	4298      	cmp	r0, r3
 80050f4:	bfb8      	it	lt
 80050f6:	4618      	movlt	r0, r3
 80050f8:	e7a6      	b.n	8005048 <_printf_i+0x164>
 80050fa:	2301      	movs	r3, #1
 80050fc:	4632      	mov	r2, r6
 80050fe:	4649      	mov	r1, r9
 8005100:	4640      	mov	r0, r8
 8005102:	47d0      	blx	sl
 8005104:	3001      	adds	r0, #1
 8005106:	d09d      	beq.n	8005044 <_printf_i+0x160>
 8005108:	3501      	adds	r5, #1
 800510a:	68e3      	ldr	r3, [r4, #12]
 800510c:	9903      	ldr	r1, [sp, #12]
 800510e:	1a5b      	subs	r3, r3, r1
 8005110:	42ab      	cmp	r3, r5
 8005112:	dcf2      	bgt.n	80050fa <_printf_i+0x216>
 8005114:	e7eb      	b.n	80050ee <_printf_i+0x20a>
 8005116:	2500      	movs	r5, #0
 8005118:	f104 0619 	add.w	r6, r4, #25
 800511c:	e7f5      	b.n	800510a <_printf_i+0x226>
 800511e:	bf00      	nop
 8005120:	08008cf4 	.word	0x08008cf4
 8005124:	08008d05 	.word	0x08008d05

08005128 <std>:
 8005128:	2300      	movs	r3, #0
 800512a:	b510      	push	{r4, lr}
 800512c:	4604      	mov	r4, r0
 800512e:	e9c0 3300 	strd	r3, r3, [r0]
 8005132:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005136:	6083      	str	r3, [r0, #8]
 8005138:	8181      	strh	r1, [r0, #12]
 800513a:	6643      	str	r3, [r0, #100]	; 0x64
 800513c:	81c2      	strh	r2, [r0, #14]
 800513e:	6183      	str	r3, [r0, #24]
 8005140:	4619      	mov	r1, r3
 8005142:	2208      	movs	r2, #8
 8005144:	305c      	adds	r0, #92	; 0x5c
 8005146:	f000 f9e5 	bl	8005514 <memset>
 800514a:	4b05      	ldr	r3, [pc, #20]	; (8005160 <std+0x38>)
 800514c:	6263      	str	r3, [r4, #36]	; 0x24
 800514e:	4b05      	ldr	r3, [pc, #20]	; (8005164 <std+0x3c>)
 8005150:	62a3      	str	r3, [r4, #40]	; 0x28
 8005152:	4b05      	ldr	r3, [pc, #20]	; (8005168 <std+0x40>)
 8005154:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005156:	4b05      	ldr	r3, [pc, #20]	; (800516c <std+0x44>)
 8005158:	6224      	str	r4, [r4, #32]
 800515a:	6323      	str	r3, [r4, #48]	; 0x30
 800515c:	bd10      	pop	{r4, pc}
 800515e:	bf00      	nop
 8005160:	08005365 	.word	0x08005365
 8005164:	08005387 	.word	0x08005387
 8005168:	080053bf 	.word	0x080053bf
 800516c:	080053e3 	.word	0x080053e3

08005170 <stdio_exit_handler>:
 8005170:	4a02      	ldr	r2, [pc, #8]	; (800517c <stdio_exit_handler+0xc>)
 8005172:	4903      	ldr	r1, [pc, #12]	; (8005180 <stdio_exit_handler+0x10>)
 8005174:	4803      	ldr	r0, [pc, #12]	; (8005184 <stdio_exit_handler+0x14>)
 8005176:	f000 b869 	b.w	800524c <_fwalk_sglue>
 800517a:	bf00      	nop
 800517c:	20000644 	.word	0x20000644
 8005180:	08006e89 	.word	0x08006e89
 8005184:	20000650 	.word	0x20000650

08005188 <cleanup_stdio>:
 8005188:	6841      	ldr	r1, [r0, #4]
 800518a:	4b0c      	ldr	r3, [pc, #48]	; (80051bc <cleanup_stdio+0x34>)
 800518c:	4299      	cmp	r1, r3
 800518e:	b510      	push	{r4, lr}
 8005190:	4604      	mov	r4, r0
 8005192:	d001      	beq.n	8005198 <cleanup_stdio+0x10>
 8005194:	f001 fe78 	bl	8006e88 <_fflush_r>
 8005198:	68a1      	ldr	r1, [r4, #8]
 800519a:	4b09      	ldr	r3, [pc, #36]	; (80051c0 <cleanup_stdio+0x38>)
 800519c:	4299      	cmp	r1, r3
 800519e:	d002      	beq.n	80051a6 <cleanup_stdio+0x1e>
 80051a0:	4620      	mov	r0, r4
 80051a2:	f001 fe71 	bl	8006e88 <_fflush_r>
 80051a6:	68e1      	ldr	r1, [r4, #12]
 80051a8:	4b06      	ldr	r3, [pc, #24]	; (80051c4 <cleanup_stdio+0x3c>)
 80051aa:	4299      	cmp	r1, r3
 80051ac:	d004      	beq.n	80051b8 <cleanup_stdio+0x30>
 80051ae:	4620      	mov	r0, r4
 80051b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80051b4:	f001 be68 	b.w	8006e88 <_fflush_r>
 80051b8:	bd10      	pop	{r4, pc}
 80051ba:	bf00      	nop
 80051bc:	200009d4 	.word	0x200009d4
 80051c0:	20000a3c 	.word	0x20000a3c
 80051c4:	20000aa4 	.word	0x20000aa4

080051c8 <global_stdio_init.part.0>:
 80051c8:	b510      	push	{r4, lr}
 80051ca:	4b0b      	ldr	r3, [pc, #44]	; (80051f8 <global_stdio_init.part.0+0x30>)
 80051cc:	4c0b      	ldr	r4, [pc, #44]	; (80051fc <global_stdio_init.part.0+0x34>)
 80051ce:	4a0c      	ldr	r2, [pc, #48]	; (8005200 <global_stdio_init.part.0+0x38>)
 80051d0:	601a      	str	r2, [r3, #0]
 80051d2:	4620      	mov	r0, r4
 80051d4:	2200      	movs	r2, #0
 80051d6:	2104      	movs	r1, #4
 80051d8:	f7ff ffa6 	bl	8005128 <std>
 80051dc:	f104 0068 	add.w	r0, r4, #104	; 0x68
 80051e0:	2201      	movs	r2, #1
 80051e2:	2109      	movs	r1, #9
 80051e4:	f7ff ffa0 	bl	8005128 <std>
 80051e8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 80051ec:	2202      	movs	r2, #2
 80051ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80051f2:	2112      	movs	r1, #18
 80051f4:	f7ff bf98 	b.w	8005128 <std>
 80051f8:	20000b0c 	.word	0x20000b0c
 80051fc:	200009d4 	.word	0x200009d4
 8005200:	08005171 	.word	0x08005171

08005204 <__sfp_lock_acquire>:
 8005204:	4801      	ldr	r0, [pc, #4]	; (800520c <__sfp_lock_acquire+0x8>)
 8005206:	f000 ba23 	b.w	8005650 <__retarget_lock_acquire_recursive>
 800520a:	bf00      	nop
 800520c:	20000b15 	.word	0x20000b15

08005210 <__sfp_lock_release>:
 8005210:	4801      	ldr	r0, [pc, #4]	; (8005218 <__sfp_lock_release+0x8>)
 8005212:	f000 ba1e 	b.w	8005652 <__retarget_lock_release_recursive>
 8005216:	bf00      	nop
 8005218:	20000b15 	.word	0x20000b15

0800521c <__sinit>:
 800521c:	b510      	push	{r4, lr}
 800521e:	4604      	mov	r4, r0
 8005220:	f7ff fff0 	bl	8005204 <__sfp_lock_acquire>
 8005224:	6a23      	ldr	r3, [r4, #32]
 8005226:	b11b      	cbz	r3, 8005230 <__sinit+0x14>
 8005228:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800522c:	f7ff bff0 	b.w	8005210 <__sfp_lock_release>
 8005230:	4b04      	ldr	r3, [pc, #16]	; (8005244 <__sinit+0x28>)
 8005232:	6223      	str	r3, [r4, #32]
 8005234:	4b04      	ldr	r3, [pc, #16]	; (8005248 <__sinit+0x2c>)
 8005236:	681b      	ldr	r3, [r3, #0]
 8005238:	2b00      	cmp	r3, #0
 800523a:	d1f5      	bne.n	8005228 <__sinit+0xc>
 800523c:	f7ff ffc4 	bl	80051c8 <global_stdio_init.part.0>
 8005240:	e7f2      	b.n	8005228 <__sinit+0xc>
 8005242:	bf00      	nop
 8005244:	08005189 	.word	0x08005189
 8005248:	20000b0c 	.word	0x20000b0c

0800524c <_fwalk_sglue>:
 800524c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005250:	4607      	mov	r7, r0
 8005252:	4688      	mov	r8, r1
 8005254:	4614      	mov	r4, r2
 8005256:	2600      	movs	r6, #0
 8005258:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800525c:	f1b9 0901 	subs.w	r9, r9, #1
 8005260:	d505      	bpl.n	800526e <_fwalk_sglue+0x22>
 8005262:	6824      	ldr	r4, [r4, #0]
 8005264:	2c00      	cmp	r4, #0
 8005266:	d1f7      	bne.n	8005258 <_fwalk_sglue+0xc>
 8005268:	4630      	mov	r0, r6
 800526a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800526e:	89ab      	ldrh	r3, [r5, #12]
 8005270:	2b01      	cmp	r3, #1
 8005272:	d907      	bls.n	8005284 <_fwalk_sglue+0x38>
 8005274:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005278:	3301      	adds	r3, #1
 800527a:	d003      	beq.n	8005284 <_fwalk_sglue+0x38>
 800527c:	4629      	mov	r1, r5
 800527e:	4638      	mov	r0, r7
 8005280:	47c0      	blx	r8
 8005282:	4306      	orrs	r6, r0
 8005284:	3568      	adds	r5, #104	; 0x68
 8005286:	e7e9      	b.n	800525c <_fwalk_sglue+0x10>

08005288 <iprintf>:
 8005288:	b40f      	push	{r0, r1, r2, r3}
 800528a:	b507      	push	{r0, r1, r2, lr}
 800528c:	4906      	ldr	r1, [pc, #24]	; (80052a8 <iprintf+0x20>)
 800528e:	ab04      	add	r3, sp, #16
 8005290:	6808      	ldr	r0, [r1, #0]
 8005292:	f853 2b04 	ldr.w	r2, [r3], #4
 8005296:	6881      	ldr	r1, [r0, #8]
 8005298:	9301      	str	r3, [sp, #4]
 800529a:	f001 fc55 	bl	8006b48 <_vfiprintf_r>
 800529e:	b003      	add	sp, #12
 80052a0:	f85d eb04 	ldr.w	lr, [sp], #4
 80052a4:	b004      	add	sp, #16
 80052a6:	4770      	bx	lr
 80052a8:	2000069c 	.word	0x2000069c

080052ac <_puts_r>:
 80052ac:	6a03      	ldr	r3, [r0, #32]
 80052ae:	b570      	push	{r4, r5, r6, lr}
 80052b0:	6884      	ldr	r4, [r0, #8]
 80052b2:	4605      	mov	r5, r0
 80052b4:	460e      	mov	r6, r1
 80052b6:	b90b      	cbnz	r3, 80052bc <_puts_r+0x10>
 80052b8:	f7ff ffb0 	bl	800521c <__sinit>
 80052bc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80052be:	07db      	lsls	r3, r3, #31
 80052c0:	d405      	bmi.n	80052ce <_puts_r+0x22>
 80052c2:	89a3      	ldrh	r3, [r4, #12]
 80052c4:	0598      	lsls	r0, r3, #22
 80052c6:	d402      	bmi.n	80052ce <_puts_r+0x22>
 80052c8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80052ca:	f000 f9c1 	bl	8005650 <__retarget_lock_acquire_recursive>
 80052ce:	89a3      	ldrh	r3, [r4, #12]
 80052d0:	0719      	lsls	r1, r3, #28
 80052d2:	d513      	bpl.n	80052fc <_puts_r+0x50>
 80052d4:	6923      	ldr	r3, [r4, #16]
 80052d6:	b18b      	cbz	r3, 80052fc <_puts_r+0x50>
 80052d8:	3e01      	subs	r6, #1
 80052da:	68a3      	ldr	r3, [r4, #8]
 80052dc:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80052e0:	3b01      	subs	r3, #1
 80052e2:	60a3      	str	r3, [r4, #8]
 80052e4:	b9e9      	cbnz	r1, 8005322 <_puts_r+0x76>
 80052e6:	2b00      	cmp	r3, #0
 80052e8:	da2e      	bge.n	8005348 <_puts_r+0x9c>
 80052ea:	4622      	mov	r2, r4
 80052ec:	210a      	movs	r1, #10
 80052ee:	4628      	mov	r0, r5
 80052f0:	f000 f87b 	bl	80053ea <__swbuf_r>
 80052f4:	3001      	adds	r0, #1
 80052f6:	d007      	beq.n	8005308 <_puts_r+0x5c>
 80052f8:	250a      	movs	r5, #10
 80052fa:	e007      	b.n	800530c <_puts_r+0x60>
 80052fc:	4621      	mov	r1, r4
 80052fe:	4628      	mov	r0, r5
 8005300:	f000 f8b0 	bl	8005464 <__swsetup_r>
 8005304:	2800      	cmp	r0, #0
 8005306:	d0e7      	beq.n	80052d8 <_puts_r+0x2c>
 8005308:	f04f 35ff 	mov.w	r5, #4294967295
 800530c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800530e:	07da      	lsls	r2, r3, #31
 8005310:	d405      	bmi.n	800531e <_puts_r+0x72>
 8005312:	89a3      	ldrh	r3, [r4, #12]
 8005314:	059b      	lsls	r3, r3, #22
 8005316:	d402      	bmi.n	800531e <_puts_r+0x72>
 8005318:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800531a:	f000 f99a 	bl	8005652 <__retarget_lock_release_recursive>
 800531e:	4628      	mov	r0, r5
 8005320:	bd70      	pop	{r4, r5, r6, pc}
 8005322:	2b00      	cmp	r3, #0
 8005324:	da04      	bge.n	8005330 <_puts_r+0x84>
 8005326:	69a2      	ldr	r2, [r4, #24]
 8005328:	429a      	cmp	r2, r3
 800532a:	dc06      	bgt.n	800533a <_puts_r+0x8e>
 800532c:	290a      	cmp	r1, #10
 800532e:	d004      	beq.n	800533a <_puts_r+0x8e>
 8005330:	6823      	ldr	r3, [r4, #0]
 8005332:	1c5a      	adds	r2, r3, #1
 8005334:	6022      	str	r2, [r4, #0]
 8005336:	7019      	strb	r1, [r3, #0]
 8005338:	e7cf      	b.n	80052da <_puts_r+0x2e>
 800533a:	4622      	mov	r2, r4
 800533c:	4628      	mov	r0, r5
 800533e:	f000 f854 	bl	80053ea <__swbuf_r>
 8005342:	3001      	adds	r0, #1
 8005344:	d1c9      	bne.n	80052da <_puts_r+0x2e>
 8005346:	e7df      	b.n	8005308 <_puts_r+0x5c>
 8005348:	6823      	ldr	r3, [r4, #0]
 800534a:	250a      	movs	r5, #10
 800534c:	1c5a      	adds	r2, r3, #1
 800534e:	6022      	str	r2, [r4, #0]
 8005350:	701d      	strb	r5, [r3, #0]
 8005352:	e7db      	b.n	800530c <_puts_r+0x60>

08005354 <puts>:
 8005354:	4b02      	ldr	r3, [pc, #8]	; (8005360 <puts+0xc>)
 8005356:	4601      	mov	r1, r0
 8005358:	6818      	ldr	r0, [r3, #0]
 800535a:	f7ff bfa7 	b.w	80052ac <_puts_r>
 800535e:	bf00      	nop
 8005360:	2000069c 	.word	0x2000069c

08005364 <__sread>:
 8005364:	b510      	push	{r4, lr}
 8005366:	460c      	mov	r4, r1
 8005368:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800536c:	f000 f912 	bl	8005594 <_read_r>
 8005370:	2800      	cmp	r0, #0
 8005372:	bfab      	itete	ge
 8005374:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8005376:	89a3      	ldrhlt	r3, [r4, #12]
 8005378:	181b      	addge	r3, r3, r0
 800537a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800537e:	bfac      	ite	ge
 8005380:	6563      	strge	r3, [r4, #84]	; 0x54
 8005382:	81a3      	strhlt	r3, [r4, #12]
 8005384:	bd10      	pop	{r4, pc}

08005386 <__swrite>:
 8005386:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800538a:	461f      	mov	r7, r3
 800538c:	898b      	ldrh	r3, [r1, #12]
 800538e:	05db      	lsls	r3, r3, #23
 8005390:	4605      	mov	r5, r0
 8005392:	460c      	mov	r4, r1
 8005394:	4616      	mov	r6, r2
 8005396:	d505      	bpl.n	80053a4 <__swrite+0x1e>
 8005398:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800539c:	2302      	movs	r3, #2
 800539e:	2200      	movs	r2, #0
 80053a0:	f000 f8e6 	bl	8005570 <_lseek_r>
 80053a4:	89a3      	ldrh	r3, [r4, #12]
 80053a6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80053aa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80053ae:	81a3      	strh	r3, [r4, #12]
 80053b0:	4632      	mov	r2, r6
 80053b2:	463b      	mov	r3, r7
 80053b4:	4628      	mov	r0, r5
 80053b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80053ba:	f000 b90d 	b.w	80055d8 <_write_r>

080053be <__sseek>:
 80053be:	b510      	push	{r4, lr}
 80053c0:	460c      	mov	r4, r1
 80053c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80053c6:	f000 f8d3 	bl	8005570 <_lseek_r>
 80053ca:	1c43      	adds	r3, r0, #1
 80053cc:	89a3      	ldrh	r3, [r4, #12]
 80053ce:	bf15      	itete	ne
 80053d0:	6560      	strne	r0, [r4, #84]	; 0x54
 80053d2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80053d6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80053da:	81a3      	strheq	r3, [r4, #12]
 80053dc:	bf18      	it	ne
 80053de:	81a3      	strhne	r3, [r4, #12]
 80053e0:	bd10      	pop	{r4, pc}

080053e2 <__sclose>:
 80053e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80053e6:	f000 b8b3 	b.w	8005550 <_close_r>

080053ea <__swbuf_r>:
 80053ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80053ec:	460e      	mov	r6, r1
 80053ee:	4614      	mov	r4, r2
 80053f0:	4605      	mov	r5, r0
 80053f2:	b118      	cbz	r0, 80053fc <__swbuf_r+0x12>
 80053f4:	6a03      	ldr	r3, [r0, #32]
 80053f6:	b90b      	cbnz	r3, 80053fc <__swbuf_r+0x12>
 80053f8:	f7ff ff10 	bl	800521c <__sinit>
 80053fc:	69a3      	ldr	r3, [r4, #24]
 80053fe:	60a3      	str	r3, [r4, #8]
 8005400:	89a3      	ldrh	r3, [r4, #12]
 8005402:	071a      	lsls	r2, r3, #28
 8005404:	d525      	bpl.n	8005452 <__swbuf_r+0x68>
 8005406:	6923      	ldr	r3, [r4, #16]
 8005408:	b31b      	cbz	r3, 8005452 <__swbuf_r+0x68>
 800540a:	6823      	ldr	r3, [r4, #0]
 800540c:	6922      	ldr	r2, [r4, #16]
 800540e:	1a98      	subs	r0, r3, r2
 8005410:	6963      	ldr	r3, [r4, #20]
 8005412:	b2f6      	uxtb	r6, r6
 8005414:	4283      	cmp	r3, r0
 8005416:	4637      	mov	r7, r6
 8005418:	dc04      	bgt.n	8005424 <__swbuf_r+0x3a>
 800541a:	4621      	mov	r1, r4
 800541c:	4628      	mov	r0, r5
 800541e:	f001 fd33 	bl	8006e88 <_fflush_r>
 8005422:	b9e0      	cbnz	r0, 800545e <__swbuf_r+0x74>
 8005424:	68a3      	ldr	r3, [r4, #8]
 8005426:	3b01      	subs	r3, #1
 8005428:	60a3      	str	r3, [r4, #8]
 800542a:	6823      	ldr	r3, [r4, #0]
 800542c:	1c5a      	adds	r2, r3, #1
 800542e:	6022      	str	r2, [r4, #0]
 8005430:	701e      	strb	r6, [r3, #0]
 8005432:	6962      	ldr	r2, [r4, #20]
 8005434:	1c43      	adds	r3, r0, #1
 8005436:	429a      	cmp	r2, r3
 8005438:	d004      	beq.n	8005444 <__swbuf_r+0x5a>
 800543a:	89a3      	ldrh	r3, [r4, #12]
 800543c:	07db      	lsls	r3, r3, #31
 800543e:	d506      	bpl.n	800544e <__swbuf_r+0x64>
 8005440:	2e0a      	cmp	r6, #10
 8005442:	d104      	bne.n	800544e <__swbuf_r+0x64>
 8005444:	4621      	mov	r1, r4
 8005446:	4628      	mov	r0, r5
 8005448:	f001 fd1e 	bl	8006e88 <_fflush_r>
 800544c:	b938      	cbnz	r0, 800545e <__swbuf_r+0x74>
 800544e:	4638      	mov	r0, r7
 8005450:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005452:	4621      	mov	r1, r4
 8005454:	4628      	mov	r0, r5
 8005456:	f000 f805 	bl	8005464 <__swsetup_r>
 800545a:	2800      	cmp	r0, #0
 800545c:	d0d5      	beq.n	800540a <__swbuf_r+0x20>
 800545e:	f04f 37ff 	mov.w	r7, #4294967295
 8005462:	e7f4      	b.n	800544e <__swbuf_r+0x64>

08005464 <__swsetup_r>:
 8005464:	b538      	push	{r3, r4, r5, lr}
 8005466:	4b2a      	ldr	r3, [pc, #168]	; (8005510 <__swsetup_r+0xac>)
 8005468:	4605      	mov	r5, r0
 800546a:	6818      	ldr	r0, [r3, #0]
 800546c:	460c      	mov	r4, r1
 800546e:	b118      	cbz	r0, 8005478 <__swsetup_r+0x14>
 8005470:	6a03      	ldr	r3, [r0, #32]
 8005472:	b90b      	cbnz	r3, 8005478 <__swsetup_r+0x14>
 8005474:	f7ff fed2 	bl	800521c <__sinit>
 8005478:	89a3      	ldrh	r3, [r4, #12]
 800547a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800547e:	0718      	lsls	r0, r3, #28
 8005480:	d422      	bmi.n	80054c8 <__swsetup_r+0x64>
 8005482:	06d9      	lsls	r1, r3, #27
 8005484:	d407      	bmi.n	8005496 <__swsetup_r+0x32>
 8005486:	2309      	movs	r3, #9
 8005488:	602b      	str	r3, [r5, #0]
 800548a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800548e:	81a3      	strh	r3, [r4, #12]
 8005490:	f04f 30ff 	mov.w	r0, #4294967295
 8005494:	e034      	b.n	8005500 <__swsetup_r+0x9c>
 8005496:	0758      	lsls	r0, r3, #29
 8005498:	d512      	bpl.n	80054c0 <__swsetup_r+0x5c>
 800549a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800549c:	b141      	cbz	r1, 80054b0 <__swsetup_r+0x4c>
 800549e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80054a2:	4299      	cmp	r1, r3
 80054a4:	d002      	beq.n	80054ac <__swsetup_r+0x48>
 80054a6:	4628      	mov	r0, r5
 80054a8:	f000 ff5c 	bl	8006364 <_free_r>
 80054ac:	2300      	movs	r3, #0
 80054ae:	6363      	str	r3, [r4, #52]	; 0x34
 80054b0:	89a3      	ldrh	r3, [r4, #12]
 80054b2:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80054b6:	81a3      	strh	r3, [r4, #12]
 80054b8:	2300      	movs	r3, #0
 80054ba:	6063      	str	r3, [r4, #4]
 80054bc:	6923      	ldr	r3, [r4, #16]
 80054be:	6023      	str	r3, [r4, #0]
 80054c0:	89a3      	ldrh	r3, [r4, #12]
 80054c2:	f043 0308 	orr.w	r3, r3, #8
 80054c6:	81a3      	strh	r3, [r4, #12]
 80054c8:	6923      	ldr	r3, [r4, #16]
 80054ca:	b94b      	cbnz	r3, 80054e0 <__swsetup_r+0x7c>
 80054cc:	89a3      	ldrh	r3, [r4, #12]
 80054ce:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80054d2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80054d6:	d003      	beq.n	80054e0 <__swsetup_r+0x7c>
 80054d8:	4621      	mov	r1, r4
 80054da:	4628      	mov	r0, r5
 80054dc:	f001 fd22 	bl	8006f24 <__smakebuf_r>
 80054e0:	89a0      	ldrh	r0, [r4, #12]
 80054e2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80054e6:	f010 0301 	ands.w	r3, r0, #1
 80054ea:	d00a      	beq.n	8005502 <__swsetup_r+0x9e>
 80054ec:	2300      	movs	r3, #0
 80054ee:	60a3      	str	r3, [r4, #8]
 80054f0:	6963      	ldr	r3, [r4, #20]
 80054f2:	425b      	negs	r3, r3
 80054f4:	61a3      	str	r3, [r4, #24]
 80054f6:	6923      	ldr	r3, [r4, #16]
 80054f8:	b943      	cbnz	r3, 800550c <__swsetup_r+0xa8>
 80054fa:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80054fe:	d1c4      	bne.n	800548a <__swsetup_r+0x26>
 8005500:	bd38      	pop	{r3, r4, r5, pc}
 8005502:	0781      	lsls	r1, r0, #30
 8005504:	bf58      	it	pl
 8005506:	6963      	ldrpl	r3, [r4, #20]
 8005508:	60a3      	str	r3, [r4, #8]
 800550a:	e7f4      	b.n	80054f6 <__swsetup_r+0x92>
 800550c:	2000      	movs	r0, #0
 800550e:	e7f7      	b.n	8005500 <__swsetup_r+0x9c>
 8005510:	2000069c 	.word	0x2000069c

08005514 <memset>:
 8005514:	4402      	add	r2, r0
 8005516:	4603      	mov	r3, r0
 8005518:	4293      	cmp	r3, r2
 800551a:	d100      	bne.n	800551e <memset+0xa>
 800551c:	4770      	bx	lr
 800551e:	f803 1b01 	strb.w	r1, [r3], #1
 8005522:	e7f9      	b.n	8005518 <memset+0x4>

08005524 <strncmp>:
 8005524:	b510      	push	{r4, lr}
 8005526:	b16a      	cbz	r2, 8005544 <strncmp+0x20>
 8005528:	3901      	subs	r1, #1
 800552a:	1884      	adds	r4, r0, r2
 800552c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005530:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 8005534:	429a      	cmp	r2, r3
 8005536:	d103      	bne.n	8005540 <strncmp+0x1c>
 8005538:	42a0      	cmp	r0, r4
 800553a:	d001      	beq.n	8005540 <strncmp+0x1c>
 800553c:	2a00      	cmp	r2, #0
 800553e:	d1f5      	bne.n	800552c <strncmp+0x8>
 8005540:	1ad0      	subs	r0, r2, r3
 8005542:	bd10      	pop	{r4, pc}
 8005544:	4610      	mov	r0, r2
 8005546:	e7fc      	b.n	8005542 <strncmp+0x1e>

08005548 <_localeconv_r>:
 8005548:	4800      	ldr	r0, [pc, #0]	; (800554c <_localeconv_r+0x4>)
 800554a:	4770      	bx	lr
 800554c:	20000790 	.word	0x20000790

08005550 <_close_r>:
 8005550:	b538      	push	{r3, r4, r5, lr}
 8005552:	4d06      	ldr	r5, [pc, #24]	; (800556c <_close_r+0x1c>)
 8005554:	2300      	movs	r3, #0
 8005556:	4604      	mov	r4, r0
 8005558:	4608      	mov	r0, r1
 800555a:	602b      	str	r3, [r5, #0]
 800555c:	f7fb fd64 	bl	8001028 <_close>
 8005560:	1c43      	adds	r3, r0, #1
 8005562:	d102      	bne.n	800556a <_close_r+0x1a>
 8005564:	682b      	ldr	r3, [r5, #0]
 8005566:	b103      	cbz	r3, 800556a <_close_r+0x1a>
 8005568:	6023      	str	r3, [r4, #0]
 800556a:	bd38      	pop	{r3, r4, r5, pc}
 800556c:	20000b10 	.word	0x20000b10

08005570 <_lseek_r>:
 8005570:	b538      	push	{r3, r4, r5, lr}
 8005572:	4d07      	ldr	r5, [pc, #28]	; (8005590 <_lseek_r+0x20>)
 8005574:	4604      	mov	r4, r0
 8005576:	4608      	mov	r0, r1
 8005578:	4611      	mov	r1, r2
 800557a:	2200      	movs	r2, #0
 800557c:	602a      	str	r2, [r5, #0]
 800557e:	461a      	mov	r2, r3
 8005580:	f7fb fd5c 	bl	800103c <_lseek>
 8005584:	1c43      	adds	r3, r0, #1
 8005586:	d102      	bne.n	800558e <_lseek_r+0x1e>
 8005588:	682b      	ldr	r3, [r5, #0]
 800558a:	b103      	cbz	r3, 800558e <_lseek_r+0x1e>
 800558c:	6023      	str	r3, [r4, #0]
 800558e:	bd38      	pop	{r3, r4, r5, pc}
 8005590:	20000b10 	.word	0x20000b10

08005594 <_read_r>:
 8005594:	b538      	push	{r3, r4, r5, lr}
 8005596:	4d07      	ldr	r5, [pc, #28]	; (80055b4 <_read_r+0x20>)
 8005598:	4604      	mov	r4, r0
 800559a:	4608      	mov	r0, r1
 800559c:	4611      	mov	r1, r2
 800559e:	2200      	movs	r2, #0
 80055a0:	602a      	str	r2, [r5, #0]
 80055a2:	461a      	mov	r2, r3
 80055a4:	f7fb fd32 	bl	800100c <_read>
 80055a8:	1c43      	adds	r3, r0, #1
 80055aa:	d102      	bne.n	80055b2 <_read_r+0x1e>
 80055ac:	682b      	ldr	r3, [r5, #0]
 80055ae:	b103      	cbz	r3, 80055b2 <_read_r+0x1e>
 80055b0:	6023      	str	r3, [r4, #0]
 80055b2:	bd38      	pop	{r3, r4, r5, pc}
 80055b4:	20000b10 	.word	0x20000b10

080055b8 <_sbrk_r>:
 80055b8:	b538      	push	{r3, r4, r5, lr}
 80055ba:	4d06      	ldr	r5, [pc, #24]	; (80055d4 <_sbrk_r+0x1c>)
 80055bc:	2300      	movs	r3, #0
 80055be:	4604      	mov	r4, r0
 80055c0:	4608      	mov	r0, r1
 80055c2:	602b      	str	r3, [r5, #0]
 80055c4:	f7fb fd3c 	bl	8001040 <_sbrk>
 80055c8:	1c43      	adds	r3, r0, #1
 80055ca:	d102      	bne.n	80055d2 <_sbrk_r+0x1a>
 80055cc:	682b      	ldr	r3, [r5, #0]
 80055ce:	b103      	cbz	r3, 80055d2 <_sbrk_r+0x1a>
 80055d0:	6023      	str	r3, [r4, #0]
 80055d2:	bd38      	pop	{r3, r4, r5, pc}
 80055d4:	20000b10 	.word	0x20000b10

080055d8 <_write_r>:
 80055d8:	b538      	push	{r3, r4, r5, lr}
 80055da:	4d07      	ldr	r5, [pc, #28]	; (80055f8 <_write_r+0x20>)
 80055dc:	4604      	mov	r4, r0
 80055de:	4608      	mov	r0, r1
 80055e0:	4611      	mov	r1, r2
 80055e2:	2200      	movs	r2, #0
 80055e4:	602a      	str	r2, [r5, #0]
 80055e6:	461a      	mov	r2, r3
 80055e8:	f7fb fcbe 	bl	8000f68 <_write>
 80055ec:	1c43      	adds	r3, r0, #1
 80055ee:	d102      	bne.n	80055f6 <_write_r+0x1e>
 80055f0:	682b      	ldr	r3, [r5, #0]
 80055f2:	b103      	cbz	r3, 80055f6 <_write_r+0x1e>
 80055f4:	6023      	str	r3, [r4, #0]
 80055f6:	bd38      	pop	{r3, r4, r5, pc}
 80055f8:	20000b10 	.word	0x20000b10

080055fc <__errno>:
 80055fc:	4b01      	ldr	r3, [pc, #4]	; (8005604 <__errno+0x8>)
 80055fe:	6818      	ldr	r0, [r3, #0]
 8005600:	4770      	bx	lr
 8005602:	bf00      	nop
 8005604:	2000069c 	.word	0x2000069c

08005608 <__libc_init_array>:
 8005608:	b570      	push	{r4, r5, r6, lr}
 800560a:	4d0d      	ldr	r5, [pc, #52]	; (8005640 <__libc_init_array+0x38>)
 800560c:	4c0d      	ldr	r4, [pc, #52]	; (8005644 <__libc_init_array+0x3c>)
 800560e:	1b64      	subs	r4, r4, r5
 8005610:	10a4      	asrs	r4, r4, #2
 8005612:	2600      	movs	r6, #0
 8005614:	42a6      	cmp	r6, r4
 8005616:	d109      	bne.n	800562c <__libc_init_array+0x24>
 8005618:	4d0b      	ldr	r5, [pc, #44]	; (8005648 <__libc_init_array+0x40>)
 800561a:	4c0c      	ldr	r4, [pc, #48]	; (800564c <__libc_init_array+0x44>)
 800561c:	f001 feb0 	bl	8007380 <_init>
 8005620:	1b64      	subs	r4, r4, r5
 8005622:	10a4      	asrs	r4, r4, #2
 8005624:	2600      	movs	r6, #0
 8005626:	42a6      	cmp	r6, r4
 8005628:	d105      	bne.n	8005636 <__libc_init_array+0x2e>
 800562a:	bd70      	pop	{r4, r5, r6, pc}
 800562c:	f855 3b04 	ldr.w	r3, [r5], #4
 8005630:	4798      	blx	r3
 8005632:	3601      	adds	r6, #1
 8005634:	e7ee      	b.n	8005614 <__libc_init_array+0xc>
 8005636:	f855 3b04 	ldr.w	r3, [r5], #4
 800563a:	4798      	blx	r3
 800563c:	3601      	adds	r6, #1
 800563e:	e7f2      	b.n	8005626 <__libc_init_array+0x1e>
 8005640:	0800906c 	.word	0x0800906c
 8005644:	0800906c 	.word	0x0800906c
 8005648:	0800906c 	.word	0x0800906c
 800564c:	08009070 	.word	0x08009070

08005650 <__retarget_lock_acquire_recursive>:
 8005650:	4770      	bx	lr

08005652 <__retarget_lock_release_recursive>:
 8005652:	4770      	bx	lr

08005654 <memcpy>:
 8005654:	440a      	add	r2, r1
 8005656:	4291      	cmp	r1, r2
 8005658:	f100 33ff 	add.w	r3, r0, #4294967295
 800565c:	d100      	bne.n	8005660 <memcpy+0xc>
 800565e:	4770      	bx	lr
 8005660:	b510      	push	{r4, lr}
 8005662:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005666:	f803 4f01 	strb.w	r4, [r3, #1]!
 800566a:	4291      	cmp	r1, r2
 800566c:	d1f9      	bne.n	8005662 <memcpy+0xe>
 800566e:	bd10      	pop	{r4, pc}

08005670 <quorem>:
 8005670:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005674:	6903      	ldr	r3, [r0, #16]
 8005676:	690c      	ldr	r4, [r1, #16]
 8005678:	42a3      	cmp	r3, r4
 800567a:	4607      	mov	r7, r0
 800567c:	db7e      	blt.n	800577c <quorem+0x10c>
 800567e:	3c01      	subs	r4, #1
 8005680:	f101 0814 	add.w	r8, r1, #20
 8005684:	f100 0514 	add.w	r5, r0, #20
 8005688:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800568c:	9301      	str	r3, [sp, #4]
 800568e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8005692:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8005696:	3301      	adds	r3, #1
 8005698:	429a      	cmp	r2, r3
 800569a:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800569e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80056a2:	fbb2 f6f3 	udiv	r6, r2, r3
 80056a6:	d331      	bcc.n	800570c <quorem+0x9c>
 80056a8:	f04f 0e00 	mov.w	lr, #0
 80056ac:	4640      	mov	r0, r8
 80056ae:	46ac      	mov	ip, r5
 80056b0:	46f2      	mov	sl, lr
 80056b2:	f850 2b04 	ldr.w	r2, [r0], #4
 80056b6:	b293      	uxth	r3, r2
 80056b8:	fb06 e303 	mla	r3, r6, r3, lr
 80056bc:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80056c0:	0c1a      	lsrs	r2, r3, #16
 80056c2:	b29b      	uxth	r3, r3
 80056c4:	ebaa 0303 	sub.w	r3, sl, r3
 80056c8:	f8dc a000 	ldr.w	sl, [ip]
 80056cc:	fa13 f38a 	uxtah	r3, r3, sl
 80056d0:	fb06 220e 	mla	r2, r6, lr, r2
 80056d4:	9300      	str	r3, [sp, #0]
 80056d6:	9b00      	ldr	r3, [sp, #0]
 80056d8:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80056dc:	b292      	uxth	r2, r2
 80056de:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80056e2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80056e6:	f8bd 3000 	ldrh.w	r3, [sp]
 80056ea:	4581      	cmp	r9, r0
 80056ec:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80056f0:	f84c 3b04 	str.w	r3, [ip], #4
 80056f4:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80056f8:	d2db      	bcs.n	80056b2 <quorem+0x42>
 80056fa:	f855 300b 	ldr.w	r3, [r5, fp]
 80056fe:	b92b      	cbnz	r3, 800570c <quorem+0x9c>
 8005700:	9b01      	ldr	r3, [sp, #4]
 8005702:	3b04      	subs	r3, #4
 8005704:	429d      	cmp	r5, r3
 8005706:	461a      	mov	r2, r3
 8005708:	d32c      	bcc.n	8005764 <quorem+0xf4>
 800570a:	613c      	str	r4, [r7, #16]
 800570c:	4638      	mov	r0, r7
 800570e:	f001 f8f1 	bl	80068f4 <__mcmp>
 8005712:	2800      	cmp	r0, #0
 8005714:	db22      	blt.n	800575c <quorem+0xec>
 8005716:	3601      	adds	r6, #1
 8005718:	4629      	mov	r1, r5
 800571a:	2000      	movs	r0, #0
 800571c:	f858 2b04 	ldr.w	r2, [r8], #4
 8005720:	f8d1 c000 	ldr.w	ip, [r1]
 8005724:	b293      	uxth	r3, r2
 8005726:	1ac3      	subs	r3, r0, r3
 8005728:	0c12      	lsrs	r2, r2, #16
 800572a:	fa13 f38c 	uxtah	r3, r3, ip
 800572e:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 8005732:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8005736:	b29b      	uxth	r3, r3
 8005738:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800573c:	45c1      	cmp	r9, r8
 800573e:	f841 3b04 	str.w	r3, [r1], #4
 8005742:	ea4f 4022 	mov.w	r0, r2, asr #16
 8005746:	d2e9      	bcs.n	800571c <quorem+0xac>
 8005748:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800574c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8005750:	b922      	cbnz	r2, 800575c <quorem+0xec>
 8005752:	3b04      	subs	r3, #4
 8005754:	429d      	cmp	r5, r3
 8005756:	461a      	mov	r2, r3
 8005758:	d30a      	bcc.n	8005770 <quorem+0x100>
 800575a:	613c      	str	r4, [r7, #16]
 800575c:	4630      	mov	r0, r6
 800575e:	b003      	add	sp, #12
 8005760:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005764:	6812      	ldr	r2, [r2, #0]
 8005766:	3b04      	subs	r3, #4
 8005768:	2a00      	cmp	r2, #0
 800576a:	d1ce      	bne.n	800570a <quorem+0x9a>
 800576c:	3c01      	subs	r4, #1
 800576e:	e7c9      	b.n	8005704 <quorem+0x94>
 8005770:	6812      	ldr	r2, [r2, #0]
 8005772:	3b04      	subs	r3, #4
 8005774:	2a00      	cmp	r2, #0
 8005776:	d1f0      	bne.n	800575a <quorem+0xea>
 8005778:	3c01      	subs	r4, #1
 800577a:	e7eb      	b.n	8005754 <quorem+0xe4>
 800577c:	2000      	movs	r0, #0
 800577e:	e7ee      	b.n	800575e <quorem+0xee>

08005780 <_dtoa_r>:
 8005780:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005784:	ed2d 8b04 	vpush	{d8-d9}
 8005788:	69c5      	ldr	r5, [r0, #28]
 800578a:	b093      	sub	sp, #76	; 0x4c
 800578c:	ed8d 0b02 	vstr	d0, [sp, #8]
 8005790:	ec57 6b10 	vmov	r6, r7, d0
 8005794:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8005798:	9107      	str	r1, [sp, #28]
 800579a:	4604      	mov	r4, r0
 800579c:	920a      	str	r2, [sp, #40]	; 0x28
 800579e:	930d      	str	r3, [sp, #52]	; 0x34
 80057a0:	b975      	cbnz	r5, 80057c0 <_dtoa_r+0x40>
 80057a2:	2010      	movs	r0, #16
 80057a4:	f7fe ffa6 	bl	80046f4 <malloc>
 80057a8:	4602      	mov	r2, r0
 80057aa:	61e0      	str	r0, [r4, #28]
 80057ac:	b920      	cbnz	r0, 80057b8 <_dtoa_r+0x38>
 80057ae:	4bae      	ldr	r3, [pc, #696]	; (8005a68 <_dtoa_r+0x2e8>)
 80057b0:	21ef      	movs	r1, #239	; 0xef
 80057b2:	48ae      	ldr	r0, [pc, #696]	; (8005a6c <_dtoa_r+0x2ec>)
 80057b4:	f001 fc14 	bl	8006fe0 <__assert_func>
 80057b8:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80057bc:	6005      	str	r5, [r0, #0]
 80057be:	60c5      	str	r5, [r0, #12]
 80057c0:	69e3      	ldr	r3, [r4, #28]
 80057c2:	6819      	ldr	r1, [r3, #0]
 80057c4:	b151      	cbz	r1, 80057dc <_dtoa_r+0x5c>
 80057c6:	685a      	ldr	r2, [r3, #4]
 80057c8:	604a      	str	r2, [r1, #4]
 80057ca:	2301      	movs	r3, #1
 80057cc:	4093      	lsls	r3, r2
 80057ce:	608b      	str	r3, [r1, #8]
 80057d0:	4620      	mov	r0, r4
 80057d2:	f000 fe53 	bl	800647c <_Bfree>
 80057d6:	69e3      	ldr	r3, [r4, #28]
 80057d8:	2200      	movs	r2, #0
 80057da:	601a      	str	r2, [r3, #0]
 80057dc:	1e3b      	subs	r3, r7, #0
 80057de:	bfbb      	ittet	lt
 80057e0:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80057e4:	9303      	strlt	r3, [sp, #12]
 80057e6:	2300      	movge	r3, #0
 80057e8:	2201      	movlt	r2, #1
 80057ea:	bfac      	ite	ge
 80057ec:	f8c8 3000 	strge.w	r3, [r8]
 80057f0:	f8c8 2000 	strlt.w	r2, [r8]
 80057f4:	4b9e      	ldr	r3, [pc, #632]	; (8005a70 <_dtoa_r+0x2f0>)
 80057f6:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80057fa:	ea33 0308 	bics.w	r3, r3, r8
 80057fe:	d11b      	bne.n	8005838 <_dtoa_r+0xb8>
 8005800:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005802:	f242 730f 	movw	r3, #9999	; 0x270f
 8005806:	6013      	str	r3, [r2, #0]
 8005808:	f3c8 0313 	ubfx	r3, r8, #0, #20
 800580c:	4333      	orrs	r3, r6
 800580e:	f000 8593 	beq.w	8006338 <_dtoa_r+0xbb8>
 8005812:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005814:	b963      	cbnz	r3, 8005830 <_dtoa_r+0xb0>
 8005816:	4b97      	ldr	r3, [pc, #604]	; (8005a74 <_dtoa_r+0x2f4>)
 8005818:	e027      	b.n	800586a <_dtoa_r+0xea>
 800581a:	4b97      	ldr	r3, [pc, #604]	; (8005a78 <_dtoa_r+0x2f8>)
 800581c:	9300      	str	r3, [sp, #0]
 800581e:	3308      	adds	r3, #8
 8005820:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8005822:	6013      	str	r3, [r2, #0]
 8005824:	9800      	ldr	r0, [sp, #0]
 8005826:	b013      	add	sp, #76	; 0x4c
 8005828:	ecbd 8b04 	vpop	{d8-d9}
 800582c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005830:	4b90      	ldr	r3, [pc, #576]	; (8005a74 <_dtoa_r+0x2f4>)
 8005832:	9300      	str	r3, [sp, #0]
 8005834:	3303      	adds	r3, #3
 8005836:	e7f3      	b.n	8005820 <_dtoa_r+0xa0>
 8005838:	ed9d 7b02 	vldr	d7, [sp, #8]
 800583c:	2200      	movs	r2, #0
 800583e:	ec51 0b17 	vmov	r0, r1, d7
 8005842:	eeb0 8a47 	vmov.f32	s16, s14
 8005846:	eef0 8a67 	vmov.f32	s17, s15
 800584a:	2300      	movs	r3, #0
 800584c:	f7fb f93c 	bl	8000ac8 <__aeabi_dcmpeq>
 8005850:	4681      	mov	r9, r0
 8005852:	b160      	cbz	r0, 800586e <_dtoa_r+0xee>
 8005854:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005856:	2301      	movs	r3, #1
 8005858:	6013      	str	r3, [r2, #0]
 800585a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800585c:	2b00      	cmp	r3, #0
 800585e:	f000 8568 	beq.w	8006332 <_dtoa_r+0xbb2>
 8005862:	4b86      	ldr	r3, [pc, #536]	; (8005a7c <_dtoa_r+0x2fc>)
 8005864:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8005866:	6013      	str	r3, [r2, #0]
 8005868:	3b01      	subs	r3, #1
 800586a:	9300      	str	r3, [sp, #0]
 800586c:	e7da      	b.n	8005824 <_dtoa_r+0xa4>
 800586e:	aa10      	add	r2, sp, #64	; 0x40
 8005870:	a911      	add	r1, sp, #68	; 0x44
 8005872:	4620      	mov	r0, r4
 8005874:	eeb0 0a48 	vmov.f32	s0, s16
 8005878:	eef0 0a68 	vmov.f32	s1, s17
 800587c:	f001 f8e0 	bl	8006a40 <__d2b>
 8005880:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8005884:	4682      	mov	sl, r0
 8005886:	2d00      	cmp	r5, #0
 8005888:	d07f      	beq.n	800598a <_dtoa_r+0x20a>
 800588a:	ee18 3a90 	vmov	r3, s17
 800588e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8005892:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8005896:	ec51 0b18 	vmov	r0, r1, d8
 800589a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800589e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80058a2:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80058a6:	4619      	mov	r1, r3
 80058a8:	2200      	movs	r2, #0
 80058aa:	4b75      	ldr	r3, [pc, #468]	; (8005a80 <_dtoa_r+0x300>)
 80058ac:	f7fa fcec 	bl	8000288 <__aeabi_dsub>
 80058b0:	a367      	add	r3, pc, #412	; (adr r3, 8005a50 <_dtoa_r+0x2d0>)
 80058b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80058b6:	f7fa fe9f 	bl	80005f8 <__aeabi_dmul>
 80058ba:	a367      	add	r3, pc, #412	; (adr r3, 8005a58 <_dtoa_r+0x2d8>)
 80058bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80058c0:	f7fa fce4 	bl	800028c <__adddf3>
 80058c4:	4606      	mov	r6, r0
 80058c6:	4628      	mov	r0, r5
 80058c8:	460f      	mov	r7, r1
 80058ca:	f7fa fe2b 	bl	8000524 <__aeabi_i2d>
 80058ce:	a364      	add	r3, pc, #400	; (adr r3, 8005a60 <_dtoa_r+0x2e0>)
 80058d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80058d4:	f7fa fe90 	bl	80005f8 <__aeabi_dmul>
 80058d8:	4602      	mov	r2, r0
 80058da:	460b      	mov	r3, r1
 80058dc:	4630      	mov	r0, r6
 80058de:	4639      	mov	r1, r7
 80058e0:	f7fa fcd4 	bl	800028c <__adddf3>
 80058e4:	4606      	mov	r6, r0
 80058e6:	460f      	mov	r7, r1
 80058e8:	f7fb f936 	bl	8000b58 <__aeabi_d2iz>
 80058ec:	2200      	movs	r2, #0
 80058ee:	4683      	mov	fp, r0
 80058f0:	2300      	movs	r3, #0
 80058f2:	4630      	mov	r0, r6
 80058f4:	4639      	mov	r1, r7
 80058f6:	f7fb f8f1 	bl	8000adc <__aeabi_dcmplt>
 80058fa:	b148      	cbz	r0, 8005910 <_dtoa_r+0x190>
 80058fc:	4658      	mov	r0, fp
 80058fe:	f7fa fe11 	bl	8000524 <__aeabi_i2d>
 8005902:	4632      	mov	r2, r6
 8005904:	463b      	mov	r3, r7
 8005906:	f7fb f8df 	bl	8000ac8 <__aeabi_dcmpeq>
 800590a:	b908      	cbnz	r0, 8005910 <_dtoa_r+0x190>
 800590c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8005910:	f1bb 0f16 	cmp.w	fp, #22
 8005914:	d857      	bhi.n	80059c6 <_dtoa_r+0x246>
 8005916:	4b5b      	ldr	r3, [pc, #364]	; (8005a84 <_dtoa_r+0x304>)
 8005918:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800591c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005920:	ec51 0b18 	vmov	r0, r1, d8
 8005924:	f7fb f8da 	bl	8000adc <__aeabi_dcmplt>
 8005928:	2800      	cmp	r0, #0
 800592a:	d04e      	beq.n	80059ca <_dtoa_r+0x24a>
 800592c:	f10b 3bff 	add.w	fp, fp, #4294967295
 8005930:	2300      	movs	r3, #0
 8005932:	930c      	str	r3, [sp, #48]	; 0x30
 8005934:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005936:	1b5b      	subs	r3, r3, r5
 8005938:	1e5a      	subs	r2, r3, #1
 800593a:	bf45      	ittet	mi
 800593c:	f1c3 0301 	rsbmi	r3, r3, #1
 8005940:	9305      	strmi	r3, [sp, #20]
 8005942:	2300      	movpl	r3, #0
 8005944:	2300      	movmi	r3, #0
 8005946:	9206      	str	r2, [sp, #24]
 8005948:	bf54      	ite	pl
 800594a:	9305      	strpl	r3, [sp, #20]
 800594c:	9306      	strmi	r3, [sp, #24]
 800594e:	f1bb 0f00 	cmp.w	fp, #0
 8005952:	db3c      	blt.n	80059ce <_dtoa_r+0x24e>
 8005954:	9b06      	ldr	r3, [sp, #24]
 8005956:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800595a:	445b      	add	r3, fp
 800595c:	9306      	str	r3, [sp, #24]
 800595e:	2300      	movs	r3, #0
 8005960:	9308      	str	r3, [sp, #32]
 8005962:	9b07      	ldr	r3, [sp, #28]
 8005964:	2b09      	cmp	r3, #9
 8005966:	d868      	bhi.n	8005a3a <_dtoa_r+0x2ba>
 8005968:	2b05      	cmp	r3, #5
 800596a:	bfc4      	itt	gt
 800596c:	3b04      	subgt	r3, #4
 800596e:	9307      	strgt	r3, [sp, #28]
 8005970:	9b07      	ldr	r3, [sp, #28]
 8005972:	f1a3 0302 	sub.w	r3, r3, #2
 8005976:	bfcc      	ite	gt
 8005978:	2500      	movgt	r5, #0
 800597a:	2501      	movle	r5, #1
 800597c:	2b03      	cmp	r3, #3
 800597e:	f200 8085 	bhi.w	8005a8c <_dtoa_r+0x30c>
 8005982:	e8df f003 	tbb	[pc, r3]
 8005986:	3b2e      	.short	0x3b2e
 8005988:	5839      	.short	0x5839
 800598a:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800598e:	441d      	add	r5, r3
 8005990:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8005994:	2b20      	cmp	r3, #32
 8005996:	bfc1      	itttt	gt
 8005998:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800599c:	fa08 f803 	lslgt.w	r8, r8, r3
 80059a0:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 80059a4:	fa26 f303 	lsrgt.w	r3, r6, r3
 80059a8:	bfd6      	itet	le
 80059aa:	f1c3 0320 	rsble	r3, r3, #32
 80059ae:	ea48 0003 	orrgt.w	r0, r8, r3
 80059b2:	fa06 f003 	lslle.w	r0, r6, r3
 80059b6:	f7fa fda5 	bl	8000504 <__aeabi_ui2d>
 80059ba:	2201      	movs	r2, #1
 80059bc:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 80059c0:	3d01      	subs	r5, #1
 80059c2:	920e      	str	r2, [sp, #56]	; 0x38
 80059c4:	e76f      	b.n	80058a6 <_dtoa_r+0x126>
 80059c6:	2301      	movs	r3, #1
 80059c8:	e7b3      	b.n	8005932 <_dtoa_r+0x1b2>
 80059ca:	900c      	str	r0, [sp, #48]	; 0x30
 80059cc:	e7b2      	b.n	8005934 <_dtoa_r+0x1b4>
 80059ce:	9b05      	ldr	r3, [sp, #20]
 80059d0:	eba3 030b 	sub.w	r3, r3, fp
 80059d4:	9305      	str	r3, [sp, #20]
 80059d6:	f1cb 0300 	rsb	r3, fp, #0
 80059da:	9308      	str	r3, [sp, #32]
 80059dc:	2300      	movs	r3, #0
 80059de:	930b      	str	r3, [sp, #44]	; 0x2c
 80059e0:	e7bf      	b.n	8005962 <_dtoa_r+0x1e2>
 80059e2:	2300      	movs	r3, #0
 80059e4:	9309      	str	r3, [sp, #36]	; 0x24
 80059e6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80059e8:	2b00      	cmp	r3, #0
 80059ea:	dc52      	bgt.n	8005a92 <_dtoa_r+0x312>
 80059ec:	2301      	movs	r3, #1
 80059ee:	9301      	str	r3, [sp, #4]
 80059f0:	9304      	str	r3, [sp, #16]
 80059f2:	461a      	mov	r2, r3
 80059f4:	920a      	str	r2, [sp, #40]	; 0x28
 80059f6:	e00b      	b.n	8005a10 <_dtoa_r+0x290>
 80059f8:	2301      	movs	r3, #1
 80059fa:	e7f3      	b.n	80059e4 <_dtoa_r+0x264>
 80059fc:	2300      	movs	r3, #0
 80059fe:	9309      	str	r3, [sp, #36]	; 0x24
 8005a00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a02:	445b      	add	r3, fp
 8005a04:	9301      	str	r3, [sp, #4]
 8005a06:	3301      	adds	r3, #1
 8005a08:	2b01      	cmp	r3, #1
 8005a0a:	9304      	str	r3, [sp, #16]
 8005a0c:	bfb8      	it	lt
 8005a0e:	2301      	movlt	r3, #1
 8005a10:	69e0      	ldr	r0, [r4, #28]
 8005a12:	2100      	movs	r1, #0
 8005a14:	2204      	movs	r2, #4
 8005a16:	f102 0614 	add.w	r6, r2, #20
 8005a1a:	429e      	cmp	r6, r3
 8005a1c:	d93d      	bls.n	8005a9a <_dtoa_r+0x31a>
 8005a1e:	6041      	str	r1, [r0, #4]
 8005a20:	4620      	mov	r0, r4
 8005a22:	f000 fceb 	bl	80063fc <_Balloc>
 8005a26:	9000      	str	r0, [sp, #0]
 8005a28:	2800      	cmp	r0, #0
 8005a2a:	d139      	bne.n	8005aa0 <_dtoa_r+0x320>
 8005a2c:	4b16      	ldr	r3, [pc, #88]	; (8005a88 <_dtoa_r+0x308>)
 8005a2e:	4602      	mov	r2, r0
 8005a30:	f240 11af 	movw	r1, #431	; 0x1af
 8005a34:	e6bd      	b.n	80057b2 <_dtoa_r+0x32>
 8005a36:	2301      	movs	r3, #1
 8005a38:	e7e1      	b.n	80059fe <_dtoa_r+0x27e>
 8005a3a:	2501      	movs	r5, #1
 8005a3c:	2300      	movs	r3, #0
 8005a3e:	9307      	str	r3, [sp, #28]
 8005a40:	9509      	str	r5, [sp, #36]	; 0x24
 8005a42:	f04f 33ff 	mov.w	r3, #4294967295
 8005a46:	9301      	str	r3, [sp, #4]
 8005a48:	9304      	str	r3, [sp, #16]
 8005a4a:	2200      	movs	r2, #0
 8005a4c:	2312      	movs	r3, #18
 8005a4e:	e7d1      	b.n	80059f4 <_dtoa_r+0x274>
 8005a50:	636f4361 	.word	0x636f4361
 8005a54:	3fd287a7 	.word	0x3fd287a7
 8005a58:	8b60c8b3 	.word	0x8b60c8b3
 8005a5c:	3fc68a28 	.word	0x3fc68a28
 8005a60:	509f79fb 	.word	0x509f79fb
 8005a64:	3fd34413 	.word	0x3fd34413
 8005a68:	08008d23 	.word	0x08008d23
 8005a6c:	08008d3a 	.word	0x08008d3a
 8005a70:	7ff00000 	.word	0x7ff00000
 8005a74:	08008d1f 	.word	0x08008d1f
 8005a78:	08008d16 	.word	0x08008d16
 8005a7c:	08007512 	.word	0x08007512
 8005a80:	3ff80000 	.word	0x3ff80000
 8005a84:	08008e28 	.word	0x08008e28
 8005a88:	08008d92 	.word	0x08008d92
 8005a8c:	2301      	movs	r3, #1
 8005a8e:	9309      	str	r3, [sp, #36]	; 0x24
 8005a90:	e7d7      	b.n	8005a42 <_dtoa_r+0x2c2>
 8005a92:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005a94:	9301      	str	r3, [sp, #4]
 8005a96:	9304      	str	r3, [sp, #16]
 8005a98:	e7ba      	b.n	8005a10 <_dtoa_r+0x290>
 8005a9a:	3101      	adds	r1, #1
 8005a9c:	0052      	lsls	r2, r2, #1
 8005a9e:	e7ba      	b.n	8005a16 <_dtoa_r+0x296>
 8005aa0:	69e3      	ldr	r3, [r4, #28]
 8005aa2:	9a00      	ldr	r2, [sp, #0]
 8005aa4:	601a      	str	r2, [r3, #0]
 8005aa6:	9b04      	ldr	r3, [sp, #16]
 8005aa8:	2b0e      	cmp	r3, #14
 8005aaa:	f200 80a8 	bhi.w	8005bfe <_dtoa_r+0x47e>
 8005aae:	2d00      	cmp	r5, #0
 8005ab0:	f000 80a5 	beq.w	8005bfe <_dtoa_r+0x47e>
 8005ab4:	f1bb 0f00 	cmp.w	fp, #0
 8005ab8:	dd38      	ble.n	8005b2c <_dtoa_r+0x3ac>
 8005aba:	4bc0      	ldr	r3, [pc, #768]	; (8005dbc <_dtoa_r+0x63c>)
 8005abc:	f00b 020f 	and.w	r2, fp, #15
 8005ac0:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005ac4:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8005ac8:	e9d3 6700 	ldrd	r6, r7, [r3]
 8005acc:	ea4f 182b 	mov.w	r8, fp, asr #4
 8005ad0:	d019      	beq.n	8005b06 <_dtoa_r+0x386>
 8005ad2:	4bbb      	ldr	r3, [pc, #748]	; (8005dc0 <_dtoa_r+0x640>)
 8005ad4:	ec51 0b18 	vmov	r0, r1, d8
 8005ad8:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8005adc:	f7fa feb6 	bl	800084c <__aeabi_ddiv>
 8005ae0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005ae4:	f008 080f 	and.w	r8, r8, #15
 8005ae8:	2503      	movs	r5, #3
 8005aea:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8005dc0 <_dtoa_r+0x640>
 8005aee:	f1b8 0f00 	cmp.w	r8, #0
 8005af2:	d10a      	bne.n	8005b0a <_dtoa_r+0x38a>
 8005af4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8005af8:	4632      	mov	r2, r6
 8005afa:	463b      	mov	r3, r7
 8005afc:	f7fa fea6 	bl	800084c <__aeabi_ddiv>
 8005b00:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005b04:	e02b      	b.n	8005b5e <_dtoa_r+0x3de>
 8005b06:	2502      	movs	r5, #2
 8005b08:	e7ef      	b.n	8005aea <_dtoa_r+0x36a>
 8005b0a:	f018 0f01 	tst.w	r8, #1
 8005b0e:	d008      	beq.n	8005b22 <_dtoa_r+0x3a2>
 8005b10:	4630      	mov	r0, r6
 8005b12:	4639      	mov	r1, r7
 8005b14:	e9d9 2300 	ldrd	r2, r3, [r9]
 8005b18:	f7fa fd6e 	bl	80005f8 <__aeabi_dmul>
 8005b1c:	3501      	adds	r5, #1
 8005b1e:	4606      	mov	r6, r0
 8005b20:	460f      	mov	r7, r1
 8005b22:	ea4f 0868 	mov.w	r8, r8, asr #1
 8005b26:	f109 0908 	add.w	r9, r9, #8
 8005b2a:	e7e0      	b.n	8005aee <_dtoa_r+0x36e>
 8005b2c:	f000 809f 	beq.w	8005c6e <_dtoa_r+0x4ee>
 8005b30:	f1cb 0600 	rsb	r6, fp, #0
 8005b34:	4ba1      	ldr	r3, [pc, #644]	; (8005dbc <_dtoa_r+0x63c>)
 8005b36:	4fa2      	ldr	r7, [pc, #648]	; (8005dc0 <_dtoa_r+0x640>)
 8005b38:	f006 020f 	and.w	r2, r6, #15
 8005b3c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8005b40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b44:	ec51 0b18 	vmov	r0, r1, d8
 8005b48:	f7fa fd56 	bl	80005f8 <__aeabi_dmul>
 8005b4c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005b50:	1136      	asrs	r6, r6, #4
 8005b52:	2300      	movs	r3, #0
 8005b54:	2502      	movs	r5, #2
 8005b56:	2e00      	cmp	r6, #0
 8005b58:	d17e      	bne.n	8005c58 <_dtoa_r+0x4d8>
 8005b5a:	2b00      	cmp	r3, #0
 8005b5c:	d1d0      	bne.n	8005b00 <_dtoa_r+0x380>
 8005b5e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005b60:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8005b64:	2b00      	cmp	r3, #0
 8005b66:	f000 8084 	beq.w	8005c72 <_dtoa_r+0x4f2>
 8005b6a:	4b96      	ldr	r3, [pc, #600]	; (8005dc4 <_dtoa_r+0x644>)
 8005b6c:	2200      	movs	r2, #0
 8005b6e:	4640      	mov	r0, r8
 8005b70:	4649      	mov	r1, r9
 8005b72:	f7fa ffb3 	bl	8000adc <__aeabi_dcmplt>
 8005b76:	2800      	cmp	r0, #0
 8005b78:	d07b      	beq.n	8005c72 <_dtoa_r+0x4f2>
 8005b7a:	9b04      	ldr	r3, [sp, #16]
 8005b7c:	2b00      	cmp	r3, #0
 8005b7e:	d078      	beq.n	8005c72 <_dtoa_r+0x4f2>
 8005b80:	9b01      	ldr	r3, [sp, #4]
 8005b82:	2b00      	cmp	r3, #0
 8005b84:	dd39      	ble.n	8005bfa <_dtoa_r+0x47a>
 8005b86:	4b90      	ldr	r3, [pc, #576]	; (8005dc8 <_dtoa_r+0x648>)
 8005b88:	2200      	movs	r2, #0
 8005b8a:	4640      	mov	r0, r8
 8005b8c:	4649      	mov	r1, r9
 8005b8e:	f7fa fd33 	bl	80005f8 <__aeabi_dmul>
 8005b92:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005b96:	9e01      	ldr	r6, [sp, #4]
 8005b98:	f10b 37ff 	add.w	r7, fp, #4294967295
 8005b9c:	3501      	adds	r5, #1
 8005b9e:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8005ba2:	4628      	mov	r0, r5
 8005ba4:	f7fa fcbe 	bl	8000524 <__aeabi_i2d>
 8005ba8:	4642      	mov	r2, r8
 8005baa:	464b      	mov	r3, r9
 8005bac:	f7fa fd24 	bl	80005f8 <__aeabi_dmul>
 8005bb0:	4b86      	ldr	r3, [pc, #536]	; (8005dcc <_dtoa_r+0x64c>)
 8005bb2:	2200      	movs	r2, #0
 8005bb4:	f7fa fb6a 	bl	800028c <__adddf3>
 8005bb8:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 8005bbc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8005bc0:	9303      	str	r3, [sp, #12]
 8005bc2:	2e00      	cmp	r6, #0
 8005bc4:	d158      	bne.n	8005c78 <_dtoa_r+0x4f8>
 8005bc6:	4b82      	ldr	r3, [pc, #520]	; (8005dd0 <_dtoa_r+0x650>)
 8005bc8:	2200      	movs	r2, #0
 8005bca:	4640      	mov	r0, r8
 8005bcc:	4649      	mov	r1, r9
 8005bce:	f7fa fb5b 	bl	8000288 <__aeabi_dsub>
 8005bd2:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8005bd6:	4680      	mov	r8, r0
 8005bd8:	4689      	mov	r9, r1
 8005bda:	f7fa ff9d 	bl	8000b18 <__aeabi_dcmpgt>
 8005bde:	2800      	cmp	r0, #0
 8005be0:	f040 8296 	bne.w	8006110 <_dtoa_r+0x990>
 8005be4:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8005be8:	4640      	mov	r0, r8
 8005bea:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8005bee:	4649      	mov	r1, r9
 8005bf0:	f7fa ff74 	bl	8000adc <__aeabi_dcmplt>
 8005bf4:	2800      	cmp	r0, #0
 8005bf6:	f040 8289 	bne.w	800610c <_dtoa_r+0x98c>
 8005bfa:	ed8d 8b02 	vstr	d8, [sp, #8]
 8005bfe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8005c00:	2b00      	cmp	r3, #0
 8005c02:	f2c0 814e 	blt.w	8005ea2 <_dtoa_r+0x722>
 8005c06:	f1bb 0f0e 	cmp.w	fp, #14
 8005c0a:	f300 814a 	bgt.w	8005ea2 <_dtoa_r+0x722>
 8005c0e:	4b6b      	ldr	r3, [pc, #428]	; (8005dbc <_dtoa_r+0x63c>)
 8005c10:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 8005c14:	e9d3 8900 	ldrd	r8, r9, [r3]
 8005c18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8005c1a:	2b00      	cmp	r3, #0
 8005c1c:	f280 80dc 	bge.w	8005dd8 <_dtoa_r+0x658>
 8005c20:	9b04      	ldr	r3, [sp, #16]
 8005c22:	2b00      	cmp	r3, #0
 8005c24:	f300 80d8 	bgt.w	8005dd8 <_dtoa_r+0x658>
 8005c28:	f040 826f 	bne.w	800610a <_dtoa_r+0x98a>
 8005c2c:	4b68      	ldr	r3, [pc, #416]	; (8005dd0 <_dtoa_r+0x650>)
 8005c2e:	2200      	movs	r2, #0
 8005c30:	4640      	mov	r0, r8
 8005c32:	4649      	mov	r1, r9
 8005c34:	f7fa fce0 	bl	80005f8 <__aeabi_dmul>
 8005c38:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8005c3c:	f7fa ff62 	bl	8000b04 <__aeabi_dcmpge>
 8005c40:	9e04      	ldr	r6, [sp, #16]
 8005c42:	4637      	mov	r7, r6
 8005c44:	2800      	cmp	r0, #0
 8005c46:	f040 8245 	bne.w	80060d4 <_dtoa_r+0x954>
 8005c4a:	9d00      	ldr	r5, [sp, #0]
 8005c4c:	2331      	movs	r3, #49	; 0x31
 8005c4e:	f805 3b01 	strb.w	r3, [r5], #1
 8005c52:	f10b 0b01 	add.w	fp, fp, #1
 8005c56:	e241      	b.n	80060dc <_dtoa_r+0x95c>
 8005c58:	07f2      	lsls	r2, r6, #31
 8005c5a:	d505      	bpl.n	8005c68 <_dtoa_r+0x4e8>
 8005c5c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8005c60:	f7fa fcca 	bl	80005f8 <__aeabi_dmul>
 8005c64:	3501      	adds	r5, #1
 8005c66:	2301      	movs	r3, #1
 8005c68:	1076      	asrs	r6, r6, #1
 8005c6a:	3708      	adds	r7, #8
 8005c6c:	e773      	b.n	8005b56 <_dtoa_r+0x3d6>
 8005c6e:	2502      	movs	r5, #2
 8005c70:	e775      	b.n	8005b5e <_dtoa_r+0x3de>
 8005c72:	9e04      	ldr	r6, [sp, #16]
 8005c74:	465f      	mov	r7, fp
 8005c76:	e792      	b.n	8005b9e <_dtoa_r+0x41e>
 8005c78:	9900      	ldr	r1, [sp, #0]
 8005c7a:	4b50      	ldr	r3, [pc, #320]	; (8005dbc <_dtoa_r+0x63c>)
 8005c7c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8005c80:	4431      	add	r1, r6
 8005c82:	9102      	str	r1, [sp, #8]
 8005c84:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005c86:	eeb0 9a47 	vmov.f32	s18, s14
 8005c8a:	eef0 9a67 	vmov.f32	s19, s15
 8005c8e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8005c92:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8005c96:	2900      	cmp	r1, #0
 8005c98:	d044      	beq.n	8005d24 <_dtoa_r+0x5a4>
 8005c9a:	494e      	ldr	r1, [pc, #312]	; (8005dd4 <_dtoa_r+0x654>)
 8005c9c:	2000      	movs	r0, #0
 8005c9e:	f7fa fdd5 	bl	800084c <__aeabi_ddiv>
 8005ca2:	ec53 2b19 	vmov	r2, r3, d9
 8005ca6:	f7fa faef 	bl	8000288 <__aeabi_dsub>
 8005caa:	9d00      	ldr	r5, [sp, #0]
 8005cac:	ec41 0b19 	vmov	d9, r0, r1
 8005cb0:	4649      	mov	r1, r9
 8005cb2:	4640      	mov	r0, r8
 8005cb4:	f7fa ff50 	bl	8000b58 <__aeabi_d2iz>
 8005cb8:	4606      	mov	r6, r0
 8005cba:	f7fa fc33 	bl	8000524 <__aeabi_i2d>
 8005cbe:	4602      	mov	r2, r0
 8005cc0:	460b      	mov	r3, r1
 8005cc2:	4640      	mov	r0, r8
 8005cc4:	4649      	mov	r1, r9
 8005cc6:	f7fa fadf 	bl	8000288 <__aeabi_dsub>
 8005cca:	3630      	adds	r6, #48	; 0x30
 8005ccc:	f805 6b01 	strb.w	r6, [r5], #1
 8005cd0:	ec53 2b19 	vmov	r2, r3, d9
 8005cd4:	4680      	mov	r8, r0
 8005cd6:	4689      	mov	r9, r1
 8005cd8:	f7fa ff00 	bl	8000adc <__aeabi_dcmplt>
 8005cdc:	2800      	cmp	r0, #0
 8005cde:	d164      	bne.n	8005daa <_dtoa_r+0x62a>
 8005ce0:	4642      	mov	r2, r8
 8005ce2:	464b      	mov	r3, r9
 8005ce4:	4937      	ldr	r1, [pc, #220]	; (8005dc4 <_dtoa_r+0x644>)
 8005ce6:	2000      	movs	r0, #0
 8005ce8:	f7fa face 	bl	8000288 <__aeabi_dsub>
 8005cec:	ec53 2b19 	vmov	r2, r3, d9
 8005cf0:	f7fa fef4 	bl	8000adc <__aeabi_dcmplt>
 8005cf4:	2800      	cmp	r0, #0
 8005cf6:	f040 80b6 	bne.w	8005e66 <_dtoa_r+0x6e6>
 8005cfa:	9b02      	ldr	r3, [sp, #8]
 8005cfc:	429d      	cmp	r5, r3
 8005cfe:	f43f af7c 	beq.w	8005bfa <_dtoa_r+0x47a>
 8005d02:	4b31      	ldr	r3, [pc, #196]	; (8005dc8 <_dtoa_r+0x648>)
 8005d04:	ec51 0b19 	vmov	r0, r1, d9
 8005d08:	2200      	movs	r2, #0
 8005d0a:	f7fa fc75 	bl	80005f8 <__aeabi_dmul>
 8005d0e:	4b2e      	ldr	r3, [pc, #184]	; (8005dc8 <_dtoa_r+0x648>)
 8005d10:	ec41 0b19 	vmov	d9, r0, r1
 8005d14:	2200      	movs	r2, #0
 8005d16:	4640      	mov	r0, r8
 8005d18:	4649      	mov	r1, r9
 8005d1a:	f7fa fc6d 	bl	80005f8 <__aeabi_dmul>
 8005d1e:	4680      	mov	r8, r0
 8005d20:	4689      	mov	r9, r1
 8005d22:	e7c5      	b.n	8005cb0 <_dtoa_r+0x530>
 8005d24:	ec51 0b17 	vmov	r0, r1, d7
 8005d28:	f7fa fc66 	bl	80005f8 <__aeabi_dmul>
 8005d2c:	9b02      	ldr	r3, [sp, #8]
 8005d2e:	9d00      	ldr	r5, [sp, #0]
 8005d30:	930f      	str	r3, [sp, #60]	; 0x3c
 8005d32:	ec41 0b19 	vmov	d9, r0, r1
 8005d36:	4649      	mov	r1, r9
 8005d38:	4640      	mov	r0, r8
 8005d3a:	f7fa ff0d 	bl	8000b58 <__aeabi_d2iz>
 8005d3e:	4606      	mov	r6, r0
 8005d40:	f7fa fbf0 	bl	8000524 <__aeabi_i2d>
 8005d44:	3630      	adds	r6, #48	; 0x30
 8005d46:	4602      	mov	r2, r0
 8005d48:	460b      	mov	r3, r1
 8005d4a:	4640      	mov	r0, r8
 8005d4c:	4649      	mov	r1, r9
 8005d4e:	f7fa fa9b 	bl	8000288 <__aeabi_dsub>
 8005d52:	f805 6b01 	strb.w	r6, [r5], #1
 8005d56:	9b02      	ldr	r3, [sp, #8]
 8005d58:	429d      	cmp	r5, r3
 8005d5a:	4680      	mov	r8, r0
 8005d5c:	4689      	mov	r9, r1
 8005d5e:	f04f 0200 	mov.w	r2, #0
 8005d62:	d124      	bne.n	8005dae <_dtoa_r+0x62e>
 8005d64:	4b1b      	ldr	r3, [pc, #108]	; (8005dd4 <_dtoa_r+0x654>)
 8005d66:	ec51 0b19 	vmov	r0, r1, d9
 8005d6a:	f7fa fa8f 	bl	800028c <__adddf3>
 8005d6e:	4602      	mov	r2, r0
 8005d70:	460b      	mov	r3, r1
 8005d72:	4640      	mov	r0, r8
 8005d74:	4649      	mov	r1, r9
 8005d76:	f7fa fecf 	bl	8000b18 <__aeabi_dcmpgt>
 8005d7a:	2800      	cmp	r0, #0
 8005d7c:	d173      	bne.n	8005e66 <_dtoa_r+0x6e6>
 8005d7e:	ec53 2b19 	vmov	r2, r3, d9
 8005d82:	4914      	ldr	r1, [pc, #80]	; (8005dd4 <_dtoa_r+0x654>)
 8005d84:	2000      	movs	r0, #0
 8005d86:	f7fa fa7f 	bl	8000288 <__aeabi_dsub>
 8005d8a:	4602      	mov	r2, r0
 8005d8c:	460b      	mov	r3, r1
 8005d8e:	4640      	mov	r0, r8
 8005d90:	4649      	mov	r1, r9
 8005d92:	f7fa fea3 	bl	8000adc <__aeabi_dcmplt>
 8005d96:	2800      	cmp	r0, #0
 8005d98:	f43f af2f 	beq.w	8005bfa <_dtoa_r+0x47a>
 8005d9c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8005d9e:	1e6b      	subs	r3, r5, #1
 8005da0:	930f      	str	r3, [sp, #60]	; 0x3c
 8005da2:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8005da6:	2b30      	cmp	r3, #48	; 0x30
 8005da8:	d0f8      	beq.n	8005d9c <_dtoa_r+0x61c>
 8005daa:	46bb      	mov	fp, r7
 8005dac:	e04a      	b.n	8005e44 <_dtoa_r+0x6c4>
 8005dae:	4b06      	ldr	r3, [pc, #24]	; (8005dc8 <_dtoa_r+0x648>)
 8005db0:	f7fa fc22 	bl	80005f8 <__aeabi_dmul>
 8005db4:	4680      	mov	r8, r0
 8005db6:	4689      	mov	r9, r1
 8005db8:	e7bd      	b.n	8005d36 <_dtoa_r+0x5b6>
 8005dba:	bf00      	nop
 8005dbc:	08008e28 	.word	0x08008e28
 8005dc0:	08008e00 	.word	0x08008e00
 8005dc4:	3ff00000 	.word	0x3ff00000
 8005dc8:	40240000 	.word	0x40240000
 8005dcc:	401c0000 	.word	0x401c0000
 8005dd0:	40140000 	.word	0x40140000
 8005dd4:	3fe00000 	.word	0x3fe00000
 8005dd8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8005ddc:	9d00      	ldr	r5, [sp, #0]
 8005dde:	4642      	mov	r2, r8
 8005de0:	464b      	mov	r3, r9
 8005de2:	4630      	mov	r0, r6
 8005de4:	4639      	mov	r1, r7
 8005de6:	f7fa fd31 	bl	800084c <__aeabi_ddiv>
 8005dea:	f7fa feb5 	bl	8000b58 <__aeabi_d2iz>
 8005dee:	9001      	str	r0, [sp, #4]
 8005df0:	f7fa fb98 	bl	8000524 <__aeabi_i2d>
 8005df4:	4642      	mov	r2, r8
 8005df6:	464b      	mov	r3, r9
 8005df8:	f7fa fbfe 	bl	80005f8 <__aeabi_dmul>
 8005dfc:	4602      	mov	r2, r0
 8005dfe:	460b      	mov	r3, r1
 8005e00:	4630      	mov	r0, r6
 8005e02:	4639      	mov	r1, r7
 8005e04:	f7fa fa40 	bl	8000288 <__aeabi_dsub>
 8005e08:	9e01      	ldr	r6, [sp, #4]
 8005e0a:	9f04      	ldr	r7, [sp, #16]
 8005e0c:	3630      	adds	r6, #48	; 0x30
 8005e0e:	f805 6b01 	strb.w	r6, [r5], #1
 8005e12:	9e00      	ldr	r6, [sp, #0]
 8005e14:	1bae      	subs	r6, r5, r6
 8005e16:	42b7      	cmp	r7, r6
 8005e18:	4602      	mov	r2, r0
 8005e1a:	460b      	mov	r3, r1
 8005e1c:	d134      	bne.n	8005e88 <_dtoa_r+0x708>
 8005e1e:	f7fa fa35 	bl	800028c <__adddf3>
 8005e22:	4642      	mov	r2, r8
 8005e24:	464b      	mov	r3, r9
 8005e26:	4606      	mov	r6, r0
 8005e28:	460f      	mov	r7, r1
 8005e2a:	f7fa fe75 	bl	8000b18 <__aeabi_dcmpgt>
 8005e2e:	b9c8      	cbnz	r0, 8005e64 <_dtoa_r+0x6e4>
 8005e30:	4642      	mov	r2, r8
 8005e32:	464b      	mov	r3, r9
 8005e34:	4630      	mov	r0, r6
 8005e36:	4639      	mov	r1, r7
 8005e38:	f7fa fe46 	bl	8000ac8 <__aeabi_dcmpeq>
 8005e3c:	b110      	cbz	r0, 8005e44 <_dtoa_r+0x6c4>
 8005e3e:	9b01      	ldr	r3, [sp, #4]
 8005e40:	07db      	lsls	r3, r3, #31
 8005e42:	d40f      	bmi.n	8005e64 <_dtoa_r+0x6e4>
 8005e44:	4651      	mov	r1, sl
 8005e46:	4620      	mov	r0, r4
 8005e48:	f000 fb18 	bl	800647c <_Bfree>
 8005e4c:	2300      	movs	r3, #0
 8005e4e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8005e50:	702b      	strb	r3, [r5, #0]
 8005e52:	f10b 0301 	add.w	r3, fp, #1
 8005e56:	6013      	str	r3, [r2, #0]
 8005e58:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8005e5a:	2b00      	cmp	r3, #0
 8005e5c:	f43f ace2 	beq.w	8005824 <_dtoa_r+0xa4>
 8005e60:	601d      	str	r5, [r3, #0]
 8005e62:	e4df      	b.n	8005824 <_dtoa_r+0xa4>
 8005e64:	465f      	mov	r7, fp
 8005e66:	462b      	mov	r3, r5
 8005e68:	461d      	mov	r5, r3
 8005e6a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8005e6e:	2a39      	cmp	r2, #57	; 0x39
 8005e70:	d106      	bne.n	8005e80 <_dtoa_r+0x700>
 8005e72:	9a00      	ldr	r2, [sp, #0]
 8005e74:	429a      	cmp	r2, r3
 8005e76:	d1f7      	bne.n	8005e68 <_dtoa_r+0x6e8>
 8005e78:	9900      	ldr	r1, [sp, #0]
 8005e7a:	2230      	movs	r2, #48	; 0x30
 8005e7c:	3701      	adds	r7, #1
 8005e7e:	700a      	strb	r2, [r1, #0]
 8005e80:	781a      	ldrb	r2, [r3, #0]
 8005e82:	3201      	adds	r2, #1
 8005e84:	701a      	strb	r2, [r3, #0]
 8005e86:	e790      	b.n	8005daa <_dtoa_r+0x62a>
 8005e88:	4ba3      	ldr	r3, [pc, #652]	; (8006118 <_dtoa_r+0x998>)
 8005e8a:	2200      	movs	r2, #0
 8005e8c:	f7fa fbb4 	bl	80005f8 <__aeabi_dmul>
 8005e90:	2200      	movs	r2, #0
 8005e92:	2300      	movs	r3, #0
 8005e94:	4606      	mov	r6, r0
 8005e96:	460f      	mov	r7, r1
 8005e98:	f7fa fe16 	bl	8000ac8 <__aeabi_dcmpeq>
 8005e9c:	2800      	cmp	r0, #0
 8005e9e:	d09e      	beq.n	8005dde <_dtoa_r+0x65e>
 8005ea0:	e7d0      	b.n	8005e44 <_dtoa_r+0x6c4>
 8005ea2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005ea4:	2a00      	cmp	r2, #0
 8005ea6:	f000 80ca 	beq.w	800603e <_dtoa_r+0x8be>
 8005eaa:	9a07      	ldr	r2, [sp, #28]
 8005eac:	2a01      	cmp	r2, #1
 8005eae:	f300 80ad 	bgt.w	800600c <_dtoa_r+0x88c>
 8005eb2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005eb4:	2a00      	cmp	r2, #0
 8005eb6:	f000 80a5 	beq.w	8006004 <_dtoa_r+0x884>
 8005eba:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8005ebe:	9e08      	ldr	r6, [sp, #32]
 8005ec0:	9d05      	ldr	r5, [sp, #20]
 8005ec2:	9a05      	ldr	r2, [sp, #20]
 8005ec4:	441a      	add	r2, r3
 8005ec6:	9205      	str	r2, [sp, #20]
 8005ec8:	9a06      	ldr	r2, [sp, #24]
 8005eca:	2101      	movs	r1, #1
 8005ecc:	441a      	add	r2, r3
 8005ece:	4620      	mov	r0, r4
 8005ed0:	9206      	str	r2, [sp, #24]
 8005ed2:	f000 fb89 	bl	80065e8 <__i2b>
 8005ed6:	4607      	mov	r7, r0
 8005ed8:	b165      	cbz	r5, 8005ef4 <_dtoa_r+0x774>
 8005eda:	9b06      	ldr	r3, [sp, #24]
 8005edc:	2b00      	cmp	r3, #0
 8005ede:	dd09      	ble.n	8005ef4 <_dtoa_r+0x774>
 8005ee0:	42ab      	cmp	r3, r5
 8005ee2:	9a05      	ldr	r2, [sp, #20]
 8005ee4:	bfa8      	it	ge
 8005ee6:	462b      	movge	r3, r5
 8005ee8:	1ad2      	subs	r2, r2, r3
 8005eea:	9205      	str	r2, [sp, #20]
 8005eec:	9a06      	ldr	r2, [sp, #24]
 8005eee:	1aed      	subs	r5, r5, r3
 8005ef0:	1ad3      	subs	r3, r2, r3
 8005ef2:	9306      	str	r3, [sp, #24]
 8005ef4:	9b08      	ldr	r3, [sp, #32]
 8005ef6:	b1f3      	cbz	r3, 8005f36 <_dtoa_r+0x7b6>
 8005ef8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005efa:	2b00      	cmp	r3, #0
 8005efc:	f000 80a3 	beq.w	8006046 <_dtoa_r+0x8c6>
 8005f00:	2e00      	cmp	r6, #0
 8005f02:	dd10      	ble.n	8005f26 <_dtoa_r+0x7a6>
 8005f04:	4639      	mov	r1, r7
 8005f06:	4632      	mov	r2, r6
 8005f08:	4620      	mov	r0, r4
 8005f0a:	f000 fc2d 	bl	8006768 <__pow5mult>
 8005f0e:	4652      	mov	r2, sl
 8005f10:	4601      	mov	r1, r0
 8005f12:	4607      	mov	r7, r0
 8005f14:	4620      	mov	r0, r4
 8005f16:	f000 fb7d 	bl	8006614 <__multiply>
 8005f1a:	4651      	mov	r1, sl
 8005f1c:	4680      	mov	r8, r0
 8005f1e:	4620      	mov	r0, r4
 8005f20:	f000 faac 	bl	800647c <_Bfree>
 8005f24:	46c2      	mov	sl, r8
 8005f26:	9b08      	ldr	r3, [sp, #32]
 8005f28:	1b9a      	subs	r2, r3, r6
 8005f2a:	d004      	beq.n	8005f36 <_dtoa_r+0x7b6>
 8005f2c:	4651      	mov	r1, sl
 8005f2e:	4620      	mov	r0, r4
 8005f30:	f000 fc1a 	bl	8006768 <__pow5mult>
 8005f34:	4682      	mov	sl, r0
 8005f36:	2101      	movs	r1, #1
 8005f38:	4620      	mov	r0, r4
 8005f3a:	f000 fb55 	bl	80065e8 <__i2b>
 8005f3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005f40:	2b00      	cmp	r3, #0
 8005f42:	4606      	mov	r6, r0
 8005f44:	f340 8081 	ble.w	800604a <_dtoa_r+0x8ca>
 8005f48:	461a      	mov	r2, r3
 8005f4a:	4601      	mov	r1, r0
 8005f4c:	4620      	mov	r0, r4
 8005f4e:	f000 fc0b 	bl	8006768 <__pow5mult>
 8005f52:	9b07      	ldr	r3, [sp, #28]
 8005f54:	2b01      	cmp	r3, #1
 8005f56:	4606      	mov	r6, r0
 8005f58:	dd7a      	ble.n	8006050 <_dtoa_r+0x8d0>
 8005f5a:	f04f 0800 	mov.w	r8, #0
 8005f5e:	6933      	ldr	r3, [r6, #16]
 8005f60:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8005f64:	6918      	ldr	r0, [r3, #16]
 8005f66:	f000 faf1 	bl	800654c <__hi0bits>
 8005f6a:	f1c0 0020 	rsb	r0, r0, #32
 8005f6e:	9b06      	ldr	r3, [sp, #24]
 8005f70:	4418      	add	r0, r3
 8005f72:	f010 001f 	ands.w	r0, r0, #31
 8005f76:	f000 8094 	beq.w	80060a2 <_dtoa_r+0x922>
 8005f7a:	f1c0 0320 	rsb	r3, r0, #32
 8005f7e:	2b04      	cmp	r3, #4
 8005f80:	f340 8085 	ble.w	800608e <_dtoa_r+0x90e>
 8005f84:	9b05      	ldr	r3, [sp, #20]
 8005f86:	f1c0 001c 	rsb	r0, r0, #28
 8005f8a:	4403      	add	r3, r0
 8005f8c:	9305      	str	r3, [sp, #20]
 8005f8e:	9b06      	ldr	r3, [sp, #24]
 8005f90:	4403      	add	r3, r0
 8005f92:	4405      	add	r5, r0
 8005f94:	9306      	str	r3, [sp, #24]
 8005f96:	9b05      	ldr	r3, [sp, #20]
 8005f98:	2b00      	cmp	r3, #0
 8005f9a:	dd05      	ble.n	8005fa8 <_dtoa_r+0x828>
 8005f9c:	4651      	mov	r1, sl
 8005f9e:	461a      	mov	r2, r3
 8005fa0:	4620      	mov	r0, r4
 8005fa2:	f000 fc3b 	bl	800681c <__lshift>
 8005fa6:	4682      	mov	sl, r0
 8005fa8:	9b06      	ldr	r3, [sp, #24]
 8005faa:	2b00      	cmp	r3, #0
 8005fac:	dd05      	ble.n	8005fba <_dtoa_r+0x83a>
 8005fae:	4631      	mov	r1, r6
 8005fb0:	461a      	mov	r2, r3
 8005fb2:	4620      	mov	r0, r4
 8005fb4:	f000 fc32 	bl	800681c <__lshift>
 8005fb8:	4606      	mov	r6, r0
 8005fba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005fbc:	2b00      	cmp	r3, #0
 8005fbe:	d072      	beq.n	80060a6 <_dtoa_r+0x926>
 8005fc0:	4631      	mov	r1, r6
 8005fc2:	4650      	mov	r0, sl
 8005fc4:	f000 fc96 	bl	80068f4 <__mcmp>
 8005fc8:	2800      	cmp	r0, #0
 8005fca:	da6c      	bge.n	80060a6 <_dtoa_r+0x926>
 8005fcc:	2300      	movs	r3, #0
 8005fce:	4651      	mov	r1, sl
 8005fd0:	220a      	movs	r2, #10
 8005fd2:	4620      	mov	r0, r4
 8005fd4:	f000 fa74 	bl	80064c0 <__multadd>
 8005fd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005fda:	f10b 3bff 	add.w	fp, fp, #4294967295
 8005fde:	4682      	mov	sl, r0
 8005fe0:	2b00      	cmp	r3, #0
 8005fe2:	f000 81b0 	beq.w	8006346 <_dtoa_r+0xbc6>
 8005fe6:	2300      	movs	r3, #0
 8005fe8:	4639      	mov	r1, r7
 8005fea:	220a      	movs	r2, #10
 8005fec:	4620      	mov	r0, r4
 8005fee:	f000 fa67 	bl	80064c0 <__multadd>
 8005ff2:	9b01      	ldr	r3, [sp, #4]
 8005ff4:	2b00      	cmp	r3, #0
 8005ff6:	4607      	mov	r7, r0
 8005ff8:	f300 8096 	bgt.w	8006128 <_dtoa_r+0x9a8>
 8005ffc:	9b07      	ldr	r3, [sp, #28]
 8005ffe:	2b02      	cmp	r3, #2
 8006000:	dc59      	bgt.n	80060b6 <_dtoa_r+0x936>
 8006002:	e091      	b.n	8006128 <_dtoa_r+0x9a8>
 8006004:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006006:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800600a:	e758      	b.n	8005ebe <_dtoa_r+0x73e>
 800600c:	9b04      	ldr	r3, [sp, #16]
 800600e:	1e5e      	subs	r6, r3, #1
 8006010:	9b08      	ldr	r3, [sp, #32]
 8006012:	42b3      	cmp	r3, r6
 8006014:	bfbf      	itttt	lt
 8006016:	9b08      	ldrlt	r3, [sp, #32]
 8006018:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 800601a:	9608      	strlt	r6, [sp, #32]
 800601c:	1af3      	sublt	r3, r6, r3
 800601e:	bfb4      	ite	lt
 8006020:	18d2      	addlt	r2, r2, r3
 8006022:	1b9e      	subge	r6, r3, r6
 8006024:	9b04      	ldr	r3, [sp, #16]
 8006026:	bfbc      	itt	lt
 8006028:	920b      	strlt	r2, [sp, #44]	; 0x2c
 800602a:	2600      	movlt	r6, #0
 800602c:	2b00      	cmp	r3, #0
 800602e:	bfb7      	itett	lt
 8006030:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 8006034:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8006038:	1a9d      	sublt	r5, r3, r2
 800603a:	2300      	movlt	r3, #0
 800603c:	e741      	b.n	8005ec2 <_dtoa_r+0x742>
 800603e:	9e08      	ldr	r6, [sp, #32]
 8006040:	9d05      	ldr	r5, [sp, #20]
 8006042:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8006044:	e748      	b.n	8005ed8 <_dtoa_r+0x758>
 8006046:	9a08      	ldr	r2, [sp, #32]
 8006048:	e770      	b.n	8005f2c <_dtoa_r+0x7ac>
 800604a:	9b07      	ldr	r3, [sp, #28]
 800604c:	2b01      	cmp	r3, #1
 800604e:	dc19      	bgt.n	8006084 <_dtoa_r+0x904>
 8006050:	9b02      	ldr	r3, [sp, #8]
 8006052:	b9bb      	cbnz	r3, 8006084 <_dtoa_r+0x904>
 8006054:	9b03      	ldr	r3, [sp, #12]
 8006056:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800605a:	b99b      	cbnz	r3, 8006084 <_dtoa_r+0x904>
 800605c:	9b03      	ldr	r3, [sp, #12]
 800605e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8006062:	0d1b      	lsrs	r3, r3, #20
 8006064:	051b      	lsls	r3, r3, #20
 8006066:	b183      	cbz	r3, 800608a <_dtoa_r+0x90a>
 8006068:	9b05      	ldr	r3, [sp, #20]
 800606a:	3301      	adds	r3, #1
 800606c:	9305      	str	r3, [sp, #20]
 800606e:	9b06      	ldr	r3, [sp, #24]
 8006070:	3301      	adds	r3, #1
 8006072:	9306      	str	r3, [sp, #24]
 8006074:	f04f 0801 	mov.w	r8, #1
 8006078:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800607a:	2b00      	cmp	r3, #0
 800607c:	f47f af6f 	bne.w	8005f5e <_dtoa_r+0x7de>
 8006080:	2001      	movs	r0, #1
 8006082:	e774      	b.n	8005f6e <_dtoa_r+0x7ee>
 8006084:	f04f 0800 	mov.w	r8, #0
 8006088:	e7f6      	b.n	8006078 <_dtoa_r+0x8f8>
 800608a:	4698      	mov	r8, r3
 800608c:	e7f4      	b.n	8006078 <_dtoa_r+0x8f8>
 800608e:	d082      	beq.n	8005f96 <_dtoa_r+0x816>
 8006090:	9a05      	ldr	r2, [sp, #20]
 8006092:	331c      	adds	r3, #28
 8006094:	441a      	add	r2, r3
 8006096:	9205      	str	r2, [sp, #20]
 8006098:	9a06      	ldr	r2, [sp, #24]
 800609a:	441a      	add	r2, r3
 800609c:	441d      	add	r5, r3
 800609e:	9206      	str	r2, [sp, #24]
 80060a0:	e779      	b.n	8005f96 <_dtoa_r+0x816>
 80060a2:	4603      	mov	r3, r0
 80060a4:	e7f4      	b.n	8006090 <_dtoa_r+0x910>
 80060a6:	9b04      	ldr	r3, [sp, #16]
 80060a8:	2b00      	cmp	r3, #0
 80060aa:	dc37      	bgt.n	800611c <_dtoa_r+0x99c>
 80060ac:	9b07      	ldr	r3, [sp, #28]
 80060ae:	2b02      	cmp	r3, #2
 80060b0:	dd34      	ble.n	800611c <_dtoa_r+0x99c>
 80060b2:	9b04      	ldr	r3, [sp, #16]
 80060b4:	9301      	str	r3, [sp, #4]
 80060b6:	9b01      	ldr	r3, [sp, #4]
 80060b8:	b963      	cbnz	r3, 80060d4 <_dtoa_r+0x954>
 80060ba:	4631      	mov	r1, r6
 80060bc:	2205      	movs	r2, #5
 80060be:	4620      	mov	r0, r4
 80060c0:	f000 f9fe 	bl	80064c0 <__multadd>
 80060c4:	4601      	mov	r1, r0
 80060c6:	4606      	mov	r6, r0
 80060c8:	4650      	mov	r0, sl
 80060ca:	f000 fc13 	bl	80068f4 <__mcmp>
 80060ce:	2800      	cmp	r0, #0
 80060d0:	f73f adbb 	bgt.w	8005c4a <_dtoa_r+0x4ca>
 80060d4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80060d6:	9d00      	ldr	r5, [sp, #0]
 80060d8:	ea6f 0b03 	mvn.w	fp, r3
 80060dc:	f04f 0800 	mov.w	r8, #0
 80060e0:	4631      	mov	r1, r6
 80060e2:	4620      	mov	r0, r4
 80060e4:	f000 f9ca 	bl	800647c <_Bfree>
 80060e8:	2f00      	cmp	r7, #0
 80060ea:	f43f aeab 	beq.w	8005e44 <_dtoa_r+0x6c4>
 80060ee:	f1b8 0f00 	cmp.w	r8, #0
 80060f2:	d005      	beq.n	8006100 <_dtoa_r+0x980>
 80060f4:	45b8      	cmp	r8, r7
 80060f6:	d003      	beq.n	8006100 <_dtoa_r+0x980>
 80060f8:	4641      	mov	r1, r8
 80060fa:	4620      	mov	r0, r4
 80060fc:	f000 f9be 	bl	800647c <_Bfree>
 8006100:	4639      	mov	r1, r7
 8006102:	4620      	mov	r0, r4
 8006104:	f000 f9ba 	bl	800647c <_Bfree>
 8006108:	e69c      	b.n	8005e44 <_dtoa_r+0x6c4>
 800610a:	2600      	movs	r6, #0
 800610c:	4637      	mov	r7, r6
 800610e:	e7e1      	b.n	80060d4 <_dtoa_r+0x954>
 8006110:	46bb      	mov	fp, r7
 8006112:	4637      	mov	r7, r6
 8006114:	e599      	b.n	8005c4a <_dtoa_r+0x4ca>
 8006116:	bf00      	nop
 8006118:	40240000 	.word	0x40240000
 800611c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800611e:	2b00      	cmp	r3, #0
 8006120:	f000 80c8 	beq.w	80062b4 <_dtoa_r+0xb34>
 8006124:	9b04      	ldr	r3, [sp, #16]
 8006126:	9301      	str	r3, [sp, #4]
 8006128:	2d00      	cmp	r5, #0
 800612a:	dd05      	ble.n	8006138 <_dtoa_r+0x9b8>
 800612c:	4639      	mov	r1, r7
 800612e:	462a      	mov	r2, r5
 8006130:	4620      	mov	r0, r4
 8006132:	f000 fb73 	bl	800681c <__lshift>
 8006136:	4607      	mov	r7, r0
 8006138:	f1b8 0f00 	cmp.w	r8, #0
 800613c:	d05b      	beq.n	80061f6 <_dtoa_r+0xa76>
 800613e:	6879      	ldr	r1, [r7, #4]
 8006140:	4620      	mov	r0, r4
 8006142:	f000 f95b 	bl	80063fc <_Balloc>
 8006146:	4605      	mov	r5, r0
 8006148:	b928      	cbnz	r0, 8006156 <_dtoa_r+0x9d6>
 800614a:	4b83      	ldr	r3, [pc, #524]	; (8006358 <_dtoa_r+0xbd8>)
 800614c:	4602      	mov	r2, r0
 800614e:	f240 21ef 	movw	r1, #751	; 0x2ef
 8006152:	f7ff bb2e 	b.w	80057b2 <_dtoa_r+0x32>
 8006156:	693a      	ldr	r2, [r7, #16]
 8006158:	3202      	adds	r2, #2
 800615a:	0092      	lsls	r2, r2, #2
 800615c:	f107 010c 	add.w	r1, r7, #12
 8006160:	300c      	adds	r0, #12
 8006162:	f7ff fa77 	bl	8005654 <memcpy>
 8006166:	2201      	movs	r2, #1
 8006168:	4629      	mov	r1, r5
 800616a:	4620      	mov	r0, r4
 800616c:	f000 fb56 	bl	800681c <__lshift>
 8006170:	9b00      	ldr	r3, [sp, #0]
 8006172:	3301      	adds	r3, #1
 8006174:	9304      	str	r3, [sp, #16]
 8006176:	e9dd 2300 	ldrd	r2, r3, [sp]
 800617a:	4413      	add	r3, r2
 800617c:	9308      	str	r3, [sp, #32]
 800617e:	9b02      	ldr	r3, [sp, #8]
 8006180:	f003 0301 	and.w	r3, r3, #1
 8006184:	46b8      	mov	r8, r7
 8006186:	9306      	str	r3, [sp, #24]
 8006188:	4607      	mov	r7, r0
 800618a:	9b04      	ldr	r3, [sp, #16]
 800618c:	4631      	mov	r1, r6
 800618e:	3b01      	subs	r3, #1
 8006190:	4650      	mov	r0, sl
 8006192:	9301      	str	r3, [sp, #4]
 8006194:	f7ff fa6c 	bl	8005670 <quorem>
 8006198:	4641      	mov	r1, r8
 800619a:	9002      	str	r0, [sp, #8]
 800619c:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80061a0:	4650      	mov	r0, sl
 80061a2:	f000 fba7 	bl	80068f4 <__mcmp>
 80061a6:	463a      	mov	r2, r7
 80061a8:	9005      	str	r0, [sp, #20]
 80061aa:	4631      	mov	r1, r6
 80061ac:	4620      	mov	r0, r4
 80061ae:	f000 fbbd 	bl	800692c <__mdiff>
 80061b2:	68c2      	ldr	r2, [r0, #12]
 80061b4:	4605      	mov	r5, r0
 80061b6:	bb02      	cbnz	r2, 80061fa <_dtoa_r+0xa7a>
 80061b8:	4601      	mov	r1, r0
 80061ba:	4650      	mov	r0, sl
 80061bc:	f000 fb9a 	bl	80068f4 <__mcmp>
 80061c0:	4602      	mov	r2, r0
 80061c2:	4629      	mov	r1, r5
 80061c4:	4620      	mov	r0, r4
 80061c6:	9209      	str	r2, [sp, #36]	; 0x24
 80061c8:	f000 f958 	bl	800647c <_Bfree>
 80061cc:	9b07      	ldr	r3, [sp, #28]
 80061ce:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80061d0:	9d04      	ldr	r5, [sp, #16]
 80061d2:	ea43 0102 	orr.w	r1, r3, r2
 80061d6:	9b06      	ldr	r3, [sp, #24]
 80061d8:	4319      	orrs	r1, r3
 80061da:	d110      	bne.n	80061fe <_dtoa_r+0xa7e>
 80061dc:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 80061e0:	d029      	beq.n	8006236 <_dtoa_r+0xab6>
 80061e2:	9b05      	ldr	r3, [sp, #20]
 80061e4:	2b00      	cmp	r3, #0
 80061e6:	dd02      	ble.n	80061ee <_dtoa_r+0xa6e>
 80061e8:	9b02      	ldr	r3, [sp, #8]
 80061ea:	f103 0931 	add.w	r9, r3, #49	; 0x31
 80061ee:	9b01      	ldr	r3, [sp, #4]
 80061f0:	f883 9000 	strb.w	r9, [r3]
 80061f4:	e774      	b.n	80060e0 <_dtoa_r+0x960>
 80061f6:	4638      	mov	r0, r7
 80061f8:	e7ba      	b.n	8006170 <_dtoa_r+0x9f0>
 80061fa:	2201      	movs	r2, #1
 80061fc:	e7e1      	b.n	80061c2 <_dtoa_r+0xa42>
 80061fe:	9b05      	ldr	r3, [sp, #20]
 8006200:	2b00      	cmp	r3, #0
 8006202:	db04      	blt.n	800620e <_dtoa_r+0xa8e>
 8006204:	9907      	ldr	r1, [sp, #28]
 8006206:	430b      	orrs	r3, r1
 8006208:	9906      	ldr	r1, [sp, #24]
 800620a:	430b      	orrs	r3, r1
 800620c:	d120      	bne.n	8006250 <_dtoa_r+0xad0>
 800620e:	2a00      	cmp	r2, #0
 8006210:	dded      	ble.n	80061ee <_dtoa_r+0xa6e>
 8006212:	4651      	mov	r1, sl
 8006214:	2201      	movs	r2, #1
 8006216:	4620      	mov	r0, r4
 8006218:	f000 fb00 	bl	800681c <__lshift>
 800621c:	4631      	mov	r1, r6
 800621e:	4682      	mov	sl, r0
 8006220:	f000 fb68 	bl	80068f4 <__mcmp>
 8006224:	2800      	cmp	r0, #0
 8006226:	dc03      	bgt.n	8006230 <_dtoa_r+0xab0>
 8006228:	d1e1      	bne.n	80061ee <_dtoa_r+0xa6e>
 800622a:	f019 0f01 	tst.w	r9, #1
 800622e:	d0de      	beq.n	80061ee <_dtoa_r+0xa6e>
 8006230:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8006234:	d1d8      	bne.n	80061e8 <_dtoa_r+0xa68>
 8006236:	9a01      	ldr	r2, [sp, #4]
 8006238:	2339      	movs	r3, #57	; 0x39
 800623a:	7013      	strb	r3, [r2, #0]
 800623c:	462b      	mov	r3, r5
 800623e:	461d      	mov	r5, r3
 8006240:	3b01      	subs	r3, #1
 8006242:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8006246:	2a39      	cmp	r2, #57	; 0x39
 8006248:	d06c      	beq.n	8006324 <_dtoa_r+0xba4>
 800624a:	3201      	adds	r2, #1
 800624c:	701a      	strb	r2, [r3, #0]
 800624e:	e747      	b.n	80060e0 <_dtoa_r+0x960>
 8006250:	2a00      	cmp	r2, #0
 8006252:	dd07      	ble.n	8006264 <_dtoa_r+0xae4>
 8006254:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8006258:	d0ed      	beq.n	8006236 <_dtoa_r+0xab6>
 800625a:	9a01      	ldr	r2, [sp, #4]
 800625c:	f109 0301 	add.w	r3, r9, #1
 8006260:	7013      	strb	r3, [r2, #0]
 8006262:	e73d      	b.n	80060e0 <_dtoa_r+0x960>
 8006264:	9b04      	ldr	r3, [sp, #16]
 8006266:	9a08      	ldr	r2, [sp, #32]
 8006268:	f803 9c01 	strb.w	r9, [r3, #-1]
 800626c:	4293      	cmp	r3, r2
 800626e:	d043      	beq.n	80062f8 <_dtoa_r+0xb78>
 8006270:	4651      	mov	r1, sl
 8006272:	2300      	movs	r3, #0
 8006274:	220a      	movs	r2, #10
 8006276:	4620      	mov	r0, r4
 8006278:	f000 f922 	bl	80064c0 <__multadd>
 800627c:	45b8      	cmp	r8, r7
 800627e:	4682      	mov	sl, r0
 8006280:	f04f 0300 	mov.w	r3, #0
 8006284:	f04f 020a 	mov.w	r2, #10
 8006288:	4641      	mov	r1, r8
 800628a:	4620      	mov	r0, r4
 800628c:	d107      	bne.n	800629e <_dtoa_r+0xb1e>
 800628e:	f000 f917 	bl	80064c0 <__multadd>
 8006292:	4680      	mov	r8, r0
 8006294:	4607      	mov	r7, r0
 8006296:	9b04      	ldr	r3, [sp, #16]
 8006298:	3301      	adds	r3, #1
 800629a:	9304      	str	r3, [sp, #16]
 800629c:	e775      	b.n	800618a <_dtoa_r+0xa0a>
 800629e:	f000 f90f 	bl	80064c0 <__multadd>
 80062a2:	4639      	mov	r1, r7
 80062a4:	4680      	mov	r8, r0
 80062a6:	2300      	movs	r3, #0
 80062a8:	220a      	movs	r2, #10
 80062aa:	4620      	mov	r0, r4
 80062ac:	f000 f908 	bl	80064c0 <__multadd>
 80062b0:	4607      	mov	r7, r0
 80062b2:	e7f0      	b.n	8006296 <_dtoa_r+0xb16>
 80062b4:	9b04      	ldr	r3, [sp, #16]
 80062b6:	9301      	str	r3, [sp, #4]
 80062b8:	9d00      	ldr	r5, [sp, #0]
 80062ba:	4631      	mov	r1, r6
 80062bc:	4650      	mov	r0, sl
 80062be:	f7ff f9d7 	bl	8005670 <quorem>
 80062c2:	f100 0930 	add.w	r9, r0, #48	; 0x30
 80062c6:	9b00      	ldr	r3, [sp, #0]
 80062c8:	f805 9b01 	strb.w	r9, [r5], #1
 80062cc:	1aea      	subs	r2, r5, r3
 80062ce:	9b01      	ldr	r3, [sp, #4]
 80062d0:	4293      	cmp	r3, r2
 80062d2:	dd07      	ble.n	80062e4 <_dtoa_r+0xb64>
 80062d4:	4651      	mov	r1, sl
 80062d6:	2300      	movs	r3, #0
 80062d8:	220a      	movs	r2, #10
 80062da:	4620      	mov	r0, r4
 80062dc:	f000 f8f0 	bl	80064c0 <__multadd>
 80062e0:	4682      	mov	sl, r0
 80062e2:	e7ea      	b.n	80062ba <_dtoa_r+0xb3a>
 80062e4:	9b01      	ldr	r3, [sp, #4]
 80062e6:	2b00      	cmp	r3, #0
 80062e8:	bfc8      	it	gt
 80062ea:	461d      	movgt	r5, r3
 80062ec:	9b00      	ldr	r3, [sp, #0]
 80062ee:	bfd8      	it	le
 80062f0:	2501      	movle	r5, #1
 80062f2:	441d      	add	r5, r3
 80062f4:	f04f 0800 	mov.w	r8, #0
 80062f8:	4651      	mov	r1, sl
 80062fa:	2201      	movs	r2, #1
 80062fc:	4620      	mov	r0, r4
 80062fe:	f000 fa8d 	bl	800681c <__lshift>
 8006302:	4631      	mov	r1, r6
 8006304:	4682      	mov	sl, r0
 8006306:	f000 faf5 	bl	80068f4 <__mcmp>
 800630a:	2800      	cmp	r0, #0
 800630c:	dc96      	bgt.n	800623c <_dtoa_r+0xabc>
 800630e:	d102      	bne.n	8006316 <_dtoa_r+0xb96>
 8006310:	f019 0f01 	tst.w	r9, #1
 8006314:	d192      	bne.n	800623c <_dtoa_r+0xabc>
 8006316:	462b      	mov	r3, r5
 8006318:	461d      	mov	r5, r3
 800631a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800631e:	2a30      	cmp	r2, #48	; 0x30
 8006320:	d0fa      	beq.n	8006318 <_dtoa_r+0xb98>
 8006322:	e6dd      	b.n	80060e0 <_dtoa_r+0x960>
 8006324:	9a00      	ldr	r2, [sp, #0]
 8006326:	429a      	cmp	r2, r3
 8006328:	d189      	bne.n	800623e <_dtoa_r+0xabe>
 800632a:	f10b 0b01 	add.w	fp, fp, #1
 800632e:	2331      	movs	r3, #49	; 0x31
 8006330:	e796      	b.n	8006260 <_dtoa_r+0xae0>
 8006332:	4b0a      	ldr	r3, [pc, #40]	; (800635c <_dtoa_r+0xbdc>)
 8006334:	f7ff ba99 	b.w	800586a <_dtoa_r+0xea>
 8006338:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800633a:	2b00      	cmp	r3, #0
 800633c:	f47f aa6d 	bne.w	800581a <_dtoa_r+0x9a>
 8006340:	4b07      	ldr	r3, [pc, #28]	; (8006360 <_dtoa_r+0xbe0>)
 8006342:	f7ff ba92 	b.w	800586a <_dtoa_r+0xea>
 8006346:	9b01      	ldr	r3, [sp, #4]
 8006348:	2b00      	cmp	r3, #0
 800634a:	dcb5      	bgt.n	80062b8 <_dtoa_r+0xb38>
 800634c:	9b07      	ldr	r3, [sp, #28]
 800634e:	2b02      	cmp	r3, #2
 8006350:	f73f aeb1 	bgt.w	80060b6 <_dtoa_r+0x936>
 8006354:	e7b0      	b.n	80062b8 <_dtoa_r+0xb38>
 8006356:	bf00      	nop
 8006358:	08008d92 	.word	0x08008d92
 800635c:	08007511 	.word	0x08007511
 8006360:	08008d16 	.word	0x08008d16

08006364 <_free_r>:
 8006364:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006366:	2900      	cmp	r1, #0
 8006368:	d044      	beq.n	80063f4 <_free_r+0x90>
 800636a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800636e:	9001      	str	r0, [sp, #4]
 8006370:	2b00      	cmp	r3, #0
 8006372:	f1a1 0404 	sub.w	r4, r1, #4
 8006376:	bfb8      	it	lt
 8006378:	18e4      	addlt	r4, r4, r3
 800637a:	f7fe fa63 	bl	8004844 <__malloc_lock>
 800637e:	4a1e      	ldr	r2, [pc, #120]	; (80063f8 <_free_r+0x94>)
 8006380:	9801      	ldr	r0, [sp, #4]
 8006382:	6813      	ldr	r3, [r2, #0]
 8006384:	b933      	cbnz	r3, 8006394 <_free_r+0x30>
 8006386:	6063      	str	r3, [r4, #4]
 8006388:	6014      	str	r4, [r2, #0]
 800638a:	b003      	add	sp, #12
 800638c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8006390:	f7fe ba5e 	b.w	8004850 <__malloc_unlock>
 8006394:	42a3      	cmp	r3, r4
 8006396:	d908      	bls.n	80063aa <_free_r+0x46>
 8006398:	6825      	ldr	r5, [r4, #0]
 800639a:	1961      	adds	r1, r4, r5
 800639c:	428b      	cmp	r3, r1
 800639e:	bf01      	itttt	eq
 80063a0:	6819      	ldreq	r1, [r3, #0]
 80063a2:	685b      	ldreq	r3, [r3, #4]
 80063a4:	1949      	addeq	r1, r1, r5
 80063a6:	6021      	streq	r1, [r4, #0]
 80063a8:	e7ed      	b.n	8006386 <_free_r+0x22>
 80063aa:	461a      	mov	r2, r3
 80063ac:	685b      	ldr	r3, [r3, #4]
 80063ae:	b10b      	cbz	r3, 80063b4 <_free_r+0x50>
 80063b0:	42a3      	cmp	r3, r4
 80063b2:	d9fa      	bls.n	80063aa <_free_r+0x46>
 80063b4:	6811      	ldr	r1, [r2, #0]
 80063b6:	1855      	adds	r5, r2, r1
 80063b8:	42a5      	cmp	r5, r4
 80063ba:	d10b      	bne.n	80063d4 <_free_r+0x70>
 80063bc:	6824      	ldr	r4, [r4, #0]
 80063be:	4421      	add	r1, r4
 80063c0:	1854      	adds	r4, r2, r1
 80063c2:	42a3      	cmp	r3, r4
 80063c4:	6011      	str	r1, [r2, #0]
 80063c6:	d1e0      	bne.n	800638a <_free_r+0x26>
 80063c8:	681c      	ldr	r4, [r3, #0]
 80063ca:	685b      	ldr	r3, [r3, #4]
 80063cc:	6053      	str	r3, [r2, #4]
 80063ce:	440c      	add	r4, r1
 80063d0:	6014      	str	r4, [r2, #0]
 80063d2:	e7da      	b.n	800638a <_free_r+0x26>
 80063d4:	d902      	bls.n	80063dc <_free_r+0x78>
 80063d6:	230c      	movs	r3, #12
 80063d8:	6003      	str	r3, [r0, #0]
 80063da:	e7d6      	b.n	800638a <_free_r+0x26>
 80063dc:	6825      	ldr	r5, [r4, #0]
 80063de:	1961      	adds	r1, r4, r5
 80063e0:	428b      	cmp	r3, r1
 80063e2:	bf04      	itt	eq
 80063e4:	6819      	ldreq	r1, [r3, #0]
 80063e6:	685b      	ldreq	r3, [r3, #4]
 80063e8:	6063      	str	r3, [r4, #4]
 80063ea:	bf04      	itt	eq
 80063ec:	1949      	addeq	r1, r1, r5
 80063ee:	6021      	streq	r1, [r4, #0]
 80063f0:	6054      	str	r4, [r2, #4]
 80063f2:	e7ca      	b.n	800638a <_free_r+0x26>
 80063f4:	b003      	add	sp, #12
 80063f6:	bd30      	pop	{r4, r5, pc}
 80063f8:	200009cc 	.word	0x200009cc

080063fc <_Balloc>:
 80063fc:	b570      	push	{r4, r5, r6, lr}
 80063fe:	69c6      	ldr	r6, [r0, #28]
 8006400:	4604      	mov	r4, r0
 8006402:	460d      	mov	r5, r1
 8006404:	b976      	cbnz	r6, 8006424 <_Balloc+0x28>
 8006406:	2010      	movs	r0, #16
 8006408:	f7fe f974 	bl	80046f4 <malloc>
 800640c:	4602      	mov	r2, r0
 800640e:	61e0      	str	r0, [r4, #28]
 8006410:	b920      	cbnz	r0, 800641c <_Balloc+0x20>
 8006412:	4b18      	ldr	r3, [pc, #96]	; (8006474 <_Balloc+0x78>)
 8006414:	4818      	ldr	r0, [pc, #96]	; (8006478 <_Balloc+0x7c>)
 8006416:	216b      	movs	r1, #107	; 0x6b
 8006418:	f000 fde2 	bl	8006fe0 <__assert_func>
 800641c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8006420:	6006      	str	r6, [r0, #0]
 8006422:	60c6      	str	r6, [r0, #12]
 8006424:	69e6      	ldr	r6, [r4, #28]
 8006426:	68f3      	ldr	r3, [r6, #12]
 8006428:	b183      	cbz	r3, 800644c <_Balloc+0x50>
 800642a:	69e3      	ldr	r3, [r4, #28]
 800642c:	68db      	ldr	r3, [r3, #12]
 800642e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8006432:	b9b8      	cbnz	r0, 8006464 <_Balloc+0x68>
 8006434:	2101      	movs	r1, #1
 8006436:	fa01 f605 	lsl.w	r6, r1, r5
 800643a:	1d72      	adds	r2, r6, #5
 800643c:	0092      	lsls	r2, r2, #2
 800643e:	4620      	mov	r0, r4
 8006440:	f7fe f942 	bl	80046c8 <_calloc_r>
 8006444:	b160      	cbz	r0, 8006460 <_Balloc+0x64>
 8006446:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800644a:	e00e      	b.n	800646a <_Balloc+0x6e>
 800644c:	2221      	movs	r2, #33	; 0x21
 800644e:	2104      	movs	r1, #4
 8006450:	4620      	mov	r0, r4
 8006452:	f7fe f939 	bl	80046c8 <_calloc_r>
 8006456:	69e3      	ldr	r3, [r4, #28]
 8006458:	60f0      	str	r0, [r6, #12]
 800645a:	68db      	ldr	r3, [r3, #12]
 800645c:	2b00      	cmp	r3, #0
 800645e:	d1e4      	bne.n	800642a <_Balloc+0x2e>
 8006460:	2000      	movs	r0, #0
 8006462:	bd70      	pop	{r4, r5, r6, pc}
 8006464:	6802      	ldr	r2, [r0, #0]
 8006466:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800646a:	2300      	movs	r3, #0
 800646c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8006470:	e7f7      	b.n	8006462 <_Balloc+0x66>
 8006472:	bf00      	nop
 8006474:	08008d23 	.word	0x08008d23
 8006478:	08008da3 	.word	0x08008da3

0800647c <_Bfree>:
 800647c:	b570      	push	{r4, r5, r6, lr}
 800647e:	69c6      	ldr	r6, [r0, #28]
 8006480:	4605      	mov	r5, r0
 8006482:	460c      	mov	r4, r1
 8006484:	b976      	cbnz	r6, 80064a4 <_Bfree+0x28>
 8006486:	2010      	movs	r0, #16
 8006488:	f7fe f934 	bl	80046f4 <malloc>
 800648c:	4602      	mov	r2, r0
 800648e:	61e8      	str	r0, [r5, #28]
 8006490:	b920      	cbnz	r0, 800649c <_Bfree+0x20>
 8006492:	4b09      	ldr	r3, [pc, #36]	; (80064b8 <_Bfree+0x3c>)
 8006494:	4809      	ldr	r0, [pc, #36]	; (80064bc <_Bfree+0x40>)
 8006496:	218f      	movs	r1, #143	; 0x8f
 8006498:	f000 fda2 	bl	8006fe0 <__assert_func>
 800649c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80064a0:	6006      	str	r6, [r0, #0]
 80064a2:	60c6      	str	r6, [r0, #12]
 80064a4:	b13c      	cbz	r4, 80064b6 <_Bfree+0x3a>
 80064a6:	69eb      	ldr	r3, [r5, #28]
 80064a8:	6862      	ldr	r2, [r4, #4]
 80064aa:	68db      	ldr	r3, [r3, #12]
 80064ac:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80064b0:	6021      	str	r1, [r4, #0]
 80064b2:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80064b6:	bd70      	pop	{r4, r5, r6, pc}
 80064b8:	08008d23 	.word	0x08008d23
 80064bc:	08008da3 	.word	0x08008da3

080064c0 <__multadd>:
 80064c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80064c4:	690d      	ldr	r5, [r1, #16]
 80064c6:	4607      	mov	r7, r0
 80064c8:	460c      	mov	r4, r1
 80064ca:	461e      	mov	r6, r3
 80064cc:	f101 0c14 	add.w	ip, r1, #20
 80064d0:	2000      	movs	r0, #0
 80064d2:	f8dc 3000 	ldr.w	r3, [ip]
 80064d6:	b299      	uxth	r1, r3
 80064d8:	fb02 6101 	mla	r1, r2, r1, r6
 80064dc:	0c1e      	lsrs	r6, r3, #16
 80064de:	0c0b      	lsrs	r3, r1, #16
 80064e0:	fb02 3306 	mla	r3, r2, r6, r3
 80064e4:	b289      	uxth	r1, r1
 80064e6:	3001      	adds	r0, #1
 80064e8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80064ec:	4285      	cmp	r5, r0
 80064ee:	f84c 1b04 	str.w	r1, [ip], #4
 80064f2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80064f6:	dcec      	bgt.n	80064d2 <__multadd+0x12>
 80064f8:	b30e      	cbz	r6, 800653e <__multadd+0x7e>
 80064fa:	68a3      	ldr	r3, [r4, #8]
 80064fc:	42ab      	cmp	r3, r5
 80064fe:	dc19      	bgt.n	8006534 <__multadd+0x74>
 8006500:	6861      	ldr	r1, [r4, #4]
 8006502:	4638      	mov	r0, r7
 8006504:	3101      	adds	r1, #1
 8006506:	f7ff ff79 	bl	80063fc <_Balloc>
 800650a:	4680      	mov	r8, r0
 800650c:	b928      	cbnz	r0, 800651a <__multadd+0x5a>
 800650e:	4602      	mov	r2, r0
 8006510:	4b0c      	ldr	r3, [pc, #48]	; (8006544 <__multadd+0x84>)
 8006512:	480d      	ldr	r0, [pc, #52]	; (8006548 <__multadd+0x88>)
 8006514:	21ba      	movs	r1, #186	; 0xba
 8006516:	f000 fd63 	bl	8006fe0 <__assert_func>
 800651a:	6922      	ldr	r2, [r4, #16]
 800651c:	3202      	adds	r2, #2
 800651e:	f104 010c 	add.w	r1, r4, #12
 8006522:	0092      	lsls	r2, r2, #2
 8006524:	300c      	adds	r0, #12
 8006526:	f7ff f895 	bl	8005654 <memcpy>
 800652a:	4621      	mov	r1, r4
 800652c:	4638      	mov	r0, r7
 800652e:	f7ff ffa5 	bl	800647c <_Bfree>
 8006532:	4644      	mov	r4, r8
 8006534:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8006538:	3501      	adds	r5, #1
 800653a:	615e      	str	r6, [r3, #20]
 800653c:	6125      	str	r5, [r4, #16]
 800653e:	4620      	mov	r0, r4
 8006540:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006544:	08008d92 	.word	0x08008d92
 8006548:	08008da3 	.word	0x08008da3

0800654c <__hi0bits>:
 800654c:	0c03      	lsrs	r3, r0, #16
 800654e:	041b      	lsls	r3, r3, #16
 8006550:	b9d3      	cbnz	r3, 8006588 <__hi0bits+0x3c>
 8006552:	0400      	lsls	r0, r0, #16
 8006554:	2310      	movs	r3, #16
 8006556:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800655a:	bf04      	itt	eq
 800655c:	0200      	lsleq	r0, r0, #8
 800655e:	3308      	addeq	r3, #8
 8006560:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8006564:	bf04      	itt	eq
 8006566:	0100      	lsleq	r0, r0, #4
 8006568:	3304      	addeq	r3, #4
 800656a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800656e:	bf04      	itt	eq
 8006570:	0080      	lsleq	r0, r0, #2
 8006572:	3302      	addeq	r3, #2
 8006574:	2800      	cmp	r0, #0
 8006576:	db05      	blt.n	8006584 <__hi0bits+0x38>
 8006578:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800657c:	f103 0301 	add.w	r3, r3, #1
 8006580:	bf08      	it	eq
 8006582:	2320      	moveq	r3, #32
 8006584:	4618      	mov	r0, r3
 8006586:	4770      	bx	lr
 8006588:	2300      	movs	r3, #0
 800658a:	e7e4      	b.n	8006556 <__hi0bits+0xa>

0800658c <__lo0bits>:
 800658c:	6803      	ldr	r3, [r0, #0]
 800658e:	f013 0207 	ands.w	r2, r3, #7
 8006592:	d00c      	beq.n	80065ae <__lo0bits+0x22>
 8006594:	07d9      	lsls	r1, r3, #31
 8006596:	d422      	bmi.n	80065de <__lo0bits+0x52>
 8006598:	079a      	lsls	r2, r3, #30
 800659a:	bf49      	itett	mi
 800659c:	085b      	lsrmi	r3, r3, #1
 800659e:	089b      	lsrpl	r3, r3, #2
 80065a0:	6003      	strmi	r3, [r0, #0]
 80065a2:	2201      	movmi	r2, #1
 80065a4:	bf5c      	itt	pl
 80065a6:	6003      	strpl	r3, [r0, #0]
 80065a8:	2202      	movpl	r2, #2
 80065aa:	4610      	mov	r0, r2
 80065ac:	4770      	bx	lr
 80065ae:	b299      	uxth	r1, r3
 80065b0:	b909      	cbnz	r1, 80065b6 <__lo0bits+0x2a>
 80065b2:	0c1b      	lsrs	r3, r3, #16
 80065b4:	2210      	movs	r2, #16
 80065b6:	b2d9      	uxtb	r1, r3
 80065b8:	b909      	cbnz	r1, 80065be <__lo0bits+0x32>
 80065ba:	3208      	adds	r2, #8
 80065bc:	0a1b      	lsrs	r3, r3, #8
 80065be:	0719      	lsls	r1, r3, #28
 80065c0:	bf04      	itt	eq
 80065c2:	091b      	lsreq	r3, r3, #4
 80065c4:	3204      	addeq	r2, #4
 80065c6:	0799      	lsls	r1, r3, #30
 80065c8:	bf04      	itt	eq
 80065ca:	089b      	lsreq	r3, r3, #2
 80065cc:	3202      	addeq	r2, #2
 80065ce:	07d9      	lsls	r1, r3, #31
 80065d0:	d403      	bmi.n	80065da <__lo0bits+0x4e>
 80065d2:	085b      	lsrs	r3, r3, #1
 80065d4:	f102 0201 	add.w	r2, r2, #1
 80065d8:	d003      	beq.n	80065e2 <__lo0bits+0x56>
 80065da:	6003      	str	r3, [r0, #0]
 80065dc:	e7e5      	b.n	80065aa <__lo0bits+0x1e>
 80065de:	2200      	movs	r2, #0
 80065e0:	e7e3      	b.n	80065aa <__lo0bits+0x1e>
 80065e2:	2220      	movs	r2, #32
 80065e4:	e7e1      	b.n	80065aa <__lo0bits+0x1e>
	...

080065e8 <__i2b>:
 80065e8:	b510      	push	{r4, lr}
 80065ea:	460c      	mov	r4, r1
 80065ec:	2101      	movs	r1, #1
 80065ee:	f7ff ff05 	bl	80063fc <_Balloc>
 80065f2:	4602      	mov	r2, r0
 80065f4:	b928      	cbnz	r0, 8006602 <__i2b+0x1a>
 80065f6:	4b05      	ldr	r3, [pc, #20]	; (800660c <__i2b+0x24>)
 80065f8:	4805      	ldr	r0, [pc, #20]	; (8006610 <__i2b+0x28>)
 80065fa:	f240 1145 	movw	r1, #325	; 0x145
 80065fe:	f000 fcef 	bl	8006fe0 <__assert_func>
 8006602:	2301      	movs	r3, #1
 8006604:	6144      	str	r4, [r0, #20]
 8006606:	6103      	str	r3, [r0, #16]
 8006608:	bd10      	pop	{r4, pc}
 800660a:	bf00      	nop
 800660c:	08008d92 	.word	0x08008d92
 8006610:	08008da3 	.word	0x08008da3

08006614 <__multiply>:
 8006614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006618:	4691      	mov	r9, r2
 800661a:	690a      	ldr	r2, [r1, #16]
 800661c:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8006620:	429a      	cmp	r2, r3
 8006622:	bfb8      	it	lt
 8006624:	460b      	movlt	r3, r1
 8006626:	460c      	mov	r4, r1
 8006628:	bfbc      	itt	lt
 800662a:	464c      	movlt	r4, r9
 800662c:	4699      	movlt	r9, r3
 800662e:	6927      	ldr	r7, [r4, #16]
 8006630:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8006634:	68a3      	ldr	r3, [r4, #8]
 8006636:	6861      	ldr	r1, [r4, #4]
 8006638:	eb07 060a 	add.w	r6, r7, sl
 800663c:	42b3      	cmp	r3, r6
 800663e:	b085      	sub	sp, #20
 8006640:	bfb8      	it	lt
 8006642:	3101      	addlt	r1, #1
 8006644:	f7ff feda 	bl	80063fc <_Balloc>
 8006648:	b930      	cbnz	r0, 8006658 <__multiply+0x44>
 800664a:	4602      	mov	r2, r0
 800664c:	4b44      	ldr	r3, [pc, #272]	; (8006760 <__multiply+0x14c>)
 800664e:	4845      	ldr	r0, [pc, #276]	; (8006764 <__multiply+0x150>)
 8006650:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8006654:	f000 fcc4 	bl	8006fe0 <__assert_func>
 8006658:	f100 0514 	add.w	r5, r0, #20
 800665c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8006660:	462b      	mov	r3, r5
 8006662:	2200      	movs	r2, #0
 8006664:	4543      	cmp	r3, r8
 8006666:	d321      	bcc.n	80066ac <__multiply+0x98>
 8006668:	f104 0314 	add.w	r3, r4, #20
 800666c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8006670:	f109 0314 	add.w	r3, r9, #20
 8006674:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8006678:	9202      	str	r2, [sp, #8]
 800667a:	1b3a      	subs	r2, r7, r4
 800667c:	3a15      	subs	r2, #21
 800667e:	f022 0203 	bic.w	r2, r2, #3
 8006682:	3204      	adds	r2, #4
 8006684:	f104 0115 	add.w	r1, r4, #21
 8006688:	428f      	cmp	r7, r1
 800668a:	bf38      	it	cc
 800668c:	2204      	movcc	r2, #4
 800668e:	9201      	str	r2, [sp, #4]
 8006690:	9a02      	ldr	r2, [sp, #8]
 8006692:	9303      	str	r3, [sp, #12]
 8006694:	429a      	cmp	r2, r3
 8006696:	d80c      	bhi.n	80066b2 <__multiply+0x9e>
 8006698:	2e00      	cmp	r6, #0
 800669a:	dd03      	ble.n	80066a4 <__multiply+0x90>
 800669c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80066a0:	2b00      	cmp	r3, #0
 80066a2:	d05b      	beq.n	800675c <__multiply+0x148>
 80066a4:	6106      	str	r6, [r0, #16]
 80066a6:	b005      	add	sp, #20
 80066a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066ac:	f843 2b04 	str.w	r2, [r3], #4
 80066b0:	e7d8      	b.n	8006664 <__multiply+0x50>
 80066b2:	f8b3 a000 	ldrh.w	sl, [r3]
 80066b6:	f1ba 0f00 	cmp.w	sl, #0
 80066ba:	d024      	beq.n	8006706 <__multiply+0xf2>
 80066bc:	f104 0e14 	add.w	lr, r4, #20
 80066c0:	46a9      	mov	r9, r5
 80066c2:	f04f 0c00 	mov.w	ip, #0
 80066c6:	f85e 2b04 	ldr.w	r2, [lr], #4
 80066ca:	f8d9 1000 	ldr.w	r1, [r9]
 80066ce:	fa1f fb82 	uxth.w	fp, r2
 80066d2:	b289      	uxth	r1, r1
 80066d4:	fb0a 110b 	mla	r1, sl, fp, r1
 80066d8:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80066dc:	f8d9 2000 	ldr.w	r2, [r9]
 80066e0:	4461      	add	r1, ip
 80066e2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80066e6:	fb0a c20b 	mla	r2, sl, fp, ip
 80066ea:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80066ee:	b289      	uxth	r1, r1
 80066f0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80066f4:	4577      	cmp	r7, lr
 80066f6:	f849 1b04 	str.w	r1, [r9], #4
 80066fa:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80066fe:	d8e2      	bhi.n	80066c6 <__multiply+0xb2>
 8006700:	9a01      	ldr	r2, [sp, #4]
 8006702:	f845 c002 	str.w	ip, [r5, r2]
 8006706:	9a03      	ldr	r2, [sp, #12]
 8006708:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800670c:	3304      	adds	r3, #4
 800670e:	f1b9 0f00 	cmp.w	r9, #0
 8006712:	d021      	beq.n	8006758 <__multiply+0x144>
 8006714:	6829      	ldr	r1, [r5, #0]
 8006716:	f104 0c14 	add.w	ip, r4, #20
 800671a:	46ae      	mov	lr, r5
 800671c:	f04f 0a00 	mov.w	sl, #0
 8006720:	f8bc b000 	ldrh.w	fp, [ip]
 8006724:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8006728:	fb09 220b 	mla	r2, r9, fp, r2
 800672c:	4452      	add	r2, sl
 800672e:	b289      	uxth	r1, r1
 8006730:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8006734:	f84e 1b04 	str.w	r1, [lr], #4
 8006738:	f85c 1b04 	ldr.w	r1, [ip], #4
 800673c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006740:	f8be 1000 	ldrh.w	r1, [lr]
 8006744:	fb09 110a 	mla	r1, r9, sl, r1
 8006748:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 800674c:	4567      	cmp	r7, ip
 800674e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006752:	d8e5      	bhi.n	8006720 <__multiply+0x10c>
 8006754:	9a01      	ldr	r2, [sp, #4]
 8006756:	50a9      	str	r1, [r5, r2]
 8006758:	3504      	adds	r5, #4
 800675a:	e799      	b.n	8006690 <__multiply+0x7c>
 800675c:	3e01      	subs	r6, #1
 800675e:	e79b      	b.n	8006698 <__multiply+0x84>
 8006760:	08008d92 	.word	0x08008d92
 8006764:	08008da3 	.word	0x08008da3

08006768 <__pow5mult>:
 8006768:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800676c:	4615      	mov	r5, r2
 800676e:	f012 0203 	ands.w	r2, r2, #3
 8006772:	4606      	mov	r6, r0
 8006774:	460f      	mov	r7, r1
 8006776:	d007      	beq.n	8006788 <__pow5mult+0x20>
 8006778:	4c25      	ldr	r4, [pc, #148]	; (8006810 <__pow5mult+0xa8>)
 800677a:	3a01      	subs	r2, #1
 800677c:	2300      	movs	r3, #0
 800677e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8006782:	f7ff fe9d 	bl	80064c0 <__multadd>
 8006786:	4607      	mov	r7, r0
 8006788:	10ad      	asrs	r5, r5, #2
 800678a:	d03d      	beq.n	8006808 <__pow5mult+0xa0>
 800678c:	69f4      	ldr	r4, [r6, #28]
 800678e:	b97c      	cbnz	r4, 80067b0 <__pow5mult+0x48>
 8006790:	2010      	movs	r0, #16
 8006792:	f7fd ffaf 	bl	80046f4 <malloc>
 8006796:	4602      	mov	r2, r0
 8006798:	61f0      	str	r0, [r6, #28]
 800679a:	b928      	cbnz	r0, 80067a8 <__pow5mult+0x40>
 800679c:	4b1d      	ldr	r3, [pc, #116]	; (8006814 <__pow5mult+0xac>)
 800679e:	481e      	ldr	r0, [pc, #120]	; (8006818 <__pow5mult+0xb0>)
 80067a0:	f240 11b3 	movw	r1, #435	; 0x1b3
 80067a4:	f000 fc1c 	bl	8006fe0 <__assert_func>
 80067a8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80067ac:	6004      	str	r4, [r0, #0]
 80067ae:	60c4      	str	r4, [r0, #12]
 80067b0:	f8d6 801c 	ldr.w	r8, [r6, #28]
 80067b4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80067b8:	b94c      	cbnz	r4, 80067ce <__pow5mult+0x66>
 80067ba:	f240 2171 	movw	r1, #625	; 0x271
 80067be:	4630      	mov	r0, r6
 80067c0:	f7ff ff12 	bl	80065e8 <__i2b>
 80067c4:	2300      	movs	r3, #0
 80067c6:	f8c8 0008 	str.w	r0, [r8, #8]
 80067ca:	4604      	mov	r4, r0
 80067cc:	6003      	str	r3, [r0, #0]
 80067ce:	f04f 0900 	mov.w	r9, #0
 80067d2:	07eb      	lsls	r3, r5, #31
 80067d4:	d50a      	bpl.n	80067ec <__pow5mult+0x84>
 80067d6:	4639      	mov	r1, r7
 80067d8:	4622      	mov	r2, r4
 80067da:	4630      	mov	r0, r6
 80067dc:	f7ff ff1a 	bl	8006614 <__multiply>
 80067e0:	4639      	mov	r1, r7
 80067e2:	4680      	mov	r8, r0
 80067e4:	4630      	mov	r0, r6
 80067e6:	f7ff fe49 	bl	800647c <_Bfree>
 80067ea:	4647      	mov	r7, r8
 80067ec:	106d      	asrs	r5, r5, #1
 80067ee:	d00b      	beq.n	8006808 <__pow5mult+0xa0>
 80067f0:	6820      	ldr	r0, [r4, #0]
 80067f2:	b938      	cbnz	r0, 8006804 <__pow5mult+0x9c>
 80067f4:	4622      	mov	r2, r4
 80067f6:	4621      	mov	r1, r4
 80067f8:	4630      	mov	r0, r6
 80067fa:	f7ff ff0b 	bl	8006614 <__multiply>
 80067fe:	6020      	str	r0, [r4, #0]
 8006800:	f8c0 9000 	str.w	r9, [r0]
 8006804:	4604      	mov	r4, r0
 8006806:	e7e4      	b.n	80067d2 <__pow5mult+0x6a>
 8006808:	4638      	mov	r0, r7
 800680a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800680e:	bf00      	nop
 8006810:	08008ef0 	.word	0x08008ef0
 8006814:	08008d23 	.word	0x08008d23
 8006818:	08008da3 	.word	0x08008da3

0800681c <__lshift>:
 800681c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006820:	460c      	mov	r4, r1
 8006822:	6849      	ldr	r1, [r1, #4]
 8006824:	6923      	ldr	r3, [r4, #16]
 8006826:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800682a:	68a3      	ldr	r3, [r4, #8]
 800682c:	4607      	mov	r7, r0
 800682e:	4691      	mov	r9, r2
 8006830:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8006834:	f108 0601 	add.w	r6, r8, #1
 8006838:	42b3      	cmp	r3, r6
 800683a:	db0b      	blt.n	8006854 <__lshift+0x38>
 800683c:	4638      	mov	r0, r7
 800683e:	f7ff fddd 	bl	80063fc <_Balloc>
 8006842:	4605      	mov	r5, r0
 8006844:	b948      	cbnz	r0, 800685a <__lshift+0x3e>
 8006846:	4602      	mov	r2, r0
 8006848:	4b28      	ldr	r3, [pc, #160]	; (80068ec <__lshift+0xd0>)
 800684a:	4829      	ldr	r0, [pc, #164]	; (80068f0 <__lshift+0xd4>)
 800684c:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8006850:	f000 fbc6 	bl	8006fe0 <__assert_func>
 8006854:	3101      	adds	r1, #1
 8006856:	005b      	lsls	r3, r3, #1
 8006858:	e7ee      	b.n	8006838 <__lshift+0x1c>
 800685a:	2300      	movs	r3, #0
 800685c:	f100 0114 	add.w	r1, r0, #20
 8006860:	f100 0210 	add.w	r2, r0, #16
 8006864:	4618      	mov	r0, r3
 8006866:	4553      	cmp	r3, sl
 8006868:	db33      	blt.n	80068d2 <__lshift+0xb6>
 800686a:	6920      	ldr	r0, [r4, #16]
 800686c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8006870:	f104 0314 	add.w	r3, r4, #20
 8006874:	f019 091f 	ands.w	r9, r9, #31
 8006878:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800687c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8006880:	d02b      	beq.n	80068da <__lshift+0xbe>
 8006882:	f1c9 0e20 	rsb	lr, r9, #32
 8006886:	468a      	mov	sl, r1
 8006888:	2200      	movs	r2, #0
 800688a:	6818      	ldr	r0, [r3, #0]
 800688c:	fa00 f009 	lsl.w	r0, r0, r9
 8006890:	4310      	orrs	r0, r2
 8006892:	f84a 0b04 	str.w	r0, [sl], #4
 8006896:	f853 2b04 	ldr.w	r2, [r3], #4
 800689a:	459c      	cmp	ip, r3
 800689c:	fa22 f20e 	lsr.w	r2, r2, lr
 80068a0:	d8f3      	bhi.n	800688a <__lshift+0x6e>
 80068a2:	ebac 0304 	sub.w	r3, ip, r4
 80068a6:	3b15      	subs	r3, #21
 80068a8:	f023 0303 	bic.w	r3, r3, #3
 80068ac:	3304      	adds	r3, #4
 80068ae:	f104 0015 	add.w	r0, r4, #21
 80068b2:	4584      	cmp	ip, r0
 80068b4:	bf38      	it	cc
 80068b6:	2304      	movcc	r3, #4
 80068b8:	50ca      	str	r2, [r1, r3]
 80068ba:	b10a      	cbz	r2, 80068c0 <__lshift+0xa4>
 80068bc:	f108 0602 	add.w	r6, r8, #2
 80068c0:	3e01      	subs	r6, #1
 80068c2:	4638      	mov	r0, r7
 80068c4:	612e      	str	r6, [r5, #16]
 80068c6:	4621      	mov	r1, r4
 80068c8:	f7ff fdd8 	bl	800647c <_Bfree>
 80068cc:	4628      	mov	r0, r5
 80068ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80068d2:	f842 0f04 	str.w	r0, [r2, #4]!
 80068d6:	3301      	adds	r3, #1
 80068d8:	e7c5      	b.n	8006866 <__lshift+0x4a>
 80068da:	3904      	subs	r1, #4
 80068dc:	f853 2b04 	ldr.w	r2, [r3], #4
 80068e0:	f841 2f04 	str.w	r2, [r1, #4]!
 80068e4:	459c      	cmp	ip, r3
 80068e6:	d8f9      	bhi.n	80068dc <__lshift+0xc0>
 80068e8:	e7ea      	b.n	80068c0 <__lshift+0xa4>
 80068ea:	bf00      	nop
 80068ec:	08008d92 	.word	0x08008d92
 80068f0:	08008da3 	.word	0x08008da3

080068f4 <__mcmp>:
 80068f4:	b530      	push	{r4, r5, lr}
 80068f6:	6902      	ldr	r2, [r0, #16]
 80068f8:	690c      	ldr	r4, [r1, #16]
 80068fa:	1b12      	subs	r2, r2, r4
 80068fc:	d10e      	bne.n	800691c <__mcmp+0x28>
 80068fe:	f100 0314 	add.w	r3, r0, #20
 8006902:	3114      	adds	r1, #20
 8006904:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8006908:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800690c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8006910:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8006914:	42a5      	cmp	r5, r4
 8006916:	d003      	beq.n	8006920 <__mcmp+0x2c>
 8006918:	d305      	bcc.n	8006926 <__mcmp+0x32>
 800691a:	2201      	movs	r2, #1
 800691c:	4610      	mov	r0, r2
 800691e:	bd30      	pop	{r4, r5, pc}
 8006920:	4283      	cmp	r3, r0
 8006922:	d3f3      	bcc.n	800690c <__mcmp+0x18>
 8006924:	e7fa      	b.n	800691c <__mcmp+0x28>
 8006926:	f04f 32ff 	mov.w	r2, #4294967295
 800692a:	e7f7      	b.n	800691c <__mcmp+0x28>

0800692c <__mdiff>:
 800692c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006930:	460c      	mov	r4, r1
 8006932:	4606      	mov	r6, r0
 8006934:	4611      	mov	r1, r2
 8006936:	4620      	mov	r0, r4
 8006938:	4690      	mov	r8, r2
 800693a:	f7ff ffdb 	bl	80068f4 <__mcmp>
 800693e:	1e05      	subs	r5, r0, #0
 8006940:	d110      	bne.n	8006964 <__mdiff+0x38>
 8006942:	4629      	mov	r1, r5
 8006944:	4630      	mov	r0, r6
 8006946:	f7ff fd59 	bl	80063fc <_Balloc>
 800694a:	b930      	cbnz	r0, 800695a <__mdiff+0x2e>
 800694c:	4b3a      	ldr	r3, [pc, #232]	; (8006a38 <__mdiff+0x10c>)
 800694e:	4602      	mov	r2, r0
 8006950:	f240 2137 	movw	r1, #567	; 0x237
 8006954:	4839      	ldr	r0, [pc, #228]	; (8006a3c <__mdiff+0x110>)
 8006956:	f000 fb43 	bl	8006fe0 <__assert_func>
 800695a:	2301      	movs	r3, #1
 800695c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8006960:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006964:	bfa4      	itt	ge
 8006966:	4643      	movge	r3, r8
 8006968:	46a0      	movge	r8, r4
 800696a:	4630      	mov	r0, r6
 800696c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8006970:	bfa6      	itte	ge
 8006972:	461c      	movge	r4, r3
 8006974:	2500      	movge	r5, #0
 8006976:	2501      	movlt	r5, #1
 8006978:	f7ff fd40 	bl	80063fc <_Balloc>
 800697c:	b920      	cbnz	r0, 8006988 <__mdiff+0x5c>
 800697e:	4b2e      	ldr	r3, [pc, #184]	; (8006a38 <__mdiff+0x10c>)
 8006980:	4602      	mov	r2, r0
 8006982:	f240 2145 	movw	r1, #581	; 0x245
 8006986:	e7e5      	b.n	8006954 <__mdiff+0x28>
 8006988:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800698c:	6926      	ldr	r6, [r4, #16]
 800698e:	60c5      	str	r5, [r0, #12]
 8006990:	f104 0914 	add.w	r9, r4, #20
 8006994:	f108 0514 	add.w	r5, r8, #20
 8006998:	f100 0e14 	add.w	lr, r0, #20
 800699c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 80069a0:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80069a4:	f108 0210 	add.w	r2, r8, #16
 80069a8:	46f2      	mov	sl, lr
 80069aa:	2100      	movs	r1, #0
 80069ac:	f859 3b04 	ldr.w	r3, [r9], #4
 80069b0:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80069b4:	fa11 f88b 	uxtah	r8, r1, fp
 80069b8:	b299      	uxth	r1, r3
 80069ba:	0c1b      	lsrs	r3, r3, #16
 80069bc:	eba8 0801 	sub.w	r8, r8, r1
 80069c0:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80069c4:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80069c8:	fa1f f888 	uxth.w	r8, r8
 80069cc:	1419      	asrs	r1, r3, #16
 80069ce:	454e      	cmp	r6, r9
 80069d0:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80069d4:	f84a 3b04 	str.w	r3, [sl], #4
 80069d8:	d8e8      	bhi.n	80069ac <__mdiff+0x80>
 80069da:	1b33      	subs	r3, r6, r4
 80069dc:	3b15      	subs	r3, #21
 80069de:	f023 0303 	bic.w	r3, r3, #3
 80069e2:	3304      	adds	r3, #4
 80069e4:	3415      	adds	r4, #21
 80069e6:	42a6      	cmp	r6, r4
 80069e8:	bf38      	it	cc
 80069ea:	2304      	movcc	r3, #4
 80069ec:	441d      	add	r5, r3
 80069ee:	4473      	add	r3, lr
 80069f0:	469e      	mov	lr, r3
 80069f2:	462e      	mov	r6, r5
 80069f4:	4566      	cmp	r6, ip
 80069f6:	d30e      	bcc.n	8006a16 <__mdiff+0xea>
 80069f8:	f10c 0203 	add.w	r2, ip, #3
 80069fc:	1b52      	subs	r2, r2, r5
 80069fe:	f022 0203 	bic.w	r2, r2, #3
 8006a02:	3d03      	subs	r5, #3
 8006a04:	45ac      	cmp	ip, r5
 8006a06:	bf38      	it	cc
 8006a08:	2200      	movcc	r2, #0
 8006a0a:	4413      	add	r3, r2
 8006a0c:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8006a10:	b17a      	cbz	r2, 8006a32 <__mdiff+0x106>
 8006a12:	6107      	str	r7, [r0, #16]
 8006a14:	e7a4      	b.n	8006960 <__mdiff+0x34>
 8006a16:	f856 8b04 	ldr.w	r8, [r6], #4
 8006a1a:	fa11 f288 	uxtah	r2, r1, r8
 8006a1e:	1414      	asrs	r4, r2, #16
 8006a20:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8006a24:	b292      	uxth	r2, r2
 8006a26:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8006a2a:	f84e 2b04 	str.w	r2, [lr], #4
 8006a2e:	1421      	asrs	r1, r4, #16
 8006a30:	e7e0      	b.n	80069f4 <__mdiff+0xc8>
 8006a32:	3f01      	subs	r7, #1
 8006a34:	e7ea      	b.n	8006a0c <__mdiff+0xe0>
 8006a36:	bf00      	nop
 8006a38:	08008d92 	.word	0x08008d92
 8006a3c:	08008da3 	.word	0x08008da3

08006a40 <__d2b>:
 8006a40:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006a44:	460f      	mov	r7, r1
 8006a46:	2101      	movs	r1, #1
 8006a48:	ec59 8b10 	vmov	r8, r9, d0
 8006a4c:	4616      	mov	r6, r2
 8006a4e:	f7ff fcd5 	bl	80063fc <_Balloc>
 8006a52:	4604      	mov	r4, r0
 8006a54:	b930      	cbnz	r0, 8006a64 <__d2b+0x24>
 8006a56:	4602      	mov	r2, r0
 8006a58:	4b24      	ldr	r3, [pc, #144]	; (8006aec <__d2b+0xac>)
 8006a5a:	4825      	ldr	r0, [pc, #148]	; (8006af0 <__d2b+0xb0>)
 8006a5c:	f240 310f 	movw	r1, #783	; 0x30f
 8006a60:	f000 fabe 	bl	8006fe0 <__assert_func>
 8006a64:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8006a68:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8006a6c:	bb2d      	cbnz	r5, 8006aba <__d2b+0x7a>
 8006a6e:	9301      	str	r3, [sp, #4]
 8006a70:	f1b8 0300 	subs.w	r3, r8, #0
 8006a74:	d026      	beq.n	8006ac4 <__d2b+0x84>
 8006a76:	4668      	mov	r0, sp
 8006a78:	9300      	str	r3, [sp, #0]
 8006a7a:	f7ff fd87 	bl	800658c <__lo0bits>
 8006a7e:	e9dd 1200 	ldrd	r1, r2, [sp]
 8006a82:	b1e8      	cbz	r0, 8006ac0 <__d2b+0x80>
 8006a84:	f1c0 0320 	rsb	r3, r0, #32
 8006a88:	fa02 f303 	lsl.w	r3, r2, r3
 8006a8c:	430b      	orrs	r3, r1
 8006a8e:	40c2      	lsrs	r2, r0
 8006a90:	6163      	str	r3, [r4, #20]
 8006a92:	9201      	str	r2, [sp, #4]
 8006a94:	9b01      	ldr	r3, [sp, #4]
 8006a96:	61a3      	str	r3, [r4, #24]
 8006a98:	2b00      	cmp	r3, #0
 8006a9a:	bf14      	ite	ne
 8006a9c:	2202      	movne	r2, #2
 8006a9e:	2201      	moveq	r2, #1
 8006aa0:	6122      	str	r2, [r4, #16]
 8006aa2:	b1bd      	cbz	r5, 8006ad4 <__d2b+0x94>
 8006aa4:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8006aa8:	4405      	add	r5, r0
 8006aaa:	603d      	str	r5, [r7, #0]
 8006aac:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8006ab0:	6030      	str	r0, [r6, #0]
 8006ab2:	4620      	mov	r0, r4
 8006ab4:	b003      	add	sp, #12
 8006ab6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006aba:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8006abe:	e7d6      	b.n	8006a6e <__d2b+0x2e>
 8006ac0:	6161      	str	r1, [r4, #20]
 8006ac2:	e7e7      	b.n	8006a94 <__d2b+0x54>
 8006ac4:	a801      	add	r0, sp, #4
 8006ac6:	f7ff fd61 	bl	800658c <__lo0bits>
 8006aca:	9b01      	ldr	r3, [sp, #4]
 8006acc:	6163      	str	r3, [r4, #20]
 8006ace:	3020      	adds	r0, #32
 8006ad0:	2201      	movs	r2, #1
 8006ad2:	e7e5      	b.n	8006aa0 <__d2b+0x60>
 8006ad4:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8006ad8:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8006adc:	6038      	str	r0, [r7, #0]
 8006ade:	6918      	ldr	r0, [r3, #16]
 8006ae0:	f7ff fd34 	bl	800654c <__hi0bits>
 8006ae4:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8006ae8:	e7e2      	b.n	8006ab0 <__d2b+0x70>
 8006aea:	bf00      	nop
 8006aec:	08008d92 	.word	0x08008d92
 8006af0:	08008da3 	.word	0x08008da3

08006af4 <__sfputc_r>:
 8006af4:	6893      	ldr	r3, [r2, #8]
 8006af6:	3b01      	subs	r3, #1
 8006af8:	2b00      	cmp	r3, #0
 8006afa:	b410      	push	{r4}
 8006afc:	6093      	str	r3, [r2, #8]
 8006afe:	da08      	bge.n	8006b12 <__sfputc_r+0x1e>
 8006b00:	6994      	ldr	r4, [r2, #24]
 8006b02:	42a3      	cmp	r3, r4
 8006b04:	db01      	blt.n	8006b0a <__sfputc_r+0x16>
 8006b06:	290a      	cmp	r1, #10
 8006b08:	d103      	bne.n	8006b12 <__sfputc_r+0x1e>
 8006b0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006b0e:	f7fe bc6c 	b.w	80053ea <__swbuf_r>
 8006b12:	6813      	ldr	r3, [r2, #0]
 8006b14:	1c58      	adds	r0, r3, #1
 8006b16:	6010      	str	r0, [r2, #0]
 8006b18:	7019      	strb	r1, [r3, #0]
 8006b1a:	4608      	mov	r0, r1
 8006b1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8006b20:	4770      	bx	lr

08006b22 <__sfputs_r>:
 8006b22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006b24:	4606      	mov	r6, r0
 8006b26:	460f      	mov	r7, r1
 8006b28:	4614      	mov	r4, r2
 8006b2a:	18d5      	adds	r5, r2, r3
 8006b2c:	42ac      	cmp	r4, r5
 8006b2e:	d101      	bne.n	8006b34 <__sfputs_r+0x12>
 8006b30:	2000      	movs	r0, #0
 8006b32:	e007      	b.n	8006b44 <__sfputs_r+0x22>
 8006b34:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006b38:	463a      	mov	r2, r7
 8006b3a:	4630      	mov	r0, r6
 8006b3c:	f7ff ffda 	bl	8006af4 <__sfputc_r>
 8006b40:	1c43      	adds	r3, r0, #1
 8006b42:	d1f3      	bne.n	8006b2c <__sfputs_r+0xa>
 8006b44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08006b48 <_vfiprintf_r>:
 8006b48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006b4c:	460d      	mov	r5, r1
 8006b4e:	b09d      	sub	sp, #116	; 0x74
 8006b50:	4614      	mov	r4, r2
 8006b52:	4698      	mov	r8, r3
 8006b54:	4606      	mov	r6, r0
 8006b56:	b118      	cbz	r0, 8006b60 <_vfiprintf_r+0x18>
 8006b58:	6a03      	ldr	r3, [r0, #32]
 8006b5a:	b90b      	cbnz	r3, 8006b60 <_vfiprintf_r+0x18>
 8006b5c:	f7fe fb5e 	bl	800521c <__sinit>
 8006b60:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006b62:	07d9      	lsls	r1, r3, #31
 8006b64:	d405      	bmi.n	8006b72 <_vfiprintf_r+0x2a>
 8006b66:	89ab      	ldrh	r3, [r5, #12]
 8006b68:	059a      	lsls	r2, r3, #22
 8006b6a:	d402      	bmi.n	8006b72 <_vfiprintf_r+0x2a>
 8006b6c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006b6e:	f7fe fd6f 	bl	8005650 <__retarget_lock_acquire_recursive>
 8006b72:	89ab      	ldrh	r3, [r5, #12]
 8006b74:	071b      	lsls	r3, r3, #28
 8006b76:	d501      	bpl.n	8006b7c <_vfiprintf_r+0x34>
 8006b78:	692b      	ldr	r3, [r5, #16]
 8006b7a:	b99b      	cbnz	r3, 8006ba4 <_vfiprintf_r+0x5c>
 8006b7c:	4629      	mov	r1, r5
 8006b7e:	4630      	mov	r0, r6
 8006b80:	f7fe fc70 	bl	8005464 <__swsetup_r>
 8006b84:	b170      	cbz	r0, 8006ba4 <_vfiprintf_r+0x5c>
 8006b86:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006b88:	07dc      	lsls	r4, r3, #31
 8006b8a:	d504      	bpl.n	8006b96 <_vfiprintf_r+0x4e>
 8006b8c:	f04f 30ff 	mov.w	r0, #4294967295
 8006b90:	b01d      	add	sp, #116	; 0x74
 8006b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006b96:	89ab      	ldrh	r3, [r5, #12]
 8006b98:	0598      	lsls	r0, r3, #22
 8006b9a:	d4f7      	bmi.n	8006b8c <_vfiprintf_r+0x44>
 8006b9c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006b9e:	f7fe fd58 	bl	8005652 <__retarget_lock_release_recursive>
 8006ba2:	e7f3      	b.n	8006b8c <_vfiprintf_r+0x44>
 8006ba4:	2300      	movs	r3, #0
 8006ba6:	9309      	str	r3, [sp, #36]	; 0x24
 8006ba8:	2320      	movs	r3, #32
 8006baa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006bae:	f8cd 800c 	str.w	r8, [sp, #12]
 8006bb2:	2330      	movs	r3, #48	; 0x30
 8006bb4:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8006d68 <_vfiprintf_r+0x220>
 8006bb8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006bbc:	f04f 0901 	mov.w	r9, #1
 8006bc0:	4623      	mov	r3, r4
 8006bc2:	469a      	mov	sl, r3
 8006bc4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006bc8:	b10a      	cbz	r2, 8006bce <_vfiprintf_r+0x86>
 8006bca:	2a25      	cmp	r2, #37	; 0x25
 8006bcc:	d1f9      	bne.n	8006bc2 <_vfiprintf_r+0x7a>
 8006bce:	ebba 0b04 	subs.w	fp, sl, r4
 8006bd2:	d00b      	beq.n	8006bec <_vfiprintf_r+0xa4>
 8006bd4:	465b      	mov	r3, fp
 8006bd6:	4622      	mov	r2, r4
 8006bd8:	4629      	mov	r1, r5
 8006bda:	4630      	mov	r0, r6
 8006bdc:	f7ff ffa1 	bl	8006b22 <__sfputs_r>
 8006be0:	3001      	adds	r0, #1
 8006be2:	f000 80a9 	beq.w	8006d38 <_vfiprintf_r+0x1f0>
 8006be6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006be8:	445a      	add	r2, fp
 8006bea:	9209      	str	r2, [sp, #36]	; 0x24
 8006bec:	f89a 3000 	ldrb.w	r3, [sl]
 8006bf0:	2b00      	cmp	r3, #0
 8006bf2:	f000 80a1 	beq.w	8006d38 <_vfiprintf_r+0x1f0>
 8006bf6:	2300      	movs	r3, #0
 8006bf8:	f04f 32ff 	mov.w	r2, #4294967295
 8006bfc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006c00:	f10a 0a01 	add.w	sl, sl, #1
 8006c04:	9304      	str	r3, [sp, #16]
 8006c06:	9307      	str	r3, [sp, #28]
 8006c08:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006c0c:	931a      	str	r3, [sp, #104]	; 0x68
 8006c0e:	4654      	mov	r4, sl
 8006c10:	2205      	movs	r2, #5
 8006c12:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006c16:	4854      	ldr	r0, [pc, #336]	; (8006d68 <_vfiprintf_r+0x220>)
 8006c18:	f7f9 fada 	bl	80001d0 <memchr>
 8006c1c:	9a04      	ldr	r2, [sp, #16]
 8006c1e:	b9d8      	cbnz	r0, 8006c58 <_vfiprintf_r+0x110>
 8006c20:	06d1      	lsls	r1, r2, #27
 8006c22:	bf44      	itt	mi
 8006c24:	2320      	movmi	r3, #32
 8006c26:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006c2a:	0713      	lsls	r3, r2, #28
 8006c2c:	bf44      	itt	mi
 8006c2e:	232b      	movmi	r3, #43	; 0x2b
 8006c30:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006c34:	f89a 3000 	ldrb.w	r3, [sl]
 8006c38:	2b2a      	cmp	r3, #42	; 0x2a
 8006c3a:	d015      	beq.n	8006c68 <_vfiprintf_r+0x120>
 8006c3c:	9a07      	ldr	r2, [sp, #28]
 8006c3e:	4654      	mov	r4, sl
 8006c40:	2000      	movs	r0, #0
 8006c42:	f04f 0c0a 	mov.w	ip, #10
 8006c46:	4621      	mov	r1, r4
 8006c48:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006c4c:	3b30      	subs	r3, #48	; 0x30
 8006c4e:	2b09      	cmp	r3, #9
 8006c50:	d94d      	bls.n	8006cee <_vfiprintf_r+0x1a6>
 8006c52:	b1b0      	cbz	r0, 8006c82 <_vfiprintf_r+0x13a>
 8006c54:	9207      	str	r2, [sp, #28]
 8006c56:	e014      	b.n	8006c82 <_vfiprintf_r+0x13a>
 8006c58:	eba0 0308 	sub.w	r3, r0, r8
 8006c5c:	fa09 f303 	lsl.w	r3, r9, r3
 8006c60:	4313      	orrs	r3, r2
 8006c62:	9304      	str	r3, [sp, #16]
 8006c64:	46a2      	mov	sl, r4
 8006c66:	e7d2      	b.n	8006c0e <_vfiprintf_r+0xc6>
 8006c68:	9b03      	ldr	r3, [sp, #12]
 8006c6a:	1d19      	adds	r1, r3, #4
 8006c6c:	681b      	ldr	r3, [r3, #0]
 8006c6e:	9103      	str	r1, [sp, #12]
 8006c70:	2b00      	cmp	r3, #0
 8006c72:	bfbb      	ittet	lt
 8006c74:	425b      	neglt	r3, r3
 8006c76:	f042 0202 	orrlt.w	r2, r2, #2
 8006c7a:	9307      	strge	r3, [sp, #28]
 8006c7c:	9307      	strlt	r3, [sp, #28]
 8006c7e:	bfb8      	it	lt
 8006c80:	9204      	strlt	r2, [sp, #16]
 8006c82:	7823      	ldrb	r3, [r4, #0]
 8006c84:	2b2e      	cmp	r3, #46	; 0x2e
 8006c86:	d10c      	bne.n	8006ca2 <_vfiprintf_r+0x15a>
 8006c88:	7863      	ldrb	r3, [r4, #1]
 8006c8a:	2b2a      	cmp	r3, #42	; 0x2a
 8006c8c:	d134      	bne.n	8006cf8 <_vfiprintf_r+0x1b0>
 8006c8e:	9b03      	ldr	r3, [sp, #12]
 8006c90:	1d1a      	adds	r2, r3, #4
 8006c92:	681b      	ldr	r3, [r3, #0]
 8006c94:	9203      	str	r2, [sp, #12]
 8006c96:	2b00      	cmp	r3, #0
 8006c98:	bfb8      	it	lt
 8006c9a:	f04f 33ff 	movlt.w	r3, #4294967295
 8006c9e:	3402      	adds	r4, #2
 8006ca0:	9305      	str	r3, [sp, #20]
 8006ca2:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8006d78 <_vfiprintf_r+0x230>
 8006ca6:	7821      	ldrb	r1, [r4, #0]
 8006ca8:	2203      	movs	r2, #3
 8006caa:	4650      	mov	r0, sl
 8006cac:	f7f9 fa90 	bl	80001d0 <memchr>
 8006cb0:	b138      	cbz	r0, 8006cc2 <_vfiprintf_r+0x17a>
 8006cb2:	9b04      	ldr	r3, [sp, #16]
 8006cb4:	eba0 000a 	sub.w	r0, r0, sl
 8006cb8:	2240      	movs	r2, #64	; 0x40
 8006cba:	4082      	lsls	r2, r0
 8006cbc:	4313      	orrs	r3, r2
 8006cbe:	3401      	adds	r4, #1
 8006cc0:	9304      	str	r3, [sp, #16]
 8006cc2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006cc6:	4829      	ldr	r0, [pc, #164]	; (8006d6c <_vfiprintf_r+0x224>)
 8006cc8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006ccc:	2206      	movs	r2, #6
 8006cce:	f7f9 fa7f 	bl	80001d0 <memchr>
 8006cd2:	2800      	cmp	r0, #0
 8006cd4:	d03f      	beq.n	8006d56 <_vfiprintf_r+0x20e>
 8006cd6:	4b26      	ldr	r3, [pc, #152]	; (8006d70 <_vfiprintf_r+0x228>)
 8006cd8:	bb1b      	cbnz	r3, 8006d22 <_vfiprintf_r+0x1da>
 8006cda:	9b03      	ldr	r3, [sp, #12]
 8006cdc:	3307      	adds	r3, #7
 8006cde:	f023 0307 	bic.w	r3, r3, #7
 8006ce2:	3308      	adds	r3, #8
 8006ce4:	9303      	str	r3, [sp, #12]
 8006ce6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006ce8:	443b      	add	r3, r7
 8006cea:	9309      	str	r3, [sp, #36]	; 0x24
 8006cec:	e768      	b.n	8006bc0 <_vfiprintf_r+0x78>
 8006cee:	fb0c 3202 	mla	r2, ip, r2, r3
 8006cf2:	460c      	mov	r4, r1
 8006cf4:	2001      	movs	r0, #1
 8006cf6:	e7a6      	b.n	8006c46 <_vfiprintf_r+0xfe>
 8006cf8:	2300      	movs	r3, #0
 8006cfa:	3401      	adds	r4, #1
 8006cfc:	9305      	str	r3, [sp, #20]
 8006cfe:	4619      	mov	r1, r3
 8006d00:	f04f 0c0a 	mov.w	ip, #10
 8006d04:	4620      	mov	r0, r4
 8006d06:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006d0a:	3a30      	subs	r2, #48	; 0x30
 8006d0c:	2a09      	cmp	r2, #9
 8006d0e:	d903      	bls.n	8006d18 <_vfiprintf_r+0x1d0>
 8006d10:	2b00      	cmp	r3, #0
 8006d12:	d0c6      	beq.n	8006ca2 <_vfiprintf_r+0x15a>
 8006d14:	9105      	str	r1, [sp, #20]
 8006d16:	e7c4      	b.n	8006ca2 <_vfiprintf_r+0x15a>
 8006d18:	fb0c 2101 	mla	r1, ip, r1, r2
 8006d1c:	4604      	mov	r4, r0
 8006d1e:	2301      	movs	r3, #1
 8006d20:	e7f0      	b.n	8006d04 <_vfiprintf_r+0x1bc>
 8006d22:	ab03      	add	r3, sp, #12
 8006d24:	9300      	str	r3, [sp, #0]
 8006d26:	462a      	mov	r2, r5
 8006d28:	4b12      	ldr	r3, [pc, #72]	; (8006d74 <_vfiprintf_r+0x22c>)
 8006d2a:	a904      	add	r1, sp, #16
 8006d2c:	4630      	mov	r0, r6
 8006d2e:	f7fd fe35 	bl	800499c <_printf_float>
 8006d32:	4607      	mov	r7, r0
 8006d34:	1c78      	adds	r0, r7, #1
 8006d36:	d1d6      	bne.n	8006ce6 <_vfiprintf_r+0x19e>
 8006d38:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006d3a:	07d9      	lsls	r1, r3, #31
 8006d3c:	d405      	bmi.n	8006d4a <_vfiprintf_r+0x202>
 8006d3e:	89ab      	ldrh	r3, [r5, #12]
 8006d40:	059a      	lsls	r2, r3, #22
 8006d42:	d402      	bmi.n	8006d4a <_vfiprintf_r+0x202>
 8006d44:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006d46:	f7fe fc84 	bl	8005652 <__retarget_lock_release_recursive>
 8006d4a:	89ab      	ldrh	r3, [r5, #12]
 8006d4c:	065b      	lsls	r3, r3, #25
 8006d4e:	f53f af1d 	bmi.w	8006b8c <_vfiprintf_r+0x44>
 8006d52:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006d54:	e71c      	b.n	8006b90 <_vfiprintf_r+0x48>
 8006d56:	ab03      	add	r3, sp, #12
 8006d58:	9300      	str	r3, [sp, #0]
 8006d5a:	462a      	mov	r2, r5
 8006d5c:	4b05      	ldr	r3, [pc, #20]	; (8006d74 <_vfiprintf_r+0x22c>)
 8006d5e:	a904      	add	r1, sp, #16
 8006d60:	4630      	mov	r0, r6
 8006d62:	f7fe f8bf 	bl	8004ee4 <_printf_i>
 8006d66:	e7e4      	b.n	8006d32 <_vfiprintf_r+0x1ea>
 8006d68:	08008efc 	.word	0x08008efc
 8006d6c:	08008f06 	.word	0x08008f06
 8006d70:	0800499d 	.word	0x0800499d
 8006d74:	08006b23 	.word	0x08006b23
 8006d78:	08008f02 	.word	0x08008f02

08006d7c <__sflush_r>:
 8006d7c:	898a      	ldrh	r2, [r1, #12]
 8006d7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006d82:	4605      	mov	r5, r0
 8006d84:	0710      	lsls	r0, r2, #28
 8006d86:	460c      	mov	r4, r1
 8006d88:	d458      	bmi.n	8006e3c <__sflush_r+0xc0>
 8006d8a:	684b      	ldr	r3, [r1, #4]
 8006d8c:	2b00      	cmp	r3, #0
 8006d8e:	dc05      	bgt.n	8006d9c <__sflush_r+0x20>
 8006d90:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8006d92:	2b00      	cmp	r3, #0
 8006d94:	dc02      	bgt.n	8006d9c <__sflush_r+0x20>
 8006d96:	2000      	movs	r0, #0
 8006d98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006d9c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006d9e:	2e00      	cmp	r6, #0
 8006da0:	d0f9      	beq.n	8006d96 <__sflush_r+0x1a>
 8006da2:	2300      	movs	r3, #0
 8006da4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006da8:	682f      	ldr	r7, [r5, #0]
 8006daa:	6a21      	ldr	r1, [r4, #32]
 8006dac:	602b      	str	r3, [r5, #0]
 8006dae:	d032      	beq.n	8006e16 <__sflush_r+0x9a>
 8006db0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8006db2:	89a3      	ldrh	r3, [r4, #12]
 8006db4:	075a      	lsls	r2, r3, #29
 8006db6:	d505      	bpl.n	8006dc4 <__sflush_r+0x48>
 8006db8:	6863      	ldr	r3, [r4, #4]
 8006dba:	1ac0      	subs	r0, r0, r3
 8006dbc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006dbe:	b10b      	cbz	r3, 8006dc4 <__sflush_r+0x48>
 8006dc0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006dc2:	1ac0      	subs	r0, r0, r3
 8006dc4:	2300      	movs	r3, #0
 8006dc6:	4602      	mov	r2, r0
 8006dc8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006dca:	6a21      	ldr	r1, [r4, #32]
 8006dcc:	4628      	mov	r0, r5
 8006dce:	47b0      	blx	r6
 8006dd0:	1c43      	adds	r3, r0, #1
 8006dd2:	89a3      	ldrh	r3, [r4, #12]
 8006dd4:	d106      	bne.n	8006de4 <__sflush_r+0x68>
 8006dd6:	6829      	ldr	r1, [r5, #0]
 8006dd8:	291d      	cmp	r1, #29
 8006dda:	d82b      	bhi.n	8006e34 <__sflush_r+0xb8>
 8006ddc:	4a29      	ldr	r2, [pc, #164]	; (8006e84 <__sflush_r+0x108>)
 8006dde:	410a      	asrs	r2, r1
 8006de0:	07d6      	lsls	r6, r2, #31
 8006de2:	d427      	bmi.n	8006e34 <__sflush_r+0xb8>
 8006de4:	2200      	movs	r2, #0
 8006de6:	6062      	str	r2, [r4, #4]
 8006de8:	04d9      	lsls	r1, r3, #19
 8006dea:	6922      	ldr	r2, [r4, #16]
 8006dec:	6022      	str	r2, [r4, #0]
 8006dee:	d504      	bpl.n	8006dfa <__sflush_r+0x7e>
 8006df0:	1c42      	adds	r2, r0, #1
 8006df2:	d101      	bne.n	8006df8 <__sflush_r+0x7c>
 8006df4:	682b      	ldr	r3, [r5, #0]
 8006df6:	b903      	cbnz	r3, 8006dfa <__sflush_r+0x7e>
 8006df8:	6560      	str	r0, [r4, #84]	; 0x54
 8006dfa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8006dfc:	602f      	str	r7, [r5, #0]
 8006dfe:	2900      	cmp	r1, #0
 8006e00:	d0c9      	beq.n	8006d96 <__sflush_r+0x1a>
 8006e02:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8006e06:	4299      	cmp	r1, r3
 8006e08:	d002      	beq.n	8006e10 <__sflush_r+0x94>
 8006e0a:	4628      	mov	r0, r5
 8006e0c:	f7ff faaa 	bl	8006364 <_free_r>
 8006e10:	2000      	movs	r0, #0
 8006e12:	6360      	str	r0, [r4, #52]	; 0x34
 8006e14:	e7c0      	b.n	8006d98 <__sflush_r+0x1c>
 8006e16:	2301      	movs	r3, #1
 8006e18:	4628      	mov	r0, r5
 8006e1a:	47b0      	blx	r6
 8006e1c:	1c41      	adds	r1, r0, #1
 8006e1e:	d1c8      	bne.n	8006db2 <__sflush_r+0x36>
 8006e20:	682b      	ldr	r3, [r5, #0]
 8006e22:	2b00      	cmp	r3, #0
 8006e24:	d0c5      	beq.n	8006db2 <__sflush_r+0x36>
 8006e26:	2b1d      	cmp	r3, #29
 8006e28:	d001      	beq.n	8006e2e <__sflush_r+0xb2>
 8006e2a:	2b16      	cmp	r3, #22
 8006e2c:	d101      	bne.n	8006e32 <__sflush_r+0xb6>
 8006e2e:	602f      	str	r7, [r5, #0]
 8006e30:	e7b1      	b.n	8006d96 <__sflush_r+0x1a>
 8006e32:	89a3      	ldrh	r3, [r4, #12]
 8006e34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006e38:	81a3      	strh	r3, [r4, #12]
 8006e3a:	e7ad      	b.n	8006d98 <__sflush_r+0x1c>
 8006e3c:	690f      	ldr	r7, [r1, #16]
 8006e3e:	2f00      	cmp	r7, #0
 8006e40:	d0a9      	beq.n	8006d96 <__sflush_r+0x1a>
 8006e42:	0793      	lsls	r3, r2, #30
 8006e44:	680e      	ldr	r6, [r1, #0]
 8006e46:	bf08      	it	eq
 8006e48:	694b      	ldreq	r3, [r1, #20]
 8006e4a:	600f      	str	r7, [r1, #0]
 8006e4c:	bf18      	it	ne
 8006e4e:	2300      	movne	r3, #0
 8006e50:	eba6 0807 	sub.w	r8, r6, r7
 8006e54:	608b      	str	r3, [r1, #8]
 8006e56:	f1b8 0f00 	cmp.w	r8, #0
 8006e5a:	dd9c      	ble.n	8006d96 <__sflush_r+0x1a>
 8006e5c:	6a21      	ldr	r1, [r4, #32]
 8006e5e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006e60:	4643      	mov	r3, r8
 8006e62:	463a      	mov	r2, r7
 8006e64:	4628      	mov	r0, r5
 8006e66:	47b0      	blx	r6
 8006e68:	2800      	cmp	r0, #0
 8006e6a:	dc06      	bgt.n	8006e7a <__sflush_r+0xfe>
 8006e6c:	89a3      	ldrh	r3, [r4, #12]
 8006e6e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006e72:	81a3      	strh	r3, [r4, #12]
 8006e74:	f04f 30ff 	mov.w	r0, #4294967295
 8006e78:	e78e      	b.n	8006d98 <__sflush_r+0x1c>
 8006e7a:	4407      	add	r7, r0
 8006e7c:	eba8 0800 	sub.w	r8, r8, r0
 8006e80:	e7e9      	b.n	8006e56 <__sflush_r+0xda>
 8006e82:	bf00      	nop
 8006e84:	dfbffffe 	.word	0xdfbffffe

08006e88 <_fflush_r>:
 8006e88:	b538      	push	{r3, r4, r5, lr}
 8006e8a:	690b      	ldr	r3, [r1, #16]
 8006e8c:	4605      	mov	r5, r0
 8006e8e:	460c      	mov	r4, r1
 8006e90:	b913      	cbnz	r3, 8006e98 <_fflush_r+0x10>
 8006e92:	2500      	movs	r5, #0
 8006e94:	4628      	mov	r0, r5
 8006e96:	bd38      	pop	{r3, r4, r5, pc}
 8006e98:	b118      	cbz	r0, 8006ea2 <_fflush_r+0x1a>
 8006e9a:	6a03      	ldr	r3, [r0, #32]
 8006e9c:	b90b      	cbnz	r3, 8006ea2 <_fflush_r+0x1a>
 8006e9e:	f7fe f9bd 	bl	800521c <__sinit>
 8006ea2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006ea6:	2b00      	cmp	r3, #0
 8006ea8:	d0f3      	beq.n	8006e92 <_fflush_r+0xa>
 8006eaa:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006eac:	07d0      	lsls	r0, r2, #31
 8006eae:	d404      	bmi.n	8006eba <_fflush_r+0x32>
 8006eb0:	0599      	lsls	r1, r3, #22
 8006eb2:	d402      	bmi.n	8006eba <_fflush_r+0x32>
 8006eb4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006eb6:	f7fe fbcb 	bl	8005650 <__retarget_lock_acquire_recursive>
 8006eba:	4628      	mov	r0, r5
 8006ebc:	4621      	mov	r1, r4
 8006ebe:	f7ff ff5d 	bl	8006d7c <__sflush_r>
 8006ec2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006ec4:	07da      	lsls	r2, r3, #31
 8006ec6:	4605      	mov	r5, r0
 8006ec8:	d4e4      	bmi.n	8006e94 <_fflush_r+0xc>
 8006eca:	89a3      	ldrh	r3, [r4, #12]
 8006ecc:	059b      	lsls	r3, r3, #22
 8006ece:	d4e1      	bmi.n	8006e94 <_fflush_r+0xc>
 8006ed0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006ed2:	f7fe fbbe 	bl	8005652 <__retarget_lock_release_recursive>
 8006ed6:	e7dd      	b.n	8006e94 <_fflush_r+0xc>

08006ed8 <__swhatbuf_r>:
 8006ed8:	b570      	push	{r4, r5, r6, lr}
 8006eda:	460c      	mov	r4, r1
 8006edc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006ee0:	2900      	cmp	r1, #0
 8006ee2:	b096      	sub	sp, #88	; 0x58
 8006ee4:	4615      	mov	r5, r2
 8006ee6:	461e      	mov	r6, r3
 8006ee8:	da0d      	bge.n	8006f06 <__swhatbuf_r+0x2e>
 8006eea:	89a3      	ldrh	r3, [r4, #12]
 8006eec:	f013 0f80 	tst.w	r3, #128	; 0x80
 8006ef0:	f04f 0100 	mov.w	r1, #0
 8006ef4:	bf0c      	ite	eq
 8006ef6:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8006efa:	2340      	movne	r3, #64	; 0x40
 8006efc:	2000      	movs	r0, #0
 8006efe:	6031      	str	r1, [r6, #0]
 8006f00:	602b      	str	r3, [r5, #0]
 8006f02:	b016      	add	sp, #88	; 0x58
 8006f04:	bd70      	pop	{r4, r5, r6, pc}
 8006f06:	466a      	mov	r2, sp
 8006f08:	f000 f848 	bl	8006f9c <_fstat_r>
 8006f0c:	2800      	cmp	r0, #0
 8006f0e:	dbec      	blt.n	8006eea <__swhatbuf_r+0x12>
 8006f10:	9901      	ldr	r1, [sp, #4]
 8006f12:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8006f16:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8006f1a:	4259      	negs	r1, r3
 8006f1c:	4159      	adcs	r1, r3
 8006f1e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006f22:	e7eb      	b.n	8006efc <__swhatbuf_r+0x24>

08006f24 <__smakebuf_r>:
 8006f24:	898b      	ldrh	r3, [r1, #12]
 8006f26:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006f28:	079d      	lsls	r5, r3, #30
 8006f2a:	4606      	mov	r6, r0
 8006f2c:	460c      	mov	r4, r1
 8006f2e:	d507      	bpl.n	8006f40 <__smakebuf_r+0x1c>
 8006f30:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006f34:	6023      	str	r3, [r4, #0]
 8006f36:	6123      	str	r3, [r4, #16]
 8006f38:	2301      	movs	r3, #1
 8006f3a:	6163      	str	r3, [r4, #20]
 8006f3c:	b002      	add	sp, #8
 8006f3e:	bd70      	pop	{r4, r5, r6, pc}
 8006f40:	ab01      	add	r3, sp, #4
 8006f42:	466a      	mov	r2, sp
 8006f44:	f7ff ffc8 	bl	8006ed8 <__swhatbuf_r>
 8006f48:	9900      	ldr	r1, [sp, #0]
 8006f4a:	4605      	mov	r5, r0
 8006f4c:	4630      	mov	r0, r6
 8006f4e:	f7fd fbf9 	bl	8004744 <_malloc_r>
 8006f52:	b948      	cbnz	r0, 8006f68 <__smakebuf_r+0x44>
 8006f54:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006f58:	059a      	lsls	r2, r3, #22
 8006f5a:	d4ef      	bmi.n	8006f3c <__smakebuf_r+0x18>
 8006f5c:	f023 0303 	bic.w	r3, r3, #3
 8006f60:	f043 0302 	orr.w	r3, r3, #2
 8006f64:	81a3      	strh	r3, [r4, #12]
 8006f66:	e7e3      	b.n	8006f30 <__smakebuf_r+0xc>
 8006f68:	89a3      	ldrh	r3, [r4, #12]
 8006f6a:	6020      	str	r0, [r4, #0]
 8006f6c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006f70:	81a3      	strh	r3, [r4, #12]
 8006f72:	9b00      	ldr	r3, [sp, #0]
 8006f74:	6163      	str	r3, [r4, #20]
 8006f76:	9b01      	ldr	r3, [sp, #4]
 8006f78:	6120      	str	r0, [r4, #16]
 8006f7a:	b15b      	cbz	r3, 8006f94 <__smakebuf_r+0x70>
 8006f7c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006f80:	4630      	mov	r0, r6
 8006f82:	f000 f81d 	bl	8006fc0 <_isatty_r>
 8006f86:	b128      	cbz	r0, 8006f94 <__smakebuf_r+0x70>
 8006f88:	89a3      	ldrh	r3, [r4, #12]
 8006f8a:	f023 0303 	bic.w	r3, r3, #3
 8006f8e:	f043 0301 	orr.w	r3, r3, #1
 8006f92:	81a3      	strh	r3, [r4, #12]
 8006f94:	89a3      	ldrh	r3, [r4, #12]
 8006f96:	431d      	orrs	r5, r3
 8006f98:	81a5      	strh	r5, [r4, #12]
 8006f9a:	e7cf      	b.n	8006f3c <__smakebuf_r+0x18>

08006f9c <_fstat_r>:
 8006f9c:	b538      	push	{r3, r4, r5, lr}
 8006f9e:	4d07      	ldr	r5, [pc, #28]	; (8006fbc <_fstat_r+0x20>)
 8006fa0:	2300      	movs	r3, #0
 8006fa2:	4604      	mov	r4, r0
 8006fa4:	4608      	mov	r0, r1
 8006fa6:	4611      	mov	r1, r2
 8006fa8:	602b      	str	r3, [r5, #0]
 8006faa:	f7fa f840 	bl	800102e <_fstat>
 8006fae:	1c43      	adds	r3, r0, #1
 8006fb0:	d102      	bne.n	8006fb8 <_fstat_r+0x1c>
 8006fb2:	682b      	ldr	r3, [r5, #0]
 8006fb4:	b103      	cbz	r3, 8006fb8 <_fstat_r+0x1c>
 8006fb6:	6023      	str	r3, [r4, #0]
 8006fb8:	bd38      	pop	{r3, r4, r5, pc}
 8006fba:	bf00      	nop
 8006fbc:	20000b10 	.word	0x20000b10

08006fc0 <_isatty_r>:
 8006fc0:	b538      	push	{r3, r4, r5, lr}
 8006fc2:	4d06      	ldr	r5, [pc, #24]	; (8006fdc <_isatty_r+0x1c>)
 8006fc4:	2300      	movs	r3, #0
 8006fc6:	4604      	mov	r4, r0
 8006fc8:	4608      	mov	r0, r1
 8006fca:	602b      	str	r3, [r5, #0]
 8006fcc:	f7fa f834 	bl	8001038 <_isatty>
 8006fd0:	1c43      	adds	r3, r0, #1
 8006fd2:	d102      	bne.n	8006fda <_isatty_r+0x1a>
 8006fd4:	682b      	ldr	r3, [r5, #0]
 8006fd6:	b103      	cbz	r3, 8006fda <_isatty_r+0x1a>
 8006fd8:	6023      	str	r3, [r4, #0]
 8006fda:	bd38      	pop	{r3, r4, r5, pc}
 8006fdc:	20000b10 	.word	0x20000b10

08006fe0 <__assert_func>:
 8006fe0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8006fe2:	4614      	mov	r4, r2
 8006fe4:	461a      	mov	r2, r3
 8006fe6:	4b09      	ldr	r3, [pc, #36]	; (800700c <__assert_func+0x2c>)
 8006fe8:	681b      	ldr	r3, [r3, #0]
 8006fea:	4605      	mov	r5, r0
 8006fec:	68d8      	ldr	r0, [r3, #12]
 8006fee:	b14c      	cbz	r4, 8007004 <__assert_func+0x24>
 8006ff0:	4b07      	ldr	r3, [pc, #28]	; (8007010 <__assert_func+0x30>)
 8006ff2:	9100      	str	r1, [sp, #0]
 8006ff4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8006ff8:	4906      	ldr	r1, [pc, #24]	; (8007014 <__assert_func+0x34>)
 8006ffa:	462b      	mov	r3, r5
 8006ffc:	f000 f82e 	bl	800705c <fiprintf>
 8007000:	f000 f83e 	bl	8007080 <abort>
 8007004:	4b04      	ldr	r3, [pc, #16]	; (8007018 <__assert_func+0x38>)
 8007006:	461c      	mov	r4, r3
 8007008:	e7f3      	b.n	8006ff2 <__assert_func+0x12>
 800700a:	bf00      	nop
 800700c:	2000069c 	.word	0x2000069c
 8007010:	08008f17 	.word	0x08008f17
 8007014:	08008f24 	.word	0x08008f24
 8007018:	08007432 	.word	0x08007432

0800701c <__ascii_mbtowc>:
 800701c:	b082      	sub	sp, #8
 800701e:	b901      	cbnz	r1, 8007022 <__ascii_mbtowc+0x6>
 8007020:	a901      	add	r1, sp, #4
 8007022:	b142      	cbz	r2, 8007036 <__ascii_mbtowc+0x1a>
 8007024:	b14b      	cbz	r3, 800703a <__ascii_mbtowc+0x1e>
 8007026:	7813      	ldrb	r3, [r2, #0]
 8007028:	600b      	str	r3, [r1, #0]
 800702a:	7812      	ldrb	r2, [r2, #0]
 800702c:	1e10      	subs	r0, r2, #0
 800702e:	bf18      	it	ne
 8007030:	2001      	movne	r0, #1
 8007032:	b002      	add	sp, #8
 8007034:	4770      	bx	lr
 8007036:	4610      	mov	r0, r2
 8007038:	e7fb      	b.n	8007032 <__ascii_mbtowc+0x16>
 800703a:	f06f 0001 	mvn.w	r0, #1
 800703e:	e7f8      	b.n	8007032 <__ascii_mbtowc+0x16>

08007040 <__ascii_wctomb>:
 8007040:	b149      	cbz	r1, 8007056 <__ascii_wctomb+0x16>
 8007042:	2aff      	cmp	r2, #255	; 0xff
 8007044:	bf85      	ittet	hi
 8007046:	238a      	movhi	r3, #138	; 0x8a
 8007048:	6003      	strhi	r3, [r0, #0]
 800704a:	700a      	strbls	r2, [r1, #0]
 800704c:	f04f 30ff 	movhi.w	r0, #4294967295
 8007050:	bf98      	it	ls
 8007052:	2001      	movls	r0, #1
 8007054:	4770      	bx	lr
 8007056:	4608      	mov	r0, r1
 8007058:	4770      	bx	lr
	...

0800705c <fiprintf>:
 800705c:	b40e      	push	{r1, r2, r3}
 800705e:	b503      	push	{r0, r1, lr}
 8007060:	4601      	mov	r1, r0
 8007062:	ab03      	add	r3, sp, #12
 8007064:	4805      	ldr	r0, [pc, #20]	; (800707c <fiprintf+0x20>)
 8007066:	f853 2b04 	ldr.w	r2, [r3], #4
 800706a:	6800      	ldr	r0, [r0, #0]
 800706c:	9301      	str	r3, [sp, #4]
 800706e:	f7ff fd6b 	bl	8006b48 <_vfiprintf_r>
 8007072:	b002      	add	sp, #8
 8007074:	f85d eb04 	ldr.w	lr, [sp], #4
 8007078:	b003      	add	sp, #12
 800707a:	4770      	bx	lr
 800707c:	2000069c 	.word	0x2000069c

08007080 <abort>:
 8007080:	b508      	push	{r3, lr}
 8007082:	2006      	movs	r0, #6
 8007084:	f000 f82c 	bl	80070e0 <raise>
 8007088:	2001      	movs	r0, #1
 800708a:	f7f9 ffb9 	bl	8001000 <_exit>

0800708e <_raise_r>:
 800708e:	291f      	cmp	r1, #31
 8007090:	b538      	push	{r3, r4, r5, lr}
 8007092:	4604      	mov	r4, r0
 8007094:	460d      	mov	r5, r1
 8007096:	d904      	bls.n	80070a2 <_raise_r+0x14>
 8007098:	2316      	movs	r3, #22
 800709a:	6003      	str	r3, [r0, #0]
 800709c:	f04f 30ff 	mov.w	r0, #4294967295
 80070a0:	bd38      	pop	{r3, r4, r5, pc}
 80070a2:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80070a4:	b112      	cbz	r2, 80070ac <_raise_r+0x1e>
 80070a6:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80070aa:	b94b      	cbnz	r3, 80070c0 <_raise_r+0x32>
 80070ac:	4620      	mov	r0, r4
 80070ae:	f000 f831 	bl	8007114 <_getpid_r>
 80070b2:	462a      	mov	r2, r5
 80070b4:	4601      	mov	r1, r0
 80070b6:	4620      	mov	r0, r4
 80070b8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80070bc:	f000 b818 	b.w	80070f0 <_kill_r>
 80070c0:	2b01      	cmp	r3, #1
 80070c2:	d00a      	beq.n	80070da <_raise_r+0x4c>
 80070c4:	1c59      	adds	r1, r3, #1
 80070c6:	d103      	bne.n	80070d0 <_raise_r+0x42>
 80070c8:	2316      	movs	r3, #22
 80070ca:	6003      	str	r3, [r0, #0]
 80070cc:	2001      	movs	r0, #1
 80070ce:	e7e7      	b.n	80070a0 <_raise_r+0x12>
 80070d0:	2400      	movs	r4, #0
 80070d2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80070d6:	4628      	mov	r0, r5
 80070d8:	4798      	blx	r3
 80070da:	2000      	movs	r0, #0
 80070dc:	e7e0      	b.n	80070a0 <_raise_r+0x12>
	...

080070e0 <raise>:
 80070e0:	4b02      	ldr	r3, [pc, #8]	; (80070ec <raise+0xc>)
 80070e2:	4601      	mov	r1, r0
 80070e4:	6818      	ldr	r0, [r3, #0]
 80070e6:	f7ff bfd2 	b.w	800708e <_raise_r>
 80070ea:	bf00      	nop
 80070ec:	2000069c 	.word	0x2000069c

080070f0 <_kill_r>:
 80070f0:	b538      	push	{r3, r4, r5, lr}
 80070f2:	4d07      	ldr	r5, [pc, #28]	; (8007110 <_kill_r+0x20>)
 80070f4:	2300      	movs	r3, #0
 80070f6:	4604      	mov	r4, r0
 80070f8:	4608      	mov	r0, r1
 80070fa:	4611      	mov	r1, r2
 80070fc:	602b      	str	r3, [r5, #0]
 80070fe:	f7f9 ff77 	bl	8000ff0 <_kill>
 8007102:	1c43      	adds	r3, r0, #1
 8007104:	d102      	bne.n	800710c <_kill_r+0x1c>
 8007106:	682b      	ldr	r3, [r5, #0]
 8007108:	b103      	cbz	r3, 800710c <_kill_r+0x1c>
 800710a:	6023      	str	r3, [r4, #0]
 800710c:	bd38      	pop	{r3, r4, r5, pc}
 800710e:	bf00      	nop
 8007110:	20000b10 	.word	0x20000b10

08007114 <_getpid_r>:
 8007114:	f7f9 bf6a 	b.w	8000fec <_getpid>

08007118 <expf>:
 8007118:	b508      	push	{r3, lr}
 800711a:	ed2d 8b02 	vpush	{d8}
 800711e:	eef0 8a40 	vmov.f32	s17, s0
 8007122:	f000 f85f 	bl	80071e4 <__ieee754_expf>
 8007126:	eeb0 8a40 	vmov.f32	s16, s0
 800712a:	eeb0 0a68 	vmov.f32	s0, s17
 800712e:	f000 f829 	bl	8007184 <finitef>
 8007132:	b160      	cbz	r0, 800714e <expf+0x36>
 8007134:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8007174 <expf+0x5c>
 8007138:	eef4 8ae7 	vcmpe.f32	s17, s15
 800713c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007140:	dd0a      	ble.n	8007158 <expf+0x40>
 8007142:	f7fe fa5b 	bl	80055fc <__errno>
 8007146:	ed9f 8a0c 	vldr	s16, [pc, #48]	; 8007178 <expf+0x60>
 800714a:	2322      	movs	r3, #34	; 0x22
 800714c:	6003      	str	r3, [r0, #0]
 800714e:	eeb0 0a48 	vmov.f32	s0, s16
 8007152:	ecbd 8b02 	vpop	{d8}
 8007156:	bd08      	pop	{r3, pc}
 8007158:	eddf 7a08 	vldr	s15, [pc, #32]	; 800717c <expf+0x64>
 800715c:	eef4 8ae7 	vcmpe.f32	s17, s15
 8007160:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007164:	d5f3      	bpl.n	800714e <expf+0x36>
 8007166:	f7fe fa49 	bl	80055fc <__errno>
 800716a:	2322      	movs	r3, #34	; 0x22
 800716c:	ed9f 8a04 	vldr	s16, [pc, #16]	; 8007180 <expf+0x68>
 8007170:	6003      	str	r3, [r0, #0]
 8007172:	e7ec      	b.n	800714e <expf+0x36>
 8007174:	42b17217 	.word	0x42b17217
 8007178:	7f800000 	.word	0x7f800000
 800717c:	c2cff1b5 	.word	0xc2cff1b5
 8007180:	00000000 	.word	0x00000000

08007184 <finitef>:
 8007184:	b082      	sub	sp, #8
 8007186:	ed8d 0a01 	vstr	s0, [sp, #4]
 800718a:	9801      	ldr	r0, [sp, #4]
 800718c:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
 8007190:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 8007194:	bfac      	ite	ge
 8007196:	2000      	movge	r0, #0
 8007198:	2001      	movlt	r0, #1
 800719a:	b002      	add	sp, #8
 800719c:	4770      	bx	lr

0800719e <with_errnof>:
 800719e:	b513      	push	{r0, r1, r4, lr}
 80071a0:	4604      	mov	r4, r0
 80071a2:	ed8d 0a01 	vstr	s0, [sp, #4]
 80071a6:	f7fe fa29 	bl	80055fc <__errno>
 80071aa:	ed9d 0a01 	vldr	s0, [sp, #4]
 80071ae:	6004      	str	r4, [r0, #0]
 80071b0:	b002      	add	sp, #8
 80071b2:	bd10      	pop	{r4, pc}

080071b4 <xflowf>:
 80071b4:	b130      	cbz	r0, 80071c4 <xflowf+0x10>
 80071b6:	eef1 7a40 	vneg.f32	s15, s0
 80071ba:	ee27 0a80 	vmul.f32	s0, s15, s0
 80071be:	2022      	movs	r0, #34	; 0x22
 80071c0:	f7ff bfed 	b.w	800719e <with_errnof>
 80071c4:	eef0 7a40 	vmov.f32	s15, s0
 80071c8:	e7f7      	b.n	80071ba <xflowf+0x6>
	...

080071cc <__math_uflowf>:
 80071cc:	ed9f 0a01 	vldr	s0, [pc, #4]	; 80071d4 <__math_uflowf+0x8>
 80071d0:	f7ff bff0 	b.w	80071b4 <xflowf>
 80071d4:	10000000 	.word	0x10000000

080071d8 <__math_oflowf>:
 80071d8:	ed9f 0a01 	vldr	s0, [pc, #4]	; 80071e0 <__math_oflowf+0x8>
 80071dc:	f7ff bfea 	b.w	80071b4 <xflowf>
 80071e0:	70000000 	.word	0x70000000

080071e4 <__ieee754_expf>:
 80071e4:	ee10 2a10 	vmov	r2, s0
 80071e8:	f022 4300 	bic.w	r3, r2, #2147483648	; 0x80000000
 80071ec:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80071f0:	d902      	bls.n	80071f8 <__ieee754_expf+0x14>
 80071f2:	ee30 0a00 	vadd.f32	s0, s0, s0
 80071f6:	4770      	bx	lr
 80071f8:	ea4f 71d2 	mov.w	r1, r2, lsr #31
 80071fc:	d106      	bne.n	800720c <__ieee754_expf+0x28>
 80071fe:	eddf 7a4e 	vldr	s15, [pc, #312]	; 8007338 <__ieee754_expf+0x154>
 8007202:	2900      	cmp	r1, #0
 8007204:	bf18      	it	ne
 8007206:	eeb0 0a67 	vmovne.f32	s0, s15
 800720a:	4770      	bx	lr
 800720c:	484b      	ldr	r0, [pc, #300]	; (800733c <__ieee754_expf+0x158>)
 800720e:	4282      	cmp	r2, r0
 8007210:	dd02      	ble.n	8007218 <__ieee754_expf+0x34>
 8007212:	2000      	movs	r0, #0
 8007214:	f7ff bfe0 	b.w	80071d8 <__math_oflowf>
 8007218:	2a00      	cmp	r2, #0
 800721a:	da05      	bge.n	8007228 <__ieee754_expf+0x44>
 800721c:	4a48      	ldr	r2, [pc, #288]	; (8007340 <__ieee754_expf+0x15c>)
 800721e:	4293      	cmp	r3, r2
 8007220:	d902      	bls.n	8007228 <__ieee754_expf+0x44>
 8007222:	2000      	movs	r0, #0
 8007224:	f7ff bfd2 	b.w	80071cc <__math_uflowf>
 8007228:	4a46      	ldr	r2, [pc, #280]	; (8007344 <__ieee754_expf+0x160>)
 800722a:	4293      	cmp	r3, r2
 800722c:	eef7 5a00 	vmov.f32	s11, #112	; 0x3f800000  1.0
 8007230:	d952      	bls.n	80072d8 <__ieee754_expf+0xf4>
 8007232:	4a45      	ldr	r2, [pc, #276]	; (8007348 <__ieee754_expf+0x164>)
 8007234:	4293      	cmp	r3, r2
 8007236:	ea4f 0281 	mov.w	r2, r1, lsl #2
 800723a:	d834      	bhi.n	80072a6 <__ieee754_expf+0xc2>
 800723c:	4b43      	ldr	r3, [pc, #268]	; (800734c <__ieee754_expf+0x168>)
 800723e:	4413      	add	r3, r2
 8007240:	ed93 7a00 	vldr	s14, [r3]
 8007244:	4b42      	ldr	r3, [pc, #264]	; (8007350 <__ieee754_expf+0x16c>)
 8007246:	4413      	add	r3, r2
 8007248:	ee30 7a47 	vsub.f32	s14, s0, s14
 800724c:	f1c1 0201 	rsb	r2, r1, #1
 8007250:	edd3 7a00 	vldr	s15, [r3]
 8007254:	1a52      	subs	r2, r2, r1
 8007256:	ee37 0a67 	vsub.f32	s0, s14, s15
 800725a:	ee20 6a00 	vmul.f32	s12, s0, s0
 800725e:	ed9f 5a3d 	vldr	s10, [pc, #244]	; 8007354 <__ieee754_expf+0x170>
 8007262:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8007358 <__ieee754_expf+0x174>
 8007266:	eee6 6a05 	vfma.f32	s13, s12, s10
 800726a:	ed9f 5a3c 	vldr	s10, [pc, #240]	; 800735c <__ieee754_expf+0x178>
 800726e:	eea6 5a86 	vfma.f32	s10, s13, s12
 8007272:	eddf 6a3b 	vldr	s13, [pc, #236]	; 8007360 <__ieee754_expf+0x17c>
 8007276:	eee5 6a06 	vfma.f32	s13, s10, s12
 800727a:	ed9f 5a3a 	vldr	s10, [pc, #232]	; 8007364 <__ieee754_expf+0x180>
 800727e:	eea6 5a86 	vfma.f32	s10, s13, s12
 8007282:	eef0 6a40 	vmov.f32	s13, s0
 8007286:	eee5 6a46 	vfms.f32	s13, s10, s12
 800728a:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 800728e:	ee20 5a26 	vmul.f32	s10, s0, s13
 8007292:	bb92      	cbnz	r2, 80072fa <__ieee754_expf+0x116>
 8007294:	ee76 6ac6 	vsub.f32	s13, s13, s12
 8007298:	eec5 7a26 	vdiv.f32	s15, s10, s13
 800729c:	ee37 0ac0 	vsub.f32	s0, s15, s0
 80072a0:	ee35 0ac0 	vsub.f32	s0, s11, s0
 80072a4:	4770      	bx	lr
 80072a6:	4b30      	ldr	r3, [pc, #192]	; (8007368 <__ieee754_expf+0x184>)
 80072a8:	ed9f 7a30 	vldr	s14, [pc, #192]	; 800736c <__ieee754_expf+0x188>
 80072ac:	eddf 6a30 	vldr	s13, [pc, #192]	; 8007370 <__ieee754_expf+0x18c>
 80072b0:	4413      	add	r3, r2
 80072b2:	edd3 7a00 	vldr	s15, [r3]
 80072b6:	eee0 7a07 	vfma.f32	s15, s0, s14
 80072ba:	eeb0 7a40 	vmov.f32	s14, s0
 80072be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80072c2:	ee17 2a90 	vmov	r2, s15
 80072c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80072ca:	eea7 7ae6 	vfms.f32	s14, s15, s13
 80072ce:	eddf 6a29 	vldr	s13, [pc, #164]	; 8007374 <__ieee754_expf+0x190>
 80072d2:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80072d6:	e7be      	b.n	8007256 <__ieee754_expf+0x72>
 80072d8:	f1b3 5f50 	cmp.w	r3, #872415232	; 0x34000000
 80072dc:	d20b      	bcs.n	80072f6 <__ieee754_expf+0x112>
 80072de:	eddf 6a26 	vldr	s13, [pc, #152]	; 8007378 <__ieee754_expf+0x194>
 80072e2:	ee70 6a26 	vadd.f32	s13, s0, s13
 80072e6:	eef4 6ae5 	vcmpe.f32	s13, s11
 80072ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80072ee:	dd02      	ble.n	80072f6 <__ieee754_expf+0x112>
 80072f0:	ee30 0a25 	vadd.f32	s0, s0, s11
 80072f4:	4770      	bx	lr
 80072f6:	2200      	movs	r2, #0
 80072f8:	e7af      	b.n	800725a <__ieee754_expf+0x76>
 80072fa:	ee36 6a66 	vsub.f32	s12, s12, s13
 80072fe:	f112 0f7d 	cmn.w	r2, #125	; 0x7d
 8007302:	eec5 6a06 	vdiv.f32	s13, s10, s12
 8007306:	bfb8      	it	lt
 8007308:	3264      	addlt	r2, #100	; 0x64
 800730a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800730e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8007312:	ee75 7ae7 	vsub.f32	s15, s11, s15
 8007316:	ee17 3a90 	vmov	r3, s15
 800731a:	bfab      	itete	ge
 800731c:	eb03 53c2 	addge.w	r3, r3, r2, lsl #23
 8007320:	eb03 53c2 	addlt.w	r3, r3, r2, lsl #23
 8007324:	ee00 3a10 	vmovge	s0, r3
 8007328:	eddf 7a14 	vldrlt	s15, [pc, #80]	; 800737c <__ieee754_expf+0x198>
 800732c:	bfbc      	itt	lt
 800732e:	ee00 3a10 	vmovlt	s0, r3
 8007332:	ee20 0a27 	vmullt.f32	s0, s0, s15
 8007336:	4770      	bx	lr
 8007338:	00000000 	.word	0x00000000
 800733c:	42b17217 	.word	0x42b17217
 8007340:	42cff1b5 	.word	0x42cff1b5
 8007344:	3eb17218 	.word	0x3eb17218
 8007348:	3f851591 	.word	0x3f851591
 800734c:	0800905c 	.word	0x0800905c
 8007350:	08009064 	.word	0x08009064
 8007354:	3331bb4c 	.word	0x3331bb4c
 8007358:	b5ddea0e 	.word	0xb5ddea0e
 800735c:	388ab355 	.word	0x388ab355
 8007360:	bb360b61 	.word	0xbb360b61
 8007364:	3e2aaaab 	.word	0x3e2aaaab
 8007368:	08009054 	.word	0x08009054
 800736c:	3fb8aa3b 	.word	0x3fb8aa3b
 8007370:	3f317180 	.word	0x3f317180
 8007374:	3717f7d1 	.word	0x3717f7d1
 8007378:	7149f2ca 	.word	0x7149f2ca
 800737c:	0d800000 	.word	0x0d800000

08007380 <_init>:
 8007380:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007382:	bf00      	nop
 8007384:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007386:	bc08      	pop	{r3}
 8007388:	469e      	mov	lr, r3
 800738a:	4770      	bx	lr

0800738c <_fini>:
 800738c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800738e:	bf00      	nop
 8007390:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007392:	bc08      	pop	{r3}
 8007394:	469e      	mov	lr, r3
 8007396:	4770      	bx	lr
